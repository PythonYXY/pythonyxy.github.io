{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["10.","109.","110.","113.","114.","1143.","115.","117.","120.","121.","122.","123.","127.","1275.","129.","130.","131.","132.","136.","137.","138.","139.","14.","140.","142.","143.","144.","145.","15.","152.","153.","154.","166.","172.","173.","174.","187.","188.","19.","1～n整数中1出现的次数","20.表示数值的字符串","201.","202.","206.","209.","215.","22.","23.","230.","236.","24.反转链表","240.","25.","26.","264.","28.","287.","29.","292.","3.","30.","300.","307.","309.","31.","313.","32","33.","337.","347.","35.","354.","355.","36.","373.","39.","4.","4.二维数组中的查找","40.","41.","43.","430.","438.","44.","45.","459.","46.","460.","48.","49.","5.","51.","52.","522.","523","560.","69.","714.","72.","76.","796.","8.二叉树的下一个节点","85.","86.","87.","89.","9.","91.","92.","940.","95.","96.","97.","99.","author","content","ii","ii.","iii","iii.","introduct","iv","k","l153.","l154.","l191.","l287.","lfu缓存","nim","n皇后","pythonyxi","strstr","x的平方根","三数之和","三角形最小路径和","不同的二叉搜索树","不同的子序列","丑数","个一组翻转链表难度困难","个高频元素","之前在刷leetcode的过程中，发现很多题目做过就忘掉了，再次碰到类似的甚至是相同的题目是依然感觉无从下手。其实这往往是因为对于题目没有理解，掌握透。因此在之后的刷题过程中，刻意放慢了脚步，每做完一道题，都去主动思考这种算法的时空复杂度是多少，是否还有更优的解法，能否做到举一反三等。","乘积最大子序列","买卖股票的最佳时机","买卖股票的最佳时机含手续费","二分查找","二叉搜索树与双向链表","二叉搜索树中第k小的元素","二叉搜索树的后序遍历序列","二叉搜索树迭代器","二叉树","二叉树展开为链表","二叉树的前序遍历","二叉树的后序遍历","二叉树的最近公共祖先","二进制中1的个数","交错字符串","从上到下打印二叉树","位1的个数","位运算","俄罗斯套娃信封问题","分割回文串","分数到小数","分隔链表","前","剑指offer","剪梯子","动态规划","包含min函数的栈","区域和检索","单词拆分","单词接龙","反转链表","只出现一次的数字","合并k个排序链表","和为k的子数组","地下城游戏","填充每个节点的下一个右侧节点指针","复制带随机指针的链表","复杂链表的复制","如果有任何问题和意见欢迎在issue区提出。","字符串","实现","对称的二叉树","寻找两个有序数组的中位数","寻找旋转排序数组中的最小值","寻找重复数","平衡二叉树","快乐数","恢复二叉搜索树","扁平化多级双向链表","打家劫舍","扰乱字符串","找出井字棋的获胜者","找到字符串中所有字母异位词","把数字翻译成字符串","把数组排成最小的数","搜索","搜索二维矩阵","数字序列中某一位的数字","数字范围按位与","数据流中的中位数","数组中出现次数超过一半的数字","数组中的第k个最大元素","数组中的重复数字","数组可修改","数论","旋转字符串","无重复字符的最长子串","最佳买卖股票时机含冷冻期","最大矩形","最小的k个数","最小覆盖子串","最长上升子序列","最长不含重复字符的子字符串","最长公共子序列","最长回文子串","最长特殊序列","有序链表转换二叉搜索树","本书主要记录了一些我在刷leetcode过程中碰到的一些个人认为比较经典题目的思路和题解。","查找和最小的k对数字","栈的压入、弹出序列","树的子结构","格雷编码","正则表达式匹配","求根到叶子节点数字之和","游戏","环形链表","用两个栈实现队列","目前只有java语言的实现，后续考虑会加入javascript以及go语言的实现。但是鉴于个人有限的精力和时间，也可能不会实施......","章节的编排形式参考了leetcode的题型分类，例如二叉树，字符串以及链表等。题目以middle难度居多，同时含有少量的easy题以及极少量的hard题。题目没有特定的顺序，纯粹按照了自己的做题顺序来编排。最后一章主要是《剑指offer》上的题目，其中有一部分题目是与之前章节重合的。","线性表","编辑距离","缺失的第一个正数","被围绕的区域","解码方法","设计推特","超级丑数","路径总和","连续子数组和","通配符匹配","重复的dna序列","重复的子字符串","重排链表","链表","链表中倒数第k个节点","长度最小的子数组","阶乘后的零","顺时针打印矩阵"],"二分查找/287. 寻找重复数.html":["!=","(int","(left","(num","(re","(slow","+","0)","0,","0;","1","1:","1;","2","287.","2:","3",":","=","==",">>","[1,3,4,2,2]","[3,1,3,4,2]","class","counter","fast","findduplicate(int[]","ii的解法：","int","left","left;","len","mid","mid)","mid;","n","num","nums)","nums.length;","nums[nums[fast]];","nums[res];","nums[slow];","nums，其数字都在","n），可知至少存在一个重复的整数。假设只有一个重复的整数，找出这个重复的数。","o(1)","o(n2)","public","re","res;","return","right","slow","slow)","solut","{","||","}","。","不能更改原数组（假设数组是只读的）。","个整数的数组","之间（包括","之间，每一次二分都可以将搜索区间缩小一半。","代码1","代码2","到","只能使用额外的","和","寻找重复数","将数组内的元素值看作是该节点指向的下个节点在数组中的索引值，这样就可以将数组转化为链表进行处理。由于元素值是从1开始，而索引值是从0开始，因此链表的长度为最大元素值加1，也就是说链表中一定存在两个节点有着相同的值，它们指向同一个节点，也即链表中有环的存在。因此本题可以转化为寻找链表中环入口的问题。具体可参考题目环形链表","思路1（二分法）","思路2（快慢指针）","数组中只有一个重复的数字，但它可能不止重复出现一次。","时间复杂度小于","的空间。","示例","给定一个包含","设置快慢指针从a1出发。假设slow和fast在a3相遇，根据以上公式（fast在与slow相遇前走过了k圈）。head从a1出发，slow从a3出发，经过a步以后，两点将在a2（环的入口）相遇。","说明：","输入:","输出:","这道题的关键是对要定位的“数”做二分，而不是对数组的索引做二分。要定位的“数”根据题意在","题目描述"],"二分查找/154. 寻找旋转排序数组中的最小值 II.html":["(","(left","(nums[mid]",")。","+","0","0,","1","1,","154.","1;","1：","2,","2]与[2,","2]，因此只能通过减少right来缩小区间进行进一步的搜索。该算法在最坏情况下的时间复杂度为o(n)。","2：",";","=","==",">",">>","[0,1,2,4,5,6,7]","[1,3,5]","[2,2,2,0,1]","[4,5,6,7,0,1,2]","class","findmin(int[]","ii","int","left","mid","mid;","nums)","nums.length","nums[left];","nums[right])","public","return","right","solut","{","}","代码","例如，数组","假设按照升序排序的数组在预先未知的某个点上进行了旋转。","允许重复会影响算法的时间复杂度吗？会如何影响，为什么？","可能变为","在153的基础上增加了重复元素的情况。这里需要额外处理中间元素与末尾元素相同的情况。这种情况下无法判断最小元素是在左区间还是右区间，例如：[2,","寻找旋转排序数组中的最小值","思路","注意数组中可能存在重复的元素。","的延伸题目。","示例","说明：","请找出其中最小的元素。","输入:","输出:","这道题是","题目描述"],"二分查找/300. 最长上升子序列.html":["(index","(int","(left","(nums.length","(tail[mid]","+","//","0;","1","1))","1);","1;","1、使tail数组初始为空","2、在遍历数组","300.","3、在有序数组","4","4、最后构造出来的","4。","=",">>","[10,9,2,5,3,7,101,18]","[2,3,7,101]，它的长度是","arraylist","arraylist<>();","class","collections.binarysearch(tail,","dp[i]","dp[i]);","dp[j]","end;","index","int","j","left","lengthoflis(int[]","log","math.max(dp[i],","math.max(res,","max{1","n)","new","num","nums)","nums[i]);","nums[i];","nums[j])","num，如果这个数严格大于有序数组","o(n","o(n2)","public","re","res;","return","right","solut","tail","tail.add(nums[i]);","tail.get(tail.size()","tail[++end]","tail[end])","{","}","。","个严格大于","中查找第","中的每一个前缀都是一个最“紧致”的上升子序列。所谓最“紧致”的上升子序列是指在所有相同长度的上升子序列中该子序列的首尾元素差最小（这是贪心的关键）。构造","中第i个索引的元素为结尾的最长上升子序列的长度（注意必须是以该元素为结尾）","为以","代码1","代码2","你算法的时间复杂度应该为","你能将算法的时间复杂度降低到","借助collections类库做二分搜索：","可能会有多种最长上升子序列的组合，你只需要输出对应的长度即可。","吗?","在有序数组","定义状态","思路1（动态规划）","思路2（贪心算法+二分查找）","放在有序数组","数组的流程如下：","数组的长度即为所求结果。","时间复杂度为o(n^2)","更高效的版本：","最长上升子序列","最长的上升子序列是","状态转移方程则为：","的后面，否则进入第3步","的最后一个元素，就把","的过程中，每来一个新数","的那个数，用num替换","的那个数，用num替换；","示例:","给定一个无序的整数数组，找到其中最长上升子序列的长度。","解释:","设置一个数组","该算法的时间复杂度为o(n","说明:","输入:","输出:","进阶:","题目描述","，tail"],"二分查找/69. X的平方根.html":["(left","(mid","(r","(x","(x^2","*","+","/","0;","1:","1;","2","2.82842...,","2:","4","69.","8","=",">",">>",">>>","a)/(2x)，也就是(x+a/x)/2。","a=0的一个正实根，这个函数的导数是2x。也就是说，函数上任一点(x,f(x))处的切线斜率是2x。那么，x","a=0的根。根号a实际上就是x^2","a得到x","class","f(x)/(2x)就是一个比x更接近的近似值。代入f(x)=x^2","int","left","left;","matrix67)","mid","mid)","mid;","mysqrt(int","public","r","r)","r;","return","right","r）而不是（r","solut","sqrt(int","x","x)","x)。同时对于迭代方程也要做一下优化，即使用不带符号的右移操作替代除以2。","x;","x的平方根","{","}","下面这种方法可以很有效地求出根号a的近似值：首先随便猜一个近似值x，然后不断令x等于x和a/x的平均数，迭代个六七次后x的值就已经相当精确了。","代码1","代码2","使用牛顿迭代法来解决。(from","函数。","另外为了排除死循环，本题中需要选择右中位数。","另外为了防止整型溢出的情况出现，循环终止条件判定代码与二分法一样，需要用（r","实现","思路1","思路2","是非负整数。","用二分法来解决。","由于返回类型是整数，小数部分将被舍去。","由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。","的平方根是","的平方根，其中","示例","计算并返回","说明:","输入:","输出:","这种算法的原理很简单，我们仅仅是不断用(x,f(x))的切线来逼近方程x^2","需要注意的是本题中排除中位数的逻辑是如果一个数的平方大于输入参数，那它一定不是结果值，可以排除。","题目描述"],"二分查找/354. 俄罗斯套娃信封问题.html":["(a[0]","(envelopes.length","(int","(left","(tail[mid][1]","(w,","0;","1;","3","3,","354.",":","=","==","=>",">>","?","[2,3]","[5,4]","[6,7]。","[[5,4],[6,4],[6,7],[2,3]]","a[0]","a[1]","b[0]","b[0]));","b[1]","class","end","end;","envelop","envelopes)","envelopes[0];","envelopes[i];","h)","int","int[][]","int[envelopes.length][2];","left","maxenvelopes(int[][]","new","public","right","solut","tail","tail[++end]","tail[0]","tail[end][1])","{","}","不允许旋转信封。","代码","俄罗斯套娃信封问题","出现。当另一个信封的宽度和高度都比这个信封大的时候，这个信封就可以放进另一个信封里，如同俄罗斯套娃一样。","对envelopes数组进行排序后，可以转化成一个最长上升子序列问题。本题的难点就在于选择合适的排序策略。","对envelopes数组进行排序时，首先按照高度升序排序。对于高度相同的元素，按照宽度降序排序，这是因为同一个高度的信封最多只能有一个被选中，所选中的信封是能够容纳前一个被选中的信封中最小宽度的信封。按照lis算法从左至右的遍历顺序，这样的排序策略更加易于处理。","思路","最多信封的个数为","示例:","组合为:","给定一些标记了宽度和高度的信封，宽度和高度以整数对形式","解释:","说明:","请计算最多能有多少个信封能组成一组“俄罗斯套娃”信封（即可以把一个信封放到另一个信封里面）。","输入:","输出:","题目描述"],"二分查找/153. 寻找旋转排序数组中的最小值.html":["(","(left","(nums[mid]",")。","+","0","0,","1","153.","1:","1;","2:","=",">",">>","[0,1,2,4,5,6,7]","[3,4,5,1,2]","[4,5,6,7,0,1,2]","class","findmin(int[]","int","left","mid","mid;","nums)","nums.length","nums[left];","nums[right])","public","return","right","solut","{","}","代码","你可以假设数组中不存在重复元素。","使用二分法可以将时间复杂度缩减到o(logn)。","例如，数组","假设按照升序排序的数组在预先未知的某个点上进行了旋转。","可能变为","寻找旋转排序数组中的最小值","思路","示例","请找出其中最小的元素。","输入:","输出:","这里排除中位数的逻辑是如果mid上的值大于right上的值，则最小元素一定处于右区间（不包含mid）。","题目描述"],"线性表/560. 和为K的子数组.html":["(int",",","0,","0;","1","1);","1000,","1000]","1]小k（i","1]比前j个数的和sum[j","1e7,","1e7]。","2","20,000]。","560.",":","=","[","[1,","[1,1,1],","[1,1]","class","hashmap<>(){{","int","k","k)","k，你需要找到该数组中和为","map","map.put(0,","new","nums,","public","re","solut","subarraysum(int[]","sum","{","}};","与","为两种不同的情况。","代码","和为k的子数组","思路","数组中元素的范围是","数组的长度为","是求和为0的子数组这道题基础上的扩展。如果数组前i个数的和sum[i","的范围是","的连续的子数组的个数。","示例","给定一个整数数组和一个整数","说明","输入:num","输出:","，且整数"],"线性表/15. 三数之和.html":["&&","(arrays.aslist(nums[i++],","(int","(j","(sum","+","0","0,","1,","15.","1]","1],","2,","2;","2]","4]，","=","==",">","[","]","],","arraylist<>();","arrays.sort(nums);","a，b，c","b","c","class","i++;","k","list>","n","new","num","nums)","nums[i","nums[i]))","nums[j","nums[k])));","nums，判断","public","re","res;","return","solut","target","threesum(int[]","{","||","}","}d","三数之和","个整数的数组","中是否存在三个元素","主要思路就是将3sum转化成2sum：首先将数组按照升序排序，然后固定第三个数去搜索前两个数。这里需要注意的是对于重复结果的处理。","代码","例如,","思路","注意：答案中不可以包含重复的三元组。","满足要求的三元组集合为：","给定一个包含","给定数组","，使得","？找出所有满足条件且不重复的三元组。"],"线性表/523 连续子数组和.html":["%","(int","+","0;","0。可以考虑将计算前缀和改成计算前缀和余k的结果。如果长度为i的前缀和余k等于长度为j的前缀和余k（i","1)","1);","1:","2","2:","2，总和为","32","42。","5","523","6","6。","=","==","[2,4]","[23,2,4,6,7],","[23,2,6,4,7],","[23,2,6,4,7]是大小为","boolean","checksubarraysum(int[]","class","false;","hashmap<>();","i);","int","k","k)","k，编写一个函数来判断该数组是否含有连续的子数组，其大小至少为","map","map.get(sum)","map.put(0,","map.put(sum,","n","n*k，其中","new","nums,","public","return","solut","sum","true","true;","{","}","也是一个整数。","代码","位有符号整数范围内。","你可以认为所有数字总和在","思路","思路依然与连续子数组和为0差不多，只不过这里要求和是k的倍数，也即subarraysum","数组的长度不会超过10,000。","是一个大小为","的倍数，即总和为","的子数组，并且和为","示例","给定一个包含非负数的数组和一个目标整数","解释:","说明:","输入:","输出:","连续子数组和"],"线性表/215. 数组中的第K个最大元素.html":["(int","(start","+","0,","1","1);","1,","1:","1、在区间范围内随机选择一个pivot，并与区间末尾的元素进行交换（这里的随机选择的方式可以尽量避免算法退化到o(n^2)。至于为什么选择末尾元素是因为这里的遍历方式是从前往后遍历的，同样的，若选择从后往前遍历就需要选择区间首部元素来进行交换了）。","2","215.","2:","2、设置一个partition索引，初始指向区间首部。在遍历区间的过程中如果发现当前索引位元素小于pivot，就将其与partition索引上的元素进行交换，同时partition增1。（将pivot放在末尾可以避免partition出界）","3、最后需要将pivot放在partition索引上。","4","5","=","==","[3,2,1,5,6,4]","[3,2,3,1,2,4,5,5,6]","class","end)","end);","end,","findkthlargest(int[]","import","int","java.util.random;","k","k)","k);","new","nums,","nums.length","nums[start];","partition(int[]","partition(nums,","partition_index","pivot_index","pivot_index,","public","random().nextint(end","return","solut","start","start,","start;","swap(nums,","target_index)","{","}","≤","个不同的元素。","个最大的元素。请注意，你需要找的是数组排序后的第","个最大的元素，而不是第","主要还是借助快速排序的思想。这里重点说下快排中划分部分的算法。","代码","你可以假设","划分算法有三步：","和","在未排序的数组中找到第","思路","总是有效的，且","数组中的第k个最大元素","数组的长度。","示例","说明:","输入:","输出:","这样在区间内partition之前的元素一定不大于pivot，而partition之后的元素一定不小于pivot。"],"线性表/209. 长度最小的子数组.html":["&&","(int","(len","(nums.length","(right","(sum[mid]","+","0)","0,","0;","0。","1);","1;","2","209.","7,","=","==",">>","[2,3,1,2,4,3]","[4,3]","class","int","int[]","int[nums.length];","integer.max_value)","integer.max_value,","left","len","len;","log","math.min(len,","minsubarraylen(int","n","n)","new","num","nums)","nums[0];","nums[i]","o(n","public","return","right","s","s)","s,","solut","sum","sum[0]","sum[i]","{","}","≥","个正整数的数组和一个正整数","代码1","代码2","使用二分法。这里需要注意一下排除中位数的逻辑。","使用双指针法。在右指针right向右遍历的过程中，左指针left在区间和大于s的情况下不断地向右指针靠近，每更新一次区间长度就比较一下是否是最短区间。","如果你已经完成了o(n)","子数组","思路1","思路2","时间复杂度的解法,","时间复杂度的解法。","是该条件下的长度最小的连续子数组。","的长度最小的连续子数组。如果不存在符合条件的连续子数组，返回","示例:","给定一个含有","解释:","请尝试","输入:","输出:","进阶:","长度最小的子数组","，找出该数组中满足其和"],"线性表/4. 寻找两个有序数组的中位数.html":["%","&&","(","(2","(i","(j","(m","(maxleft",")","+","/","//","0)","0.0;","0;","1","1:","1;","1]","1]);","1],","1];","2","2.0","2.0;","2.5","2:","2]","3)/2","3]","4.","4]","=","==",">","[1,","[2]","[3,","a,","a.length;","a[i","a[i]);","a[i]){","a[i];","arrays/solution/xun","b)","b.length;","b/","b[j","b[j])","b[j];","big","class","cn.com/problems/median","de","doubl","ensur","findmediansortedarrays(int[]","ge","https://leetcod","imax","imin","int","int[]","liang","m","m)","math.max(a[i","math.min(b[j],","maxleft","maxleft;","minright","minright)","n","n)","n))。","nums1","nums2","nums2。","o(log(m","perfect","public","return","shu","small","solut","sort","two","wei","xu","zhao","zhong","zu","{","}","不会同时为空。","代码","你可以假设","则中位数是","和","寻找两个有序数组的中位数","思路","的有序数组","示例","给定两个大小为","请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为"],"线性表/41. 缺失的第一个正数.html":["&&","(int","0","0;","1","1,1]","1:","2","2:","3","3:","41.","=","[1,2,0]","[3,4,","[7,8,9,11,12]","class","cn.com/problems/first","firstmissingpositive(int[]","int","miss","nums)","nums[i]","posit","public","solut","{","代码","你的算法的时间复杂度应为o(n)，并且只能使用常数级别的空间。","借助桶排序的思想，将正整数放在对应的索引（该正数减去1）中，如果正数超过了数组索引范围，则忽略。最后从头遍历数组，若当前索引位的元素与索引位不对应，则当前索引位加1就是确实的第一个正数。","对于数组上的每一个元素做如下操作：若当前元素是正数但与索引位不对应，如果其在数组的索引范围内，那么就将该元素与其对应位置的元素进行交换。如果交换过来的元素还满足上述条件，那么就继续进行上述操作。另外需要注意的是对于重复元素只需要交换一次。","思路","来源：力扣（leetcode）","示例","给定一个未排序的整数数组，找出其中没有出现的最小的正整数。","缺失的第一个正数","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","该题的难点在于如何在o(n)的时间复杂度内将各个正数归位。","说明:","输入:","输出:","链接：https://leetcod"],"链表/430. 扁平化多级双向链表.html":["!=","(cur","(cur.child","(cur.next","(head","*/","/*","//","1","10","11","12","2","3","4","430.","5","6","7","8","9","=","==","_child)","_child;","_next,nod","_next;","_prev,nod","_prev;","_val,nod","_val;","child","child;","childlast","childlast.next","childlast.next;","childlast;","class","cur","cur.child","cur.child.prev","cur.child;","cur.next","cur.next.prev","cur.next;","cur;","definit","flatten(nod","head)","head;","helper(cur.child);","helper(head);","helper(nod","int","next","next;","node","node()","node(int","node)","node.","node;","null","null)","null;","prev","prev;","public","return","solut","val","val;","{","{}","|","}","};","代码","您将获得一个双向链表，除了下一个和前一个指针之外，它还有一个子指针，可能指向单独的双向链表。这些子列表可能有一个或多个自己的子项，依此类推，生成多级数据结构，如下面的示例所示。","扁平化列表，使所有结点出现在单级双链表中。您将获得列表第一级的头部。","扁平化多级双向链表","示例:","输入:","输出:","返回扁平化后链表的最后一个节点"],"链表/138. 复制带随机指针的链表.html":["!=","(cur","(cur.random","(head","(retcur","(true)","*/","/*","//","1","1);","138.","1，它的下一个指针和随机指针都指向节点","2","2，它的下一个指针指向","=","==","_next,nod","_next;","_random)","_random;","_val,nod","_val;","break;","class","copyrandomlist(nod","cur","cur.next","cur.next.next;","cur.next;","cur.random.next;","cur.random;","cur.val;","definit","hashmap<>();","head)","head.next;","head;","int","map","map.get(retcur.random);","map.put(cur,","new","next","next;","node","node(","node()","node();","node(cur.val);","node(int","node.","node.next","node.random","node;","null)","null;","null，随机指针指向它自己。","public","random","random;","ret","ret.next;","ret;","retcur","retcur);","retcur.next","retcur.next.next;","retcur.next;","retcur.random","retcur.v","return","solut","val","val;","{","{\"$id\":\"1\",\"next\":{\"$id\":\"2\",\"next\":null,\"random\":{\"$ref\":\"2\"},\"val\":2},\"random\":{\"$ref\":\"2\"},\"val\":1}","{}","}","};","。","不使用哈希表，而是把复制后的新节点插入到旧节点之后。这样对于任何一个旧节点，它的next指针就是指向其对应的新节点。之后通过一次遍历修改所有新节点的random指针。最后再经过一次遍历将新旧链表拆分开来。","事件复杂度为o(n)，空间复杂度为o(n)。","代码1","代码2","你必须返回给定头的拷贝作为对克隆列表的引用。","复制带随机指针的链表","将原链表中的节点值以及next指针深拷贝成一条新的链表，而对原链表节点的random指针仅作浅拷贝，即新链表节点的random指针依然指向原链表中的节点。同时利用哈希表将深拷贝对应的新旧节点存储下来。最后遍历新的链表，将每一个节点的random指针指向哈希表中原random指针指向的节点所对应的节点。","思路1","思路2","提示：","时间复杂度仍然为o(n)，空间复杂度减少到了o(1)。","的值是","给定一个链表，每个节点包含一个额外增加的随机指针，该指针可以指向链表中的任何节点或空节点。","节点","要求返回这个链表的深拷贝。","解释：","输入："],"链表/142. 环形链表 II.html":["!=","&&","(fast","(slow","*","*/","/**","0","1","142.","1、两个链表皆无环：判断两个末尾结点是否相同。","1，则在该链表中没有环。","1：","2、两个链表皆有环：找到其中一个链表环的开始结点，判断这个结点是否在另一个链表中。","2：","3、其中一个链表有环：不存在这种情况。","3：","4],","=","==","[1,2],","[1],","[3,2,0,","class","connect","cycl","definit","detectcycle(listnod","fast","fast)","fast.next","fast.next.next;","head","head)","head,","head.next;","head;","ii","index","int","link","list.","listnod","listnode(int","next","next;","node","null","null)","null;","null。","po","public","return","singli","slow","slow.next;","slow;","solut","val","val;","x)","x;","{","}","};","为了表示给定链表中的环，我们使用整数","代码","你是否可以不用额外空间解决此题？","假设slow和fast在a3相遇，根据以上公式（fast在与slow相遇前走过了k圈），head从a1出发，slow从a3出发，经过a步以后，两点将在a2相遇。","判断两个链表是否相交？","如果","如果链表无环，则返回","开始）。","思路","扩展问题：","是","来表示链表尾连接到链表中的位置（索引从","环形链表","示例","给定一个链表，返回链表开始入环的第一个节点。","解释：链表中有一个环，其尾部连接到第一个节点。","解释：链表中有一个环，其尾部连接到第二个节点。","解释：链表中没有环。","说明：不允许修改给定的链表。","输入：head","输出：no","输出：tail","进阶："],"链表/460. LFU缓存.html":["&&","(!cachemap.containskey(key))","(!freqmap.containskey(node.freq))","());","(cachemap.size()","(cap","(freqmap.get(node.freq).isempty()","(未找到","(未找到key","(缓存容量)",");","*","*/","+=","/*","/**","//","0;","1","1)","1);","1;","1。","1，","2","2)","2);","3","3);","4","4);","460.","7",":","=","==",">","cach","cache.get(1);","cache.get(2);","cache.get(3);","cache.get(4);","cache.put(1,","cache.put(2,","cache.put(3,","cache.put(4,","cache/solution/java","cachemap","cachemap.put(key,","cachemap.remove(removekey);","cachemap:","cachemap;","call","cap","cap)","cap;","capac","capacity)","capacity;","class","cn.com/problems/lfu","freq","freq)","freq;","freqmap","freqmap.get(1).add(newnode);","freqmap.get(minfreq).iterator().next().key;","freqmap.get(minfreq).remove(freqmap.get(minfreq).iterator().next());","freqmap.get(node.freq).add(node);","freqmap.get(node.freq).remove(node);","freqmap.put(node.freq,","freqmap;","get(int","get(key)","hashmap","hashmap<>();","hashmap>","instanti","int","ka/","key","key)","key,","key;","key是出现频率，value是对应出现同样频率的所有node结点（频率一样使用最近最少使用lru原则）。这个表不涉及put/get数据，涉及update，负责处理频率相关操作。","la","lfucach","lfucache(","lfucache(capacity);","lfucache(int","lfu缓存","linkedhashset","linkedhashset<>());","map","map>","minfreq","minfreq)","minfreq;","minfreq=1","new","newnode);","node","node(int","node)","node.freq","node.freq+1","node;","o(1)","o1shi","obj","obj.get(key);","obj.put(key,value);","object","param_1","public","put(int","put(key,","put(key,value):","put。","removekey","return","shuang","such:","this.freq","this.key","this.valu","update(cachemap.get(key)).value;","update(nod","update(node):","value)","value,","value;","void","xian","{","}","两个hashmap：","代码","作者：kao","你是否可以在","去除","否则得到node，update(node)，返回node.valu","和","在java里直接用linkedhashset/linkedhashmap实现双向链表。","如果capcap，需要通过查找minfreq对应的一串node，找到linkedhashset里的第一个node，删掉他，同时在cachemap里也删掉他。","如果freqmap里没有node现在的频率，就给他新建一个linkedhashset，key为当前node的频率，放到freqmap里","如果key不存在，返回","如果这一串set空了，并且当前node频率是最小的频率，那么minfreq要+1","如果键不存在，请设置或插入值。当缓存达到其容量时，它应该在插入新项目之前，使最不经常使用的项目无效。在此问题中，当存在平局（即两个或更多个键具有相同使用频率）时，最近最少使用的键将被去除。","如果键存在于缓存中，则获取键的值（总是正数），否则返回","实现的操作：","思路","时间复杂度内执行两项操作？","最后，reset","示例：","设计并实现最不经常使用（lfu）缓存的数据结构。它应该支持以下操作：get","返回","这个map就是为了实现直接put/get数据，不涉及频率更新操作。","这里的就是我们要存储的缓存数据的，freq是该数据的出现频率","进阶：","链接：https://leetcod","需要一个node结构key,","首先得到node.freq对应的linkedhashset的那一串node，也就是找出和node频率一样的其他node。然后在这一串node里去掉这个node，因为这个node的频率变了，+1了。"],"链表/86. 分隔链表.html":["!=","(head","(head.val","*","*/","/**","1","3","86.","=",">2",">2,",">3",">4",">5","after;","afterhead","befor","before;","beforehead","class","definit","head","head,","int","link","list.","listnod","listnode(0);","listnode(int","new","next;","null)","partition(listnod","public","singli","solut","val","val;","x","x)","x;","x，对链表进行分隔，使得所有小于","{","}","代码","你应当保留两个分区中每个节点的初始相对位置。","分隔链表","的节点之前。","的节点都在大于或等于","示例:","给定一个链表和一个特定值","输入:","输出:"],"链表/109. 有序链表转换二叉搜索树.html":["!=","&&","(fast","(head","(head.next","*","*/","/","/**","0","0,","10","10,","109.","1。","3","3,","5","5,","5],","9","9,","9],","=","==","[","\\","binari","class","definit","fast","fast.next","fast.next.next;","head)","head,","head.next,","head.next.next;","int","left;","link","list.","listnod","listnode(int","new","next;","node.","null","null)","null,","null;","pre","pre.next","pre.next;","public","return","right;","root","root.left","root.right","root;","singli","slow","slow.next;","solut","sortedlisttobst(head);","sortedlisttobst(listnod","sortedlisttobst(slow.next);","tree","treenod","treenode(head.val);","treenode(int","treenode(slow.val);","val","val;","x)","x;","{","}","一个可能的答案是：[0,","代码","使用快慢指针找到链表的中点。中点节点作为根节点，左链表转换成的树的根节点作为左子节点，右链表转换成的树的根节点作为右子节点。这里将慢指针初始设置为head.next是为了方便跟踪其前一个节点pre。","它可以表示下面这个高度平衡二叉搜索树：","思路","有序链表转换二叉搜索树","本题中，一个高度平衡二叉树是指一个二叉树每个节点","的左右两个子树的高度差的绝对值不超过","示例:","给定一个单链表，其中的元素按升序排序，将其转换为高度平衡的二叉搜索树。","给定的有序链表："],"链表/206. 反转链表.html":["!=","(cur","(head","*","*/","/**","206.","=","==","class","cur","cur.next","cur.next;","cur;","definit","head","head)","head,","head.next","head;","int","link","list.","listnod","listnode(int","next","next;","null","null)","null,","null;","pre","pre;","public","return","reverselist(head.next);","reverselist(listnod","singli","solut","temp","temp.next","temp.next.next","temp;","val","val;","x)","x;","{","||","}","代码（迭代方法）","代码（递归方法）","反转链表"],"链表/25. K 个一组翻转链表难度困难.html":["(head","(int","*","*/","/**","//","0;","2","25.","3",":","=","==",">1",">2",">3",">4",">5","[a,","a,","b","b)","b;","class","definit","head,","head;","int","k","k)","link","list.","listnod","listnode(int","next;","null)","null;","public","return","reversekgroup(listnod","singli","solut","val","val;","x)","x;","{","}","个一组翻转链表难度困难","个待反转元素","个节点一组进行翻转，请你返回翻转后的链表。","代码","你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。","你的算法只能使用常数的额外空间。","包含","区间","如果节点总数不是","当","时，应当返回:","是一个正整数，它的值小于或等于链表的长度。","的整数倍，那么请将最后剩余的节点保持原有顺序。","示例","给你一个链表，每","给定这个链表：1","说明"],"链表/92. 反转链表 II.html":["(int","*","*/","/**","0;","1","1);","2,","4","92.","=",">2",">3",">4",">5",">null",">null,","class","definit","head,","head;","ii","int","link","list.","listnod","listnode(","listnode(int","m","m,","n","n)","new","next;","pre","pre.next","public","reversebetween(listnod","singli","solut","val","val;","x)","x;","{","}","≤","代码","到","反转从位置","反转链表","的链表。请使用一趟扫描完成反转。","示例:","说明:","输入:","输出:","链表长度。"],"链表/23. 合并K个排序链表.html":["!=","&&","(list1","(list1.val","(lists.length","(start","*","*/","+","/**","0)","0,","1);","1,","1;","23.","=","==",">>>","class","cur","definit","end)","end));","helper(listnode[]","helper(lists,","int","link","list.","list1,","list2","list2)","listnod","listnode(","listnode(int","lists)","lists,","lists.length","lists[start];","logk)。","merge2lists(helper(lists,","merge2lists(listnod","mergeklists(listnode[]","mid","mid),","new","next;","null","null)","null;","public","ret","ret;","return","singli","solut","start,","val","val;","x)","x;","{","}","代码","先分治，再合并。时间复杂度为o(n","合并k个排序链表","思路"],"链表/143. 重排链表.html":["!=","(cur1","(cur2","(head","(len","(mid","*","*/","+","/**","0;","1","1)","143.","1:","1;","1→l2→ln","1→ln","2:","2→…","=","==",">",">2",">3",">3.",">4",">4,",">5",">5,",">>","class","cur1","cur1.next","cur1.next.next;","cur1.next;","cur2","cur2.next;","cur2;","definit","head","head)","head.next","head;","int","l0→ln→l1→ln","len","len++;","link","list.","listnod","listnode(int","l：l0→l1→…→ln","mid","next;","null","null)","null;","privat","public","reorderlist(listnod","return","return;","reverselist(cur2);","reverselist(head.next);","reverselist(listnod","singli","solut","temp","temp.next","temp.next.next","temp;","val","val;","void","x)","x;","{","||","}","代码","你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。","将其重新排列后变为：","将给定链表从中间断开分成两个链表cur1与cur2，然后反转cur2，最后将cur1与cur2交叉合并。","思路","示例","给定一个单链表","给定链表","重排链表","重新排列为","，"],"二叉树/145. 二叉树的后序遍历.html":["!=","&&","(!stack.empty())","(cur","(cur.left","(cur.right","(prev.left","(prev.right","(root","*","*/","/","/**","1","1);","145.","2","3","=","==","[1,null,2,3]","[3,2,1]","\\","a)","arraylist<>();","b)","binari","class","cur","cur)","cur,","cur.left;","cur.right;","cur;","definit","dummi","dummy,","dummy.left","helper(treenod","int","left;","linkedlist","linkedlist<>();","list","new","node.","null","null)","null;","postordertraversal(treenod","prev","prev)","prev));","prev.left","prev.left;","prev.right","prev.right;","prev;","public","re","res.addall(helper(cur.left,","res.addfirst(cur.val);","res;","ret","ret.addfirst(cur.val);","ret.addfirst(prev.val);","ret;","return","right;","root)","root,","root;","solut","stack","stack.pop();","stack.push(cur.left);","stack.push(cur.right);","stack.push(root);","stack<>();","tree","treenod","treenode(","treenode(int","val","val;","x)","x;","{","}","二叉树的后序遍历","代码1","代码2","代码3","依旧是morris遍历法。","后序","后序遍历的顺序是先遍历左子节点，然后遍历右子节点，最后遍历父节点。","如果前驱节点的右孩子为当前节点，将它的右孩子重新设为空。倒序输出从当前节点的左孩子到该前驱节点这条路径上的所有节点。当前节点更新为当前节点的右孩子。","如果前驱节点的右孩子为空，将它的右孩子设置为当前节点。当前节点更新为当前节点的左孩子。","如果当前节点的左孩子不为空，在当前节点的左子树中找到当前节点在中序遍历下的前驱节点。","如果当前节点的左孩子为空，则将其右孩子作为当前节点。","将morris前序遍历法结合思路1","当前节点设置为临时节点dump。","思路1","思路2","思路3","用迭代的方法，可以先遍历父节点，然后遍历右子节点，最后遍历左子节点。然后将遍历结果反转即可。","示例:","给定一个二叉树，返回它的","输入:","输出:","进阶:","递归算法很简单，你可以通过迭代算法完成吗？","遍历。","重复以上1、2直到当前节点为空。"],"二叉树/307. 区域和检索 - 数组可修改.html":["\"","\",","\";","&&","(i","(j","(l","(root.begin","+","//","0;","1,","1;","2)","3,","307.","5]","8","9","=","==",">",">>>","[1,","begin,","begin;","buildtree(int[]","buildtree(nums,","class","cn.com/problems/rang","end)","end,","end;","given","i)","i,","int","j","j)","j);","l,","left;","mid","mid)","mid);","mutabl","new","null;","num","numarray","nums,","nums[l]);","nums，求出数组从索引","privat","public","queri","r)","r);","r,","return","return;","right;","root","root,","root.begin","root.end","root.end)","root.end);","root.left","root.left.sum","root.right","root.right.sum;","root.sum","root.sum;","root;","segmenttre","segmenttree(int","segmenttree(l,","sum","sum)","sum;","sumrang","sumrange(0,","sumrangehelper(root.left,","sumrangehelper(root.right,","sumrangehelper(segmenttre","system.out.println(i","this.begin","this.end","this.sum","updat","update(1,","update(i,","updatehelper(segmenttre","val)","val;","val，从而对数列进行修改。","void","{","}","≤","两点。","代码（线段树）","你可以假设","函数下进行修改。","函数与","函数可以通过将下标为","函数的调用次数是均匀分布的。","到","区域和检索","数组仅可以在","数组可修改","来源：力扣（leetcode）","的数值更新为","示例:","给定一个整数数组","范围内元素的总和，包含","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","说明:","链接：https://leetcod"],"二叉树/173. 二叉搜索树迭代器.html":["!=","!stack.isempty();","(node.right","(p","(root","*/","/**","//","15","173.","20","3","7","9","=","@return","binari","boolean","bstiter","bstiterator(root);","bstiterator(treenod","class","fals","final","h","hasnext()","int","iter","iterator.hasnext();","iterator.next();","new","next","next()","node","node.right;","node.val;","null)","number","o(1)，并使用","o(h)","p","p.left;","privat","public","return","root","root)","root.left;","search","smallest","stack","stack.pop();","stack.push(p);","stack.push(root);","stack;","stack<>();","tree","treenod","true","whether","{","}","中至少存在一个下一个最小的数。","二叉搜索树迭代器","代码","你可以假设","内存，其中","和","实现一个二叉搜索树迭代器。你将使用二叉搜索树的根节点初始化迭代器。","将返回二叉搜索树中的下一个最小的数。","思路","提示：","操作的时间复杂度是","时，bst","是树的高度。","示例：","调用","调用总是有效的，也就是说，当调用","返回"],"二叉树/230. 二叉搜索树中第K小的元素.html":["!=","(!s.empty()","(k","(p","/","//","0)","1","1:","1;","2","230.","2:","3","4","5","6","=","==",">","[3,1,4,null,2],","[5,3,6,2,4,null,null,1],","\\","bst","bst)","class","cn.com/problems/kth","complexity:","element","int","k","k)","k;","kth","kthsmallest","kthsmallest(treenod","new","node.left","node.leftcnt,","null)","o(h)","o(k),","p","p.left;","p.right;","p.val;","public","return","root","root,","root.leftcnt+1,","root;","root=root.right","s","s.pop();","s.push(p);","smallest","solut","space","stack","stack<>();","time","treenod","{","||","}","≤","个最小的元素。","二叉搜索树中第k小的元素","二叉搜索树元素个数。","代码","你可以假设","函数？","则","则返回root","否则，node","如果二叉搜索树经常被修改（插入/删除操作）并且你需要频繁地查找第","如果能够修改节点的数据结构treenode，可以增加一个字段leftcnt，表示左子树的节点个数。设当前节点为root，","小的值，你将如何优化","思路","总是有效的，1","来查找其中第","来源：力扣（leetcode）","示例","算法复杂度为o(height","给定一个二叉搜索树，编写一个函数","若","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","说明：","输入:","输出:","进阶：","链接：https://leetcod"],"二叉树/95. 不同的二叉搜索树 II.html":["();","(end","(int","(n","(treenod","*","*/","+","...","/","/**","1","1);","1,","2","3","5","95.","=","[","[1,null,2,null,3]","[1,null,3,2],","[2,1,3],","[3,1,null,null,2],","[3,2,null,1],","\\","]","binari","class","cn.com/problems/uniqu","definit","end)","end);","generatetrees(1,","generatetrees(i","generatetrees(int","generatetrees(start,","ii","int","l:","l;","left;","linkedlist<>();","list","n","n)","n);","new","node.","nulllist","nulllist.add(null);","nulllist;","n，生成所有由","public","r:","r;","ret","ret.add(root);","ret;","return","right;","root","root.left","root.right","search","solut","start,","start;","temp1","temp1)","temp2","temp2)","tree","treenod","treenode(i);","treenode(int","val","val;","x)","x;","{","}","不同的二叉搜索树","为节点所组成的二叉搜索树。","代码","以上的输出对应以下","来源：力扣（leetcode）","示例:","种不同结构的二叉搜索树：","给定一个整数","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","解释:","输入:","输出:","链接：https://leetcod"],"二叉树/110. 平衡二叉树.html":["!=","(left","(node","*","*/","+","/","/**","0;","1","1)","110.","15","1:","1;","2","20","2:","3","4","7","9","=","==",">","[1,2,2,3,3,null,null,4,4]","[3,9,20,null,null,15,7]","\\","binari","boolean","class","computetreeheight(node.left);","computetreeheight(node.right);","computetreeheight(root)","computetreeheight(treenod","definit","fals","int","isbalanced(treenod","left","left)","left;","math.abs(right","math.max(left,","node)","node.","null)","public","return","right","right)","right;","root)","solut","tree","treenod","treenode(int","true","val","val;","x)","x;","{","||","}","。","一个二叉树每个节点","代码","平衡二叉树","本题中，一棵高度平衡二叉树定义为：","的左右两个子树的高度差的绝对值不超过1。","示例","给定一个二叉树，判断它是否是高度平衡的二叉树。","给定二叉树","返回"],"二叉树/114. 二叉树展开为链表.html":["(node","(root","*","*/","/","/**","1","114.","2","3","4","5","6","=","==","\\","binari","class","cn.com/problems/flatten","definit","flatten(treenod","helper(node.left,","helper(node.right,","helper(root,","helper(treenod","int","left;","link","list","node,","node.","node.left","node.right","node;","null)","null);","null;","public","return","return;","right;","root)","solut","tail)","tail));","tail;","tree","treenod","treenode(int","val","val;","void","x)","x;","{","}","二叉树展开为链表","代码","例如，给定二叉树","将其展开为：","来源：力扣（leetcode）","给定一个二叉树，原地将它展开为链表。","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","链接：https://leetcod"],"二叉树/99. 恢复二叉搜索树.html":["!=","&&","(cur","(cur.left","(curprev","(prev","(root","*","*/","/","/**","1","1:","2","2:","3","4","99.","=","==","[1,3,null,null,2]","[2,1,4,null,null,3]","[3,1,4,null,null,2]","[3,1,null,null,2]","\\","binari","class","cur","cur.val","curprev,","definit","inordertraversal(root);","inordertraversal(root.left);","inordertraversal(treenod","int","left;","node.","node1,","node1.v","node1.val;","node2,","node2.v","node2.val;","node2;","null","null)","o(n)","prev;","public","recovertree(treenod","return;","right;","root)","root,","root.val","solut","temp","temp;","tree","treenod","treenode(int","val","val;","void","x)","x;","{","}","二叉搜索树中的两个节点被错误地交换。","代码1（递归遍历，空间复杂度o(logn)）","代码2（morris遍历法，空间复杂度o(1)）","你能想出一个只使用常数空间的解决方案吗？","使用","思路","恢复二叉搜索树","示例","空间复杂度的解法很容易实现。","请在不改变其结构的情况下，恢复这棵树。","输入:","输出:","进阶:","首先考虑如何在遍历一维数组的过程中交换两个逆序元素。设置cur指向当前元素，prev指向上一个元素。如果在遍历过程中第一次出现cur元素值小于prev元素值，则prev一定是第一个逆序元素。但是此时cur可能是也可能不是第二个逆序元素，这取决于后续遍历过程中会不会再次出现cur元素值小于prev元素值的情况。"],"二叉树/113. 路径总和 II.html":["&&","(gap","(root","(root.left","/","//","1","1);","11","113.","13","2","22，","4","5","7","8","=","==","[","[5,4,11,2],","[5,8,4,5]","\\","]","arraylist","arraylist<>();","arraylist<>(cur));","class","cn.com/problems/path","cur","cur,","cur.add(root.val);","cur.remove(cur.size()","gap","gap,","ii","int","leaf","list>","new","null","null)","path","pathsum(root,","pathsum(root.left,","pathsum(root.right,","pathsum(treenod","privat","public","result","result)","result);","result.add(new","result;","return","return;","root,","root.right","root.val)","root.val,","solut","static","sum","sum)","sum,","void","{","}","中间结果","代码","叶子节点是指没有子节点的节点。","时间复杂度o(n)，空间复杂度o(logn)","来源：力扣（leetcode）","示例:","给定一个二叉树和一个目标和，找到所有从根节点到叶子节点路径总和等于给定目标和的路径。","给定如下二叉树，以及目标和","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","说明:","路径总和","返回:","链接：https://leetcod"],"二叉树/96. 不同的二叉搜索树.html":["(4n","(n","+","...","/","1","1)。由于直接求阶乘会导致溢出，所以考虑将其转换为迭代公式。","1,","2","2)","2)。","2)，","2n","2n)","3","3,","5","96.","=","\\","binari","c(n","c(n,","cn","cn.com/problems/uniqu","n","n，求以","search","tree","一共有","不同的二叉搜索树","为节点组成的二叉搜索树有多少种？","动态规划的方法自不必说，这里主要说下公式法。","卡塔兰公式为","思路","来源：力扣（leetcode）","由于cn+1","示例:","种不同结构的二叉搜索树:","给定","给定一个整数","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","解释:","输入:","输出:","那么cn+1","链接：https://leetcod"],"二叉树/129. 求根到叶子节点数字之和.html":["&&","(root","(root.left","*","*/","+","/","/**","0","0);","0;","1","10","1026","1026.","12","12.","123。","129.","13","13.","1:","2","25","25.","2:","3","4","40","40.","491","491.","495","495.","5","9","=","==",">0",">1",">2",">3",">5",">9","[1,2,3]","[4,9,0,5,1]","\\","binari","class","cn.com/problems/sum","definit","int","leaf","left;","node.","null","null)","number","public","return","right;","root","root)","root,","root.right","root.val)","root.val);","root.val;","solut","sum","sum)","sumnumbers(treenod","sumnumbershelper(root,","sumnumbershelper(root.left,","sumnumbershelper(root.right,","sumnumbershelper(treenod","tree","treenod","treenode(int","val","val;","x)","x;","{","}","从根到叶子节点路径","代码","代表数字","例如，从根到叶子节点路径","叶子节点是指没有子节点的节点。","因此，数字总和","来源：力扣（leetcode）","求根到叶子节点数字之和","的数字，每条从根到叶子节点的路径都代表一个数字。","示例","给定一个二叉树，它的每个结点都存放一个","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","解释:","计算从根到叶子节点生成的所有数字之和。","说明:","输入:","输出:","链接：https://leetcod"],"二叉树/144. 二叉树的前序遍历.html":["!=","&&","(cur","(cur.left","(prev.right","*","*/","/","/**","//","1","144.","1、时间复杂度为o(n)，空间复杂度为o(1)","2","2、不破坏二叉树的形状","3","=","==","[1,2,3]","[1,null,2,3]","\\","a)","arraylist<>();","b)","binari","class","cur","cur)","cur.left;","cur.right;","cur;","definit","int","left;","list","morris方法可以做到：","new","node.","null","null)","null;","preordertraversal(treenod","prev","prev.right","prev.right;","prev;","public","re","res.add(cur.val);","res;","return","right;","root)","root,","solut","traversal的方法前序遍历二叉树。","tree","treenod","treenode(int","val","val;","x)","x;","{","}","二叉树的前序遍历","代码","使用morri","前序","如果前驱节点的右孩子为当前节点，将它的右孩子重新设为空（恢复树的形状）。。当前节点更新为当前节点的右孩子。","如果前驱节点的右孩子为空，将它的右孩子设置为当前节点。输出当前节点，然后将当前节点更新为当前节点的左孩子。","如果当前节点的左孩子不为空，在当前节点的左子树中找到当前节点在中序遍历下的前驱节点。","如果当前节点的左孩子为空，则输出当前节点并将其右孩子作为当前节点。","对于中序遍历，只需要将上述算法第2a步中的「输出当前节点」移动到2b步即可。","思路","时间复杂度为o(n)的原因：对于二叉树任意两个节点之间的边，在遍历过程中最多经过3次：一次用于找到前驱节点，一次遍历子节点，还有一次将前驱节点的右子节点还原。","步骤：","示例:","给定一个二叉树，返回它的","输入:","输出:","进阶:","递归算法很简单，你可以通过迭代算法完成吗？","遍历。","重复以上1、2直到当前节点为空。"],"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":["!=","(cur","(cur.left","(cur.right","*/","*left;","*next;","*right;","/*","//","1);","100","117.","6000","=","[1,2,3,4,5,null,7]","_left,","_left;","_next)","_next;","_right,","_right;","_val)","_val,","_val;","b","class","connect(nod","cur","cur.left;","cur.next;","cur.right;","definit","dummi","dummy.next;","dummy;","ii","int","left","left;","new","next","next;","node","node(","node()","node(int","node.","null)","null。","public","return","right","right;","root)","root;","solut","struct","tail","tail.next","tail.next;","val","val;","{","{}","}","};","代码","你只能使用常量级额外空间。","使用递归解题也符合要求，本题中递归程序占用的栈空间不算做额外的空间复杂度。","初始状态下，所有","填充它的每个","填充每个节点的下一个右侧节点指针","所示。","所示，你的函数应该填充它的每个","指针设置为","指针都被设置为","指针，以指向其下一个右侧节点，如图","指针，让这个指针指向其下一个右侧节点。如果找不到下一个右侧节点，则将","提示：","树中的节点数小于","示例：","给定一个二叉树","解释：给定二叉树如图","输入：root","输出：[1,#,2,3,#,4,5,7,#]","进阶："],"二叉树/236. 二叉树的最近公共祖先.html":["!=","&&","(left","(right","(root","*","*/","/**","1","1:","236.","2:","3","3。","4","5","5,","5。因为根据定义最近公共祖先节点可以为节点本身。","=","==","[3,5,1,6,2,0,8,null,null,7,4]","[3,5,1,6,2,0,8,null,null,7,4],","ancestor","binari","class","cn.com/problems/lowest","common","definit","int","left","left;","lowestcommonancestor(root.left,","lowestcommonancestor(root.right,","lowestcommonancestor(treenod","node.","null","null)","null;","p","p,","public","p、q","p、q，最近公共祖先表示为一个结点","q","q)","q);","return","right","right;","root","root,","root;","solut","t","tree","treenod","treenode(int","val","val;","x","x)","x;","x，满足","{","||","}","为不同节点且均存在于给定的二叉树中。","二叉树的最近公共祖先","代码","例如，给定如下二叉树:","和节点","所有节点的值都是唯一的。","找到该树中两个指定节点的最近公共祖先。","是","来源：力扣（leetcode）","百度百科中最近公共祖先的定义为：“对于有根树","的两个结点","的最近公共祖先是节点","的深度尽可能大（一个节点也可以是它自己的祖先）。”","的祖先且","示例","给定一个二叉树,","节点","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","解释:","说明:","输入:","输出:","链接：https://leetcod"],"搜索/240. 搜索二维矩阵 II.html":["(matrix.length","(row","(target","0","0)","0,","11,","12,","13,","14,","15],","16,","17,","19],","1;","20，返回","21,","22],","23,","240.","24],","26,","2d","30]","4,","5,","5，返回","6,","7,","8,","9,","=","==","[","[1,","[10,","[18,","[2,","[3,","]","boolean","class","cn.com/problems/search","col","false;","false。","ii","int","m","matrix","matrix,","matrix[0].length","matrix[row][col])","n","public","return","row","searchmatrix(int[][]","solut","target","target)","target。该矩阵具有以下特性：","true;","true。","x","{","||","中的一个目标值","代码","如下：","搜索二维矩阵","来源：力扣（leetcode）","每列的元素从上到下升序排列。","每行的元素从左到右升序排列。","现有矩阵","矩阵","示例:","给定","编写一个高效的算法来搜索","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","链接：https://leetcod"],"搜索/127. 单词接龙.html":["!=","!que2.isempty())","\"cog\"","\"cog\",","\"dog\"","\"dot\"","\"hit\"","\"hit\",","\"hot\"","&&","(!que.isempty())","(!que1.isempty()","(!wordlist.contains(endword))","());","(adjacentword,","(ans1","(ans2","(int","(string","+","0","0;","0。","1)","1));","1);","127.","1:","1;","2:","5","5。","=",">","[\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]","[\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]","abstractmap.simpleentry(beginword,","abstractmap.simpleentry(endword,","adjacentwordsmap","adjacentwordsmap)","adjacentwordsmap);","adjacentwordsmap.get(temp).add(word);","ans1","ans1;","ans2","ans2;","beginword","beginword,","class","cn.com/problems/word","endword","endword,","endword）和一个字典，找到从","entri","entry.getkey();","entry.getvalue()","entry.getvalue());","hashmap<>();","hashset<>();","helper(que1,","helper(que2,","helper(queue>","import","int","java.util.abstractmap;","ladder","ladderlength(str","linkedlist<>();","list","map","map.entri","map>","new","privat","public","que","que,","que.add(new","que.poll();","que1","que1.add(new","que2","que2.add(new","queue>","return","set","solut","string","visit","visited.add(word);","visited1","visited1,","visited1.put(beginword,","visited1.put(word,","visited2","visited2,","visited2.put(endword,","word","word:","wordlist","wordlist)","{","}","一个最短转换序列是","不在字典中，所以无法进行转换。","代码1（bfs）","代码2（双向bfs）","你可以假设","到","单词接龙","和","如果不存在这样的转换序列，返回","字典中不存在重复的单词。","所有单词具有相同的长度。","所有单词只由小写字母组成。","是非空的，且二者不相同。","来源：力扣（leetcode）","每次转换只能改变一个字母。","的最短转换序列的长度。转换需遵循如下规则：","示例","给定两个单词（beginword","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","解释:","说明:","转换过程中的中间单词必须是字典中的单词。","输入:","输出:","返回它的长度","链接：https://leetcod"],"搜索/130. 被围绕的区域.html":["'o'","'o'（字母","'x'","'x'。","'x'。如果两个元素在水平或垂直方向相邻，则称它们是“相连”的。","(board.length","(i","(int","(j","+","0","0)","0;","1","1,","130.","=","==","board)","board.length,","board[0].length","board[0].length;","boolean[][]","boolean[row][col];","class","cn.com/problems/surround","col","col;","dfs(board,","i,","int","j","j,","new","o","o）。","privat","public","region","return;","row","row,","row;","solut","solve(char[][]","this.col","this.row","visit","visited);","void","x","{","||","代码","任何不在边界上，或不与边界上的","和","围绕的区域，并将这些区域里所有的","填充。","找到所有被","最终都会被填充为","来源：力扣（leetcode）","用","相连的","示例:","给定一个二维的矩阵，包含","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","被围绕的区域","被围绕的区间不会存在于边界上，换句话说，任何边界上的","解释:","运行你的函数后，矩阵变为：","都不会被填充为","链接：https://leetcod"],"字符串/438. 找到字符串中所有字母异位词.html":["\"ab\"","\"ab\",","\"abab\"","\"abc\"","\"ba\",","\"bac\",","\"cba\",","\"cbaebabacd\"","(charact","(right","+","//","0","0)","0,","0;","1","1);","1,","1:","2","20100。","2:","2]","438.","6","6]","=","[0,","arraylist<>();","c:","class","cur","findanagrams(str","hashmap<>();","int","left","list","map","match","new","p","p:","public","p，找到","re","requir","require.getordefault(c,","required.put(c,","right","s","s,","s:","s;","solut","string","t","t)","t.tochararray())","t;","while(right","{","}","不考虑答案输出的顺序。","中寻找","中所有是","代码","和","和一个非空字符串","在","字母异位词指字母相同，但排列不同的字符串。","字符串只包含小写英文字母，并且字符串","它是","思路","找到字符串中所有字母异位词","本题使用了两个哈希表：require用来存储字符串t中所有字符出现的次数，cur用来存储当前窗口内各字符出现的次数。另外定义一个match变量表示cur中出现次数等于require的字符数量。那么显然当match的大小等于require中的所有字符数量时，窗口window是符合要求的。","滑动窗口的通用模板：","的「最小覆盖子串」","的子串是","的字母异位词。","的字母异位词的子串，返回这些子串的起始索引。","的长度都不超过","示例","给定一个字符串","解释:","说明：","起始索引等于","输入:","输出:"],"字符串/76. 最小覆盖子串.html":["\"\"。","\"abc\"","\"adobecodebanc\",","\"banc\"","(charact","(right","+","0)","0,","0;","1);","76.","=","c:","class","cur","hashmap<>();","int","integer.max_value;","left","map","match","minlen","minwindow(str","new","public","requir","required.getordefault(c,","required.put(c,","right","s","s,","solut","start","string","s、一个字符串","t","t)","t.tochararray())","t，请在字符串","{","}","中不存这样的子串，则返回空字符串","中存在这样的子串，我们保证它是唯一的答案。","代码","依然使用的是滑动窗口的思路，只需要对上题代码作稍加改动即可。","如果","思路","所有字母的最小子串。","最小覆盖子串","示例：","给你一个字符串","说明：","输入:","输出:","里面找出：包含"],"字符串/44. 通配符匹配.html":["\"*\"","\"*a*b\"","\"?a\"","\"a\"","\"a*c?b\"","\"aa\"","\"acdcb\"","\"adceb\"","\"cb\"","\"dce\".","'*'","'?'","'a'","'b'。","'c',","(i","(int","(p)","(s)","*。","+","0,","0;","1,","1:","1;","1];","1][p.length()","2:","3:","44.","4:","5:","=","?","boolean","boolean[][]","boolean[s.length()","class","dp","dp[0][0]","fals","int","ismatch(str","j","new","p","p)","p.concat(\"$\");","public","s","s,","s.concat(\"$\");","solut","star","star_","string","true","true;","z","{","两个字符串完全匹配才算匹配成功。","代码1（dp）","代码2","但第二个","可以匹配","可以匹配任何单个字符。","可以匹配任意字符串。","可以匹配任意字符串（包括空字符串）。","可以匹配字符串","可以匹配空字符串,","可能为空，且只包含从","和","和一个字符模式","定义两个变量star和star_s，star代表模式串p中上一个*的位置，star_s代表star在s中所匹配的字符串之后的一个字符的索引。当在p中第一次遇到*时，将对应的star_s设置为i，代表star一开始只匹配0个字符。","当i和j匹配失败时，进行回溯，即重置j为star的下一个字符，star_s增1（代表star又多匹配了一个字符），同时将i设置为star_s。","思路2","整个字符串。","无法匹配","的小写字母。","的小写字母，以及字符","的通配符匹配。","示例","第一个","第二个","给定一个字符串","解释:","说明:","输入:","输出:","通配符匹配","，实现一个支持"],"字符串/28. 实现 strStr.html":["(i","(int","(needle.length()","(从0开始)。如果不存在，则返回","0)","0,","0;","1。","1，构成next数组。","28.","2，说明a之前的两位（后缀）与模式字符串的前两位（前缀）是一致的，这样就只需要把前缀移动到后缀的位置上来就可以了（j","=","==","class","cn.com/problems/impl","dp","fa","getnext(needle);","haystack","haystack,","haystack.length(),","https://leetcod","int","int[]","int[][]","j","jie","kmp(needle);","labuladong/","m","n","needl","needle)","needle.length();","next","next[j])。","public","return","solut","string","strstr","strstr()","strstr(string","strstr/solution/kmp","suan","xiang","{","代码1","代码2","函数。","字符串中找出","字符串出现的第一个位置","字符串和一个","字符串，在","实现","思路1","思路2","然后是next数组的用法，举例来说，如果模式字符串在最后一位的a上匹配失败，由于next[4]","给定一个","至于next数组的构造方法，方法类似：把原来模式字符串的前缀作为新的模式字符串来匹配原来的模式字符串，匹配方法同上。","首先是部分匹配表（pmt）的含义。pmt表的每一位代表模式字符串从开头到当前位这一段字符串的公共前后缀的最大长度。为了计算方便，将pmt的每一位后移一位（每一位匹配失败后只需要用到前面一位的pmt值），前面填上"],"字符串/5. 最长回文子串.html":["\"\";","\"aba\"","\"bab\"","\"babad\"","\"bb\"","\"cbbd\"","&&","(i","(int","(left","(len","(lenarr[i]","(resid","(s.length()","(sb.charat(i","*","+","/","//","0","0)","0,","0;","1","1)","1);","1000。","1个中心。定义一个expandaroundcenter函数，left和right分别代表当前中心的左右边界（边界不包含在回文串内，所以最后返回回文串长度时是right","1）。","1：","2","2,","2;","2：","5.",":","=","==",">",">=","?","class","end","expandaroundcenter(str","i,","i;","i]);","id","int","left","left,","len","lenarr[2","lenarr[i]","lenarr[i])","lenarr[i]))","lenarr[i]++;","lenarr[i];","longestpalindrome(str","manacher算法：http://www.cnblogs.com/grandyang/p/4475985.html","math.min(mx","mx","mx)","new","public","resid","reslen","reslen)","return","right","right)","s","s)","s,","s.substring((resid","s.substring(start,","s;","sb","sb.charat(i","solut","start","string","stringbuild","stringbuilder(\"$#\");","s，找到","{","}","中心扩展算法：设字符串s长度为n，则一共存在2n","中最长的回文子串。你可以假设","也是一个有效答案。","代码1","代码2","尝试更新mx与id","尝试更新结果","思路1","思路2","找到以i为中心的回文串的最大半径","最长回文子串","注意:","的最大长度为","示例","给定一个字符串","输入:","输出:"],"字符串/1143. 最长公共子序列.html":["\"abc\"","\"abc\",","\"abc\"，它的长度为","\"abcde\"","\"abcde\",","\"ace\"","\"ace\"，它的长度为","\"aec\"","\"def\"","&&","(back[x][y].x","(int","(x","+","//","0)","0;","0。","1","1)","1));","1);","1,","1143.","1:","1]","1])","1];","1][j","1][j];","1][size2","2:","3:","3。","=","==",">","back","back[i","back[x][y].i","back[x][y];","back数组存储回溯路径","class","dp","dp[i","dp[i][j","dp[size1][size2];","int","int[][]","int[size1","j","j);","longestcommonsubsequence(str","new","public","return","sb","sb.append(text1.charat(x","size1","size1,","size2","size2;","solut","string","stringbuild","stringbuilder();","system.out.println(sb.reverse().tostring());","t","t.x;","t.y;","text1","text1,","text1.length(),","text2","text2)","text2.length();","text2，返回这两个字符串的最长公共子序列。","this.i","this.x","tupl","tuple(i","tuple(i,","tuple(int","tuple[][]","tuple[size1","x","x,","x;","y","y)","y;","{","}","一个字符串的","不是","代码","例如，\"ace\"","和","子序列","提示:","是","是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。","最长公共子序列","的子序列。两个字符串的「公共子序列」是这两个字符串所共同拥有的子序列。","的子序列，但","示例","给定两个字符串","若这两个字符串没有公共子序列，则返回","解释：两个字符串没有公共子序列，返回","解释：最长公共子序列是","输入：text1","输出其中一个最长公共子序列","输出：0","输出：3"],"字符串/10. 正则表达式匹配.html":["\".*\"","\"a\"","\"a*\"","\"aa\"","\"aab\"","\"aab\"。","\"ab\"","\"c*a*b\"","\"mis*is*p*.\"","\"mississippi\"","&&","'*'","'.'","'.')","'a'","'a'。因此，字符串","'c'","(int","(s.charat(i","*。","+",".","0","0;","1)","10.","1:","1];","1][j","1][j]);","1][p.length()","2)","2:","3:","4:","5:","=","==",">","boolean","boolean[][]","boolean[s.length()","class","dp","dp[0][0]","dp[i","dp[i][j]","dp[s.length()][p.length()];","fals","ismatch(str","new","p","p)","p.charat(j","public","p，请你来实现一个支持","return","s","s,","solut","string","s的，而不是部分字符串。","true","true;","z","{","||","}","个,","为","代码（dp）","代表可以匹配零个或多个前面的那一个元素,","匹配任意单个字符","匹配零个或多个前面的那一个元素","可能为空，且只包含从","可被视为","和","和一个字符规律","因为","在这里前面的元素就是","字符串","所谓匹配，是要涵盖","整个","整个字符串。","无法匹配","正则表达式匹配","的小写字母。","的小写字母，以及字符","的正则表达式匹配。","示例","给你一个字符串","表示可匹配零个或多个（'*'）任意字符（'.'）。","表示零个或多个，这里","被重复一次。因此可以匹配字符串","解释:","说明:","输入:","输出:","重复了一次。"],"字符串/522. 最长特殊序列 II.html":["\"aba\",","\"cdc\",","\"eae\"","+","//判断字符串a是否模糊包含字符串b","//寻找最长特殊字串","//已经check过的str","//当前字符串是比它长的字符串的子串","//自定义比较器：根据字符串长度","0)","0,","0;","1","1)","1);","10","1;","3","50","522.",":","=","==",">","@overrid","[2,","]","a,","b)","boolean","break;","chuan","class","cn.com/problems/longest","compar","comparator()","compare(str","contains(str","false;","findluslength(string[]","for(str","fu","hashset<>();","https://leetcod","if(contains(str2,","if(islus)","if(s1.length()","if(sortedmap.get(str)","ii","ii/solution/java","int","islu","j","new","public","return","s1,","s2)","s2.length())","set","set)","set.add(str);","solut","sortedmap","sortedmap.getordefault(str,","sortedmap.keyset())","sortedmap.put(str,","str","str))","str.length();","str2","string","strlencompar","strs)","subsequ","treemap","treemap<>(strlencomparator);","true;","tyh7/","uncommon","while(i","zi","{","}","。","之间。","代码","子序列可以通过删去字符串中的某些字符实现，但不能改变剩余字符的相对顺序。空序列为所有字符串的子序列，任何字符串为其自身的子序列。","所有给定的字符串长度不会超过","提示：","最长特殊序列","示例：","给定字符串列表的长度将在","给定字符串列表，你需要从它们中找出最长的特殊序列。最长特殊序列定义如下：该序列为某字符串独有的最长子序列（即不能是其他字符串的子序列）。","输入:","输入将是一个字符串列表，输出是最长特殊序列的长度。如果最长特殊序列不存在，返回","输出:","题解"],"字符串/796. 旋转字符串.html":["&&","'abcde',","'abcde'，在移动一次之后结果就是'bcdea'","'abced'","'cdeab'","(a","(a.length()","+","100。","1:","2:","796.","=","==","a).contains(b);","a,","b","b)","b.length())","boolean","b。","class","fals","public","return","rotatestring(str","solut","string","true","{","}","。如果在若干次旋转操作之后，a","代码","例如,","和","旋转字符串","最左边的字符移动到最右边。","注意：","的旋转操作就是将","示例","给定两个字符串,","能变成b，那么返回true。","若","输入:","输出:","长度不超过"],"字符串/459. 重复的子字符串.html":["\"ab\"","\"aba\"","\"abab\"","\"abc\"","\"abcabc\"","\"abcabcabcabc\"","(s","(或者子字符串","*","+","//","1).contains(s);","1:","1）。","2","2)/2>0，也即字符串2","2)个子串t构成。","2:","2。那么2","2就是由(2n","2至少会包含一个字符串s。","3:","459.",">","boolean","class","fals","public","repeatedsubstringpattern(str","return","s)","s).substring(1,","s.length()","solut","true","{","}","代码","假设字符串s可以由其中一个子串重复多次构成，设这个子串为t，重复次数为n（n","分别去掉字符串2s首尾字符，构成字符串2","可由子字符串","将字符串s首尾拼接，构成字符串2s。那么2s就是由2n个子串t构成。","由于(2n","示例","给定一个非空的字符串，判断它是否可以由它的一个子串重复多次构成。给定的字符串只含有小写英文字母，并且长度不超过10000。","解释:","输入:","输出:","重复两次构成。","重复两次构成。)","重复四次构成。","重复的子字符串"],"字符串/72. 编辑距离.html":["\"execution\"","\"horse\",","\"intention\",","\"ros\"","'c')","'e')","'h'","'i'","'n'","'r')","'t')","'u')","'x')","(int","(删除","(将","(插入","+","1:","1;","1];","1][word2.length()","2:","3","5","72.","=",">","class","dp","enent","exect","execut","exent","hors","inent","int","int[][]","int[word1.length()","intent","mindistance(str","new","public","ro","rors","rose","solut","string","word1","word1,","word2","word2)","word2，计算出将","{","。","代码","你可以对一个单词进行如下三种操作：","删除一个字符","和","所使用的最少操作数","插入一个字符","替换一个字符","替换为","示例","给定两个单词","编辑距离","解释:","转换成","输入:","输出:"],"字符串/3. 无重复字符的最长子串.html":["\"abc\"，所以其长度为","\"abcabcbb\"","\"b\"，所以其长度为","\"bbbbb\"","\"pwwkew\"","\"wke\"，所以其长度为","(right","(s.length()","+","0)","0,","0;","1","1)","1);","1,","1:","1;","1。","2:","3","3.","3:","3。","=","==","class","hashmap<>();","int","left","left++;","lengthoflongestsubstring(str","map","map.get(s.charat(left))","map.put(s.charat(left),","math.max(res,","new","public","re","res;","return","right","right++;","s)","solut","{","}","代码1","代码2","依然是滑动窗口的思路，只不过这次的内部循环是在窗口不符合要求时执行的，窗口直到符合要求后成为候选结果。","因为无重复字符的最长子串是","子串","定义窗口左右边界left（exclusive）和right（inclusive）。遍历right时，设置一个哈希函数来存储当前字符上一次出现过的位置（如果是第一次出现则为null）。窗口左边界left必须在当前字符上次出现位置或之后窗口才可能是有效的，因此需要在每一步遍历时将left更新成当前字符上次出现过的位置，但需要注意的是如果left本身就已经在当前字符上次出现过的位置之后了，那么此时就无需再更新left。","思路1","思路2","无重复字符的最长子串","是一个子序列，不是子串。","最长子串","的长度。","的长度，\"pwke\"","示例","给定一个字符串，请你找出其中不含有重复字符的","解释:","请注意，你的答案必须是","输入:","输出:"],"动态规划/131. 分割回文串.html":["\"aab\"","(int","(list","(start","+","0;","1));","1);","131.","=","==",">","[","[\"a\",\"a\",\"b\"]","[\"aa\",\"b\"],","]","boolean[][]","boolean[s.length()][s.length()];","class","helper(s,","helper(str","int","linkedlist());","linkedlist();","list.add(0,","list:","list>","new","p","p,","partition(str","public","re","res.add(list);","res.add(new","res;","ret","ret)","return","s","s)","s,","s.length())","s.substring(start,","solut","start)","start;","s，将","{","}","代码","分割回文串","分割成一些子串，使每个子串都是回文串。","思路","所有可能的分割方案。","示例:","给定一个字符串","输入:","输出:","返回"],"动态规划/97. 交错字符串.html":["!=","\"aabcc\",","\"aadbbbaccc\"","\"aadbbcbcac\"","\"dbbca\",","(int","(s3.length()","+","1:","1;","1];","1][s2.length()","2:","97.","=","boolean","boolean[][]","boolean[s1.length()","class","dp","dp[0][0]","fals","false;","isinterleave(str","new","public","return","s1","s1,","s1.length()","s2","s2,","s2.length())","s3","s3)","s3,","solut","string","true","true;","{","交错字符串","交错组成的。","代码","和","是否是由","示例","给定三个字符串","输入:","输出:","验证"],"动态规划/188. 买卖股票的最佳时机 IV.html":["(int","(k","(股票价格","+","+=","/","0","0)","0;","1","122，","123题的泛化。定义二维数组dp，dp[k][0]表示在最多可以完成k笔交易的情况下，当前处于卖出状态时所能获得的最大利润；dp[k][1]表示在最多可以完成k笔交易的情况下，当前处于买入状态时所能获得的最大利润。初始时对于任意k，dp[k][0]都等于0，而dp[k][1]都等于负无穷，代表初始时不可能处于卖出状态。状态变迁关系参考代码。","188.","1:","1])","1];","1][2];","2","2)","2:","3","3)","4","4)","5","6","6)","7","=",">=","[2,4,1],","[3,2,6,5,0,3],","class","dp","int","int[]","int[][]","int[k","iv","j","k","k,","max","max;","maxprofit(int","maxprofit(prices);","new","prices)","prices.length","prices[i","prices[i]","public","return","solut","{","}","。","个元素是一支给定的股票在第","买卖股票的最佳时机","代码","你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。","另外本题中会出现k值特别大的情况，因此需要做一定优化。当k值大于prices数组的一半长度时，相当于不再对交易次数进行限制，因此可以用122题的方法来解决。","在第","天","天的价格。","思路","注意:","的时候买入，在第","的时候卖出,","的时候卖出，这笔交易所能获得利润","示例","笔交易。","给定一个数组，它的第","解释:","设计一个算法来计算你所能获取的最大利润。你最多可以完成","该题是对121，","输入:","输出:","这笔交易所能获得利润","随后，在第"],"动态规划/122. 买卖股票的最佳时机 II.html":["(int","+=","0","0,","0;","0。","1","122.","1:","1;","1])","1];","1）的时候买入，在第","2","2:","3","3:","3）的时候买入，在第","4","5","5）的时候卖出,","6","6）的时候卖出,","7","=","[1,2,3,4,5]","[7,1,5,3,6,4]","[7,6,4,3,1]","buy","cn.com/problems/best","de","gu","hold","https://leetcod","ii","ii/solution/mai","int","integer.min_value;","ji","jia","leetcode/","mai","max","max;","maxprofit(int[]","piao","prices)","prices[i","prices[i]","public","return","sell","shi","sold","stock","time","zui","{","}","。","个元素是一支给定股票第","买卖股票的最佳时机","代码1","代码2","因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。","在121题的基础上稍微修改即可：买入状态可以从买入状态或者卖出状态变迁得来，从买入状态变迁，利润保持不变；从卖出状态变迁，利润为卖出状态的利润sold减去当前的价格。","在第","在这种情况下,","天","天和第","天接连购买股票，之后再将它们卖出。","天的价格。","天（股票价格","思路1","思路2","所以最大利润为","没有交易完成,","注意你不能在第","注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。","示例","给定一个数组，它的第","解释:","设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。","输入:","输出:","这笔交易所能获得利润","随后，在第","（股票价格"],"动态规划/132. 分割回文串 II.html":["\"aab\"","(int","+","0;","1","1),","132.","=","[\"aa\",\"b\"]","arrays.fill(dp,","boolean[][]","boolean[s.length()][s.length()];","class","dp","dp[0]","i)的子串的最少分割次数。i=0时由于只有一个字符，所以其最小分割次数为0。","ii","int","int[]","int[s.length()];","min(dp(j)","mincut(str","new","p","public","s","s)","s.length());","solut","s，将","{","代码","分割回文串","分割成","分割成一些子串，使每个子串都是回文串。","思路","状态变迁公式为dp(i)","示例:","给定一个字符串","解释:","设dp(i)表示范围为(0,","输入:","输出:","返回符合要求的最少分割次数。","这样两个回文子串。","进行一次分割就可将"],"动态规划/152. 乘积最大子序列.html":["(int","0","152.","1:","1;","1]","2,","2,0,","2,4]","2:","6","6。","=","[","[2,3,","[2,3]","class","int","maxproduct(int[]","maxval","minval","num","nums)","nums[0],","nums[0];","public","re","solut","{","不是子数组。","乘积最大子序列","代码","因为","基本思路与最大连续子串和一样。不过要注意的是由于负数之间的乘积为正数，所以需要同时计算最小子串乘积。","子数组","思路","有最大乘积","示例","结果不能为","给定一个整数数组","解释:","输入:","输出:","，找出一个序列中乘积最大的连续子序列（该序列至少包含一个数）。"],"动态规划/87. 扰乱字符串.html":["!=","\"abcde\",","\"at\"","\"caebd\"","\"eat\"","\"gr\"","\"great\"","\"great\",","\"rgeat\"","\"rgeat”","\"rgtae\"","\"rgtae”","&&","(dp[k][i][j","(dp[k][i][j]","(int","(s1.equals(s2))","(s1.length()",")","+","/","//","0;","1","1:","1;","2:","87.","=",">=","\\","boolean","class","dict","dp[n","dp[n][i][j]代表s1中起点为i的长度为n的字符串是否为s2中起点为j的长度为n的字符串的扰乱字符串","e","eat","fals","false;","g","gr","great","int[26];","int[]","isscramble(str","j","k;","k]","k])","k][i","k][j","k][j]),","l","n","new","public","r","return","rg","rgeat","rgtae","s1","s1,","s1，我们可以把它递归地分割成两个非空子字符串，从而将其表示为二叉树。","s2","s2)","s2.length())","s2，判断","solut","string","t","ta","tae","true","true;","{","||","。","下图是字符串","代码1（dp，20ms）","代码2（递归","优化，2ms）","例如，如果我们挑选非叶节点","同样地，如果我们继续交换节点","和","在扰乱这个字符串的过程中，我们可以挑选任何一个非叶节点，然后交换它的两个子节点。","我们将","扰乱字符串","是否是","状态转移公式：dp[n][i][j]","的一个扰乱字符串。","的一种可能的表示形式。","的子节点，将会产生另一个新的扰乱字符串","的扰乱字符串。","示例","称作","给出两个长度相等的字符串","给定一个字符串","输入:","输出:","，交换它的两个子节点，将会产生扰乱字符串"],"动态规划/714. 买卖股票的最佳时机含手续费.html":["((8","((9","(int","+","0","0,","0;","1","1)","1:","2","2)","2,","3,","4","4)","4,","714.","8","8,","8.","9","9],","=","[1,","class","fee","fee)","hold","int","integer.min_value;","maxprofit(int[]","price","prices,","prices[0]","prices[3]","prices[4]","prices[5]","prices，其中第","public","sold","solut","{","个元素代表了第","买卖股票的最佳时机含手续费","代码","代表了交易股票的手续费用。","你可以无限次地完成交易，但是你每次交易都需要付手续费。如果你已经购买了一个股票，在卖出它之前你就不能再继续购买股票了。","在122题的基础上稍作修改即可。在每一次买入的时候除了减去当前价格，还要额外减去手续费。（也可以在卖出的时候减去手续费，但是在代码中会有整数溢出的情况出现)","在此处买入","在此处卖出","天的股票价格","思路","总利润:","注意:","示例","给定一个整数数组","能够达到的最大利润:","解释:","输入:","输出:","返回获得利润的最大值。","；非负整数"],"动态规划/121. 买卖股票的最佳时机.html":["(int","(prices.length","0","0)","0;","0。","1","121.","1:","1;","1）的时候买入，在第","2","2:","5","6","6,","6）的时候卖出，最大利润","7","=","==","[7,1,5,3,6,4]","[7,6,4,3,1]","hold","int","integer.min_value,","maxprofit(int[]","min","prices)","prices[0],","public","re","return","sold","{","。","个元素是一支给定股票第","买卖股票的最佳时机","代码1","代码2","因为卖出价格需要大于买入价格。","在第","在这种情况下,","天的价格。","天（股票价格","如果你最多只允许完成一笔交易（即买入和卖出一支股票），设计一个算法来计算你所能获取的最大利润。","当前价格。初始时sold为0，hold为负无穷，代表初始时不可能处于卖出状态。最后返回卖出状态的最大利润。","思路1","思路2","所以最大利润为","没有交易完成,","注意你不能在买入股票前卖出股票。","注意利润不能是","示例","给定一个数组，它的第","解释:","输入:","输出:","遍历prices数组，定义两个变量sold和hold。sold代表当前处于卖出状态时获得的最大利润，hold代表当前处于买入状态时获得的最大利润。卖出状态可以从卖出状态或者买入状态变迁得来，如果是从卖出状态变迁，则利润保持不变；如果是从买入状态变迁，利润增加当前的价格。买入状态可以从买入状态或者初始状态变迁得来，如果是从买入状态变迁，则利润保持不变，如果是从初始状态变迁，则利润为0","遍历prices数组，设置一个min变量存储到当前为止最小的价格。计算当前价格和min变量的差，并与最大利润进行比较。最大利润初始为0。"],"动态规划/85. 最大矩形.html":["'1')",")","//","0","0)","0;","1","6","85.","=","==","[","[\"1\",\"0\",\"0\",\"1\",\"0\"]","[\"1\",\"0\",\"1\",\"0\",\"0\"],","[\"1\",\"0\",\"1\",\"1\",\"1\"],","[\"1\",\"1\",\"1\",\"1\",\"1\"],","]","area","arrays.fill(right,","boundari","class","cn.com/problems/maxim","cur_right","cur_right);","da","for(int","height","https://leetcod","if(matrix.length","if(matrix[i][j]","initi","int","int[]","int[n];","j","j;}","ju","leetcode/","left","leftmost","m","math.min(right[j],","matrix)","matrix.length;","matrix[0].length;","maxarea","maximalrectangle(char[][]","n","n);","n;","new","possibl","public","rectangle/solution/zui","return","right","right[j]","rightmost","solut","updat","xing","{","{right[j]","}","代码","和","思路","最大矩形","的二维二进制矩阵，找出只包含","的最大矩形，并返回其面积。","示例:","给定一个仅包含","输入:","输出:"],"动态规划/120. 三角形最小路径和.html":["(int",")","+","0;","1","1))。在本题中采用自底向上遍历的顺序，直接使用triangle数组存储结果，无需额外空间。","1,","11（即，2","11）。","120.","2;","3","5","=",">=","[","[2],","[3,4],","[4,1,8,3]","[6,5,7],","]","class","f(i","int","j","j)","j),","j)代表从(i,","j)位置移动到三角底部的最小路径和，状态变迁公式为：f(i,","math.min(f(i","minimumtotal(list>","o(n)","public","solut","triangle(i,","triangle)","triangle.size()","{","三角形最小路径和","为三角形的总行数）来解决这个问题，那么你的算法会很加分。","代码","例如，给定三角形：","如果你可以只使用","思路","状态f(i,","的额外空间（n","给定一个三角形，找出自顶向下的最小路径和。每一步只能移动到下一行中相邻的结点上。","自顶向下的最小路径和为","说明："],"动态规划/174. 地下城游戏.html":["(int","(k)","(m","(p)","+","//","0","0)","0;","0），要么包含增加骑士健康点数的魔法球（若房间里的值为正整数，则表示骑士将增加健康点数）。","1","10","174.","1]","1]);","1]+1);","1][j+1]);","1][j]","1][n","2","2;","3","30","5","7。","=","==",">",">=","calculateminimumhp(int[][]","class","complexity:","dungeon","dungeon)","dungeon.length;","dungeon[0].length;","dungeon[i][j]","dungeon[i][j]+1，即初始值f[i][j]=","dungeon[i][j]+1，如果格子的值是非负数，那么初始值f[i][j]=1。","dungeon[i][j]+min(f[i+1][j],f[i][j+1])","dungeon[i][n","dungeon[m","f","f[0][0];","f[i+1][n","f[i][j+1]));","f[i][j]","f[i][j]=max(1,","f[i][n","f[m","final","game","i)","int","int[][]","int[m][n];","j","j)","m","math.max(1,","math.min(f[i+1][j],","n","new","o(mxn)","o(mxn),","public","return","solut","space","time","x","{","||","}","一些恶魔抓住了公主（p）并将她关在了地下城的右下角。地下城是由","下","下，则骑士的初始健康点数至少为","个房间组成的二维网格。我们英勇的骑士（k）最初被安置在左上角的房间里，他必须穿过地下城并通过对抗恶魔来拯救公主。","为了尽快到达公主，骑士决定每次只向右或向下移动一步。","代码","任何房间都可能对骑士的健康点数造成威胁，也可能增加骑士的健康点数，包括骑士进入的左上角房间以及公主被监禁的右下角房间。","例如，考虑到如下布局的地下城，如果骑士遵循最佳路径","先定义状态，f[i][j]表示进入(i,j)这个格子前所需要的最小健康点数。","再考虑状态的初始值，我们发现右下角那个坐标才是初始值，起点f[0][0]反而不知道，于是大致可以知道，这题是从右下角向左上角来填表。右下角格子，如果该格子的值为负数，那么进入这个格子前骑士需要的健康点数是","右","地下城游戏","思路","或以下，他会立即死亡。","接下来寻找状态转移方程。从初始值我们可以推测出状态转移是从右下角反向的，可以得到状态转移方程如下：","有些房间由恶魔守卫，因此骑士在进入这些房间时会失去健康点数（若房间里的值为负整数，则表示骑士将损失健康点数）；其他房间要么是空的（房间里的值为","编写一个函数来计算确保骑士能够拯救到公主所需的最低初始健康点数。","说明:","这是一个多阶段优化问题，有广搜，贪心，动规。这题显然贪心不行，于是范围缩小到广搜和动规。本题求最小健康点数，跟路径长度无关，因此广搜不适合。最后只剩下了动规这个方向。","骑士的健康点数没有上限。","骑士的初始健康点数为一个正整数。如果他的健康点数在某一时刻降至"],"动态规划/140. 单词拆分 II.html":["\"","\"\"","\")","\"and\",","\"applepen\",","\"cat","\"cat\"]","\"cats\",","\"catsanddog\"","\"catsandog\"","\"dog\",","\"dog\"]","\"pen\",","\"pine","\"pine\",","\"pineappl","\"pineapple\"]","\"pineapplepenapple\"","\"sand\",","(!wordbreaki(s,","();","(int","(str","(string","+","//","140.","1;","1];","1：","2：","3：",":","=","==","?","[","[\"apple\",","[\"cat\",","[\"cats\",","[]","]","appl","apple\"","apple\",","applepen","boolean","boolean[]","boolean[s.length()","class","dog\"","dog\",","dp","dp[0]","dp[0].add(\"\");","dp[i].add(str","dp[j])","dp[s.length()]","dp[s.length()];","ele.length());","ele:","i));","ii","int","linkedlist():","linkedlist<>();","list","list[]","list[s.length()","math.max(maxlength,","maxlength","new","null","pen","public","return","s","s,","s.substring(j,","sand","solut","str.length());","str:","true;","wordbreak(str","wordbreaki(str","worddict","worddict)","worddict))","worddict，在字符串中增加空格来构建一个句子，使得句子中所有的单词都在词典中。返回所有这些可能的句子。","{","}","为了防止在一些测试用例上超时，首先复用139题的代码来判断结果是否存在","代码","你可以假设字典中没有重复的单词。","分隔时可以重复使用字典中的单词。","单词拆分","和一个包含非空单词列表的字典","注意你可以重复使用字典中的单词。","示例","给定一个非空字符串","解释:","说明：","输入:","输出:"],"动态规划/123. 买卖股票的最佳时机 III.html":["##","(int","0","0,","0;","0。","0）的时候买入，在第","1","123.","1:","1）的时候买入，在第","2","2:","3","3:","3）的时候卖出，这笔交易所能获得利润","4","4）的时候卖出，这笔交易所能获得利润","5","5）的时候卖出,","6","7","8","=","[1,2,3,4,5]","[3,3,5,0,0,3,1,4]","[7,6,4,3,1]","```java","```给定一个数组，它的第","class","hold1","hold2","iii","int","integer.min_value;","maxprofit(int[]","prices)","public","sold1","sold2","solut","{","。","两笔","个元素是一支给定的股票在第","买卖股票的最佳时机","交易。","代码","你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。","因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。","在121题的基础上进行扩展。定义sold1和hold1，分别代表第一次卖出后和第一次买入后获得的利润，而sold2和hold2分别代表第二次卖出后和第二次买入后获得的利润。sold1与hold1的变迁公式与121题一致。第二次卖出状态可以由第二次卖出状态或者第二次买入状态变迁得来。第二次买入状态可以由第二次买入状态或者第一次卖出状态变迁得来。","在第","在这个情况下,","天","天和第","天接连购买股票，之后再将它们卖出。","天的价格。","天（股票价格","思路","所以最大利润为","没有交易完成,","注意:","注意你不能在第","示例","解释:","设计一个算法来计算你所能获取的最大利润。你最多可以完成","输入:","输出:","这笔交易所能获得利润","随后，在第","（股票价格"],"动态规划/940. 不同的子序列 II.html":["\"a\",","\"aa\"","\"aaa\"。","\"ab\",","\"aba\"。","\"abc\"。","\"ac\",","\"b\",","\"ba\",","\"bc\",","\"c\",","%=","(dp[n]","(int","(int)1e9","+","0)","0;","1","1);","10^9","1;","1：","2：","3：","7.","7;","940.",";","=","arrays.fill(last,","class","distinctsubseqii(str","dp","dp[0]","dp[i+1]","dp[last[x]];","dp[n]","i;","ii","int","int[26];","int[]","int[n+1];","last","last[x]","mod","mod;","n","new","public","s","s)","s.length();","solut","s，计算","{","}","不同的子序列","个不同的子序列分别是","代码","以及","只包含小写字母。","因为结果可能很大，所以返回答案模","提示：","的不同非空子序列的个数。","示例","给定一个字符串","解释：3","解释：6","解释：7","输入：\"aaa\"","输入：\"aba\"","输入：\"abc\"","输出：3","输出：6","输出：7"],"动态规划/139. 单词拆分.html":["\"and\",","\"appl","\"applepenapple\"","\"applepenapple\",","\"cat\"]","\"catsandog\",","\"code\"]","\"dog\",","\"leet","\"leetcode\"","\"leetcode\",","\"pen\"]","\"sand\",","(int","(string","+","//","139.","1;","1];","1：","2：","3：","=","[\"apple\",","[\"cats\",","[\"leet\",","apple\"。","boolean","boolean[]","boolean[s.length()","class","code\"。","dp","dp[0]","ele.length());","ele:","fals","int","list","math.max(maxlength,","maxlength","new","pen","public","s","s,","solut","true","true;","wordbreak(str","worddict","worddict)","worddict，判定","{","}","代码","你可以假设字典中没有重复的单词。","单词拆分","可以被拆分成","和一个包含非空单词列表的字典","因为","拆分时可以重复使用字典中的单词。","是否可以被空格拆分为一个或多个在字典中出现的单词。","注意你可以重复使用字典中的单词。","示例","给定一个非空字符串","解释:","计算worddict中最长单词的长度","说明：","输入:","输出:","返回"],"动态规划/309. 最佳买卖股票时机含冷冻期.html":["(int","(即冷冻期为","0,","0;","1","3","309.","=","[1,2,3,0,2]","[买入,","class","hold","hold，分别代表当前处于卖出状态时获得的利润，当前处于休息状态时的利润，当前处于买入状态时获得的利润。卖出状态只能从买入状态变迁得来。买入状态可以从买入状态或者休息状态变迁得来。休息状态可以从休息状态或者卖出状态变迁得来。初始时sold和rest都为0，hold为负无穷。最后返回sold和rest中的最大值。","int","integer.min_value;","maxprofit(int[]","prices)","public","rest","rest,","sold","solut","{","。​","个元素代表了第","买入,","代码","你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。","冷冻期,","卖出,","卖出]","卖出股票后，你无法在第二天买入股票","天)。","天的股票价格","定义三个变量sold,","对应的交易状态为:","思路","最佳买卖股票时机含冷冻期","示例:","给定一个整数数组，其中第","解释:","设计一个算法计算出最大利润。在满足以下约束条件下，你可以尽可能地完成更多的交易（多次买卖一支股票）:","输入:","输出:"],"动态规划/91. 解码方法.html":["\"12\"","\"226\"","\"ab\"（1","\"bbf\"","\"bz\"","\"l\"（12）。","\"vf\"","'0')","'a'","'b'","'z'","(2","(22","(int","(s.length()","...","0","0;","1","1,","1:","1;","2","26","26),","2:","2）或者","3","6)","6),","91.","=","==",">","class","dp0","dp1","int","numdecodings(str","public","return","s)","s.charat(0)","solut","z","{","||","。","一条包含字母","代码（dp）","它可以解码为","或者","的消息通过以下方式进行了编码：","示例","给定一个只包含数字的非空字符串，请计算解码方法的总数。","解码方法","解释:","输入:","输出:"],"动态规划/115. 不同的子序列.html":["\"abcde\"","\"aec\"","\"babgbag\",","\"bag\"","\"rabbbit\",","\"rabbit\"","(int","(s.charat(i","(上箭头符号",")","+","+=","//","0;","1)","1))","115.","1:","1;","1];","1][t.length()","2:","3","5","=","==","^","^^","^^^","^^^^","babgbag","class","dp","dp[0]","dp[i][j]表示s长度为i的前缀的子序列中t的长度为j的前缀出现的次数","dp[j","dp[j]","dp[t.length()];","int","int[]","int[][]","int[s.length()","int[t.length()","j","new","numdistinct(str","public","rabbbit","return","s","s,","solut","string","t","t)","t.charat(j","t，计算在","{","}","一个字符串的一个子序列是指，通过删除一些（也可以不删除）字符且不干扰剩余字符相对位置所组成的新字符串。（例如，\"ace\"","不同的子序列","不是）","中得到","代码1（dp）","代码2","出现的个数。","和一个字符串","如下图所示,","是","有","的一个子序列，而","的子序列中","的方案。","示例","种可以从","给定一个字符串","表示选取的字母)","解释:","输入:","输出:","（优化为一维数组）"],"动态规划/337. 打家劫舍 III.html":["(root","*","*/","+","/","/**","0};","1","1:","2","2:","3","337.","4","5","7","7.","9","9.","=","==","[3,2,3,null,3,null,1]","[3,4,5,1,3,null,1]","\\","binari","class","definit","dp(root);","dp(root.left);","dp(root.right);","dp(treenod","iii","int","int[]","int[]{0,","int[]{math.max(left[0],","left","left;","left[0]","left[1])","math.max(res[0],","math.max(right[0],","new","node.","null)","public","re","res[1]);","return","right","right;","right[0]};","right[1]),","rob(treenod","root)","root.val","solut","tree","treenod","treenode(int","val","val;","x)","x;","{","}","一道典型的树状dp的题。","代码","在上次打劫完一条街道之后和一圈房屋后，小偷又发现了一个新的可行窃的地区。这个地区只有一个入口，我们称之为“根”。","如果两个直接相连的房子在同一天晚上被打劫，房屋将自动报警。","小偷一晚能够盗取的最高金额","思路","打家劫舍","每个节点保存的状态是以当前节点为根节点的子树所能获得的最大值，具体分为包含当前节点和不包含当前节点这两种情况。","用自底向上的方法遍历整棵树。对于每一个节点，包含该节点的状态值为该节点值加上两个子节点不包含自身的状态值，而不包含该节点的状态值为两个子节点包含自身的状态值之和。","示例","解释:","计算在不触动警报的情况下，小偷一晚能够盗取的最高金额。","输入:","输出:","除了“根”之外，每栋房子有且只有一个“父“房子与之相连。一番侦察之后，聪明的小偷意识到“这个地方的所有房屋的排列类似于一棵二叉树”。"],"数论/264. 丑数 II.html":["(index","(int","0,","0;","1;","264.","=","class","ii","index","int","int[]","int[n];","j","k","long","n)","new","nthuglynumber(int","num","num[0]","pq","pq.add(long.valueof(1));","priorityqueu","priorityqueue<>();","public","solut","top","{","丑数","代码1","代码2（三指针法）"],"数论/347. 前 K 个高频元素.html":["(int","(k","(map.entri",",","0)","0;","1","1:","2","2:","347.","=",">","[1,1,1,2,2,3],","[1,2]","[1]","[1],","arraylist<>();","class","cn.com/problems/top","e1.getvalue();","e2)","e2.getvalue()","element","entry:","frequent","hashmap<>();","int","k","k)","list","log","map","map.entryset())","n","n)","new","num","nums,","o(n","pq","pq.add(entry);","priorityqueue<>((e1,","public","re","res.add(pq.poll().getkey());","res;","return","solut","topkfrequent(int[]","{","}","});","≤","个高频元素","代码","你可以假设给定的","你的算法的时间复杂度必须优于","前","总是合理的，且","数组中不相同的元素的个数。","是数组的大小。","来源：力扣（leetcode）","示例","给定一个非空的整数数组，返回其中出现频率前","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","说明：","输入:","输出:","链接：https://leetcod","高的元素。"],"数论/355. 设计推特.html":["&&","(!pq.isempty()","(!tweet.containskey(userid))","());","(followerid","(followset.containskey(followerid)","(followset.containskey(userid))","(ite.hasnext())","(tweet.containskey(followeeid))","(tweet.containskey(userid))","(推文id","(用户id","*","*/","/**","//","0;","1,","10","2);","355.","5).","5);","5].","6).","6);","=","==",">","[6,","arraylist<>();","call","class","cn.com/problems/design","compos","currenttim","currenttime++));","currenttime++);","currenttime;","data","each","feed","feed.","follow","follow(followerid,","followee.","followeeid","followeeid)","followeeid):","followerid,","followset","followset.get(followerid).add(followeeid);","followset.get(followerid).contains(followeeid))","followset.get(followerid).remove(followeeid);","followset.get(userid).iterator();","followset;","getnewsfeed(int","getnewsfeed(userid):","hashmap<>();","here.","herself.","id","initi","instanti","int","invalid,","it","ite.next();","item","iter","list","map","map>","n1.time;","n2)","n2.time","new","next;","node","node(int","node(tweetid,","node);","node.next","obj","obj.follow(followerid,followeeid);","obj.getnewsfeed(userid);","obj.posttweet(userid,tweetid);","obj.unfollow(followerid,followeeid);","object","op.","oper","order","param_2","post","posttweet(int","posttweet(userid,","pq","pq.add(tweet.get(followeeid));","pq.add(tweet.get(userid));","priorityqueu","priorityqueue<>((n1,","privat","public","recent","recent.","ret","ret.size()","retriev","return","return;","structur","such:","this.tim","this.tweetid","time)","time;","tweet","tweet.","tweet.get(userid);","tweet.put(userid,","tweet;","tweetid)","tweetid):","tweetid,","tweetid;","twitter","twitter()","twitter();","twitter.follow(1,","twitter.getnewsfeed(1);","twitter.posttweet(1,","twitter.posttweet(2,","twitter.unfollow(1,","unfollow","unfollow(followerid,","unfollow(int","user","user'","userid)","userid,","void","{","}","});","代码","关注一个用户","创建一条新的推文","取消关注一个用户","因为用户1已经不再关注用户2.","推文id","推文id6应当在推文id5之前，因为它是在5之后发送的.","来源：力扣（leetcode）","检索最近的十条推文。每个推文都必须是由此用户关注的人或者是用户自己发出的。推文必须按照时间顺序由最近的开始排序。","用户1关注了用户2.","用户1发送了一条新推文","用户1取消关注了用户2.","用户1的获取推文应当返回一个列表，其中包含一个id为5的推文.","用户1的获取推文应当返回一个列表，其中包含两个推文，id分别为","用户2发送了一个新推文","示例:","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","设计一个简化版的推特(twitter)，可以让用户实现发送推文，关注/取消关注其他用户，能够看见关注人（包括自己）的最近十条推文。你的设计需要支持以下的几个功能：","设计推特","链接：https://leetcod"],"数论/166. 分数到小数.html":["!=","\"(\");","\"0\";","\"0.(6)\"","\"0.5\"","\"2\"","%","&&","(map.containskey(reminder))","(numer","*","/","0","0)","1","1,","10)","166.","1:","2","2,","2:","3","3:","=","==",">","a,","b)","class","cn.com/problems/fract","decim","denomin","denominator);","denominator;","denominator，以字符串形式返回小数。","divisor","fractiontodecimal(int","hashmap<>();","int","long","long.valueof(a);","long.valueof(b);","map","map.put(numerator,","map.put(reminder,","new","numer","public","re","recur","remind","reminder;","res.append(\")\");","res.append((numer","res.append(string.valueof(divisor));","res.insert(map.get(reminder),","res.length());","res.tostring();","return","solut","string","stringbuild","stringbuilder();","{","||","}","代码","分数到小数","和分母","如果小数部分为循环小数，则将循环的部分括在括号内。","来源：力扣（leetcode）","示例","给定两个整数，分别表示分数的分子","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","输入:","输出:","链接：https://leetcod"],"数论/373. 查找和最小的K对数字.html":["&&","(!pq.isempty()","(nums1.length","(u,v)，其中第一个元素来自","(u1,v1),","(u2,v2)","(uk,vk)。","+","...","0","0)","0,","0;","1:","2","2:","3","373.","3:","=","==",">","[1,1,2],","[1,1],[1,1]","[1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]","[1,2,3],","[1,2],","[1,2],[1,4],[1,6]","[1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]","[1,3],[2,3]","[1,7,11],","[2,4,6],","[3],","arraylist<>();","class","cn.com/problems/find","hashset<>();","index1","index1,","index1;","index2","index2,","index2;","int","int[]","k","k)","ksmallestpairs(int[]","k。","list>","n1.num1","n1.num2","n2)","n2.num1","n2.num2;","new","node","node(0,","node(int","num1,","num1;","num2)","num2;","nums1","nums1,","nums1[0],","nums1，第二个元素来自","nums2","nums2,","nums2.length","nums2[0]));","nums2。","pair","pq","pq.add(new","priorityqueu","priorityqueue<>((n1,","public","ret","ret.size()","return","set","smallest","solut","sum","this.index1","this.index2","this.num1","this.num2","{","||","}","});","也可能序列中所有的数对都被返回:[1,3],[2,3]","代码","以及一个整数","和","定义一对值","对数字","对数：","找到和最小的","来源：力扣（leetcode）","查找和最小的k对数字","示例","给定两个以升序排列的整形数组","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","解释:","输入:","输出:","返回序列中的前","链接：https://leetcod"],"数论/202. 快乐数.html":["!=","%","(n","(slow","(true)","*","+","+=","//","/=","0)","02","0;","1","100","10;","12","19","1;","1。如果可以变为","1，也可能是无限循环但始终变不到","1，那么这个数就是快乐数。","202.","22","62","68","82","92","=","==","boolean","class","cn.com/problems/happi","fast","fast)","int","ishappy(int","n","n)","n,","n;","next(int","next(next(fast));","next(slow);","num","num;","number","public","return","slow","solut","sum","sum;","true","{","}","一个“快乐数”定义为：对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和，然后重复这个过程直到这个数变为","代码","快乐数","来源：力扣（leetcode）","用快慢指针找到循环的入口","示例:","编写一个算法来判断一个数是不是“快乐数”。","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","解释:","输入:","输出:","链接：https://leetcod"],"数论/172. 阶乘后的零.html":["(n","+=","/","//","/=","0","0)","0;","1","120,","172.","1:","2:","3","3!","5","5!","5;","6,","=",">","class","complexity:","factori","int","n","n!","n!中有多少个0，取决于n!中一共有多少个质因数2和5，由于2的个数一定大于5，所以最终取决于有多少个5。","n)","n，返回","o(1)","o(log","o(logn),","public","result","result;","return","solut","space","time","trail","trailingzeroes(int","zero","{","}","。","个零.","代码","你算法的时间复杂度应为","尾数中有","尾数中没有零。","思路","来源：力扣（leetcode）","示例","结果尾数中零的数量。","给定一个整数","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","解释:","说明:","输入:","输出:","链接：https://dev.lingkou.xyz/problems/factori","阶乘后的零"],"数论/313. 超级丑数.html":["(int","+","0","0;","1","12","12,","1;","1];","313.","32","4","=","[2,7,13,19]","[2,7,13,19]，前","class","index","int","int[]","int[n","int[primes.length];","k","n","n,","new","nthsuperuglynumber(int","num","num[0]","pindex","prime","primes)","public","solut","{","。","个超级丑数。","个超级丑数序列为：[1,2,4,7,8,13,14,16,19,26,28,32]","中的数字以升序排列。","中的正整数。","代码","是任何给定","的质数列表","的超级丑数。","示例:","给定","给定长度为","编写一段程序来查找第","解释:","说明:","超级丑数","超级丑数是指其所有质因数都是长度为","输入:","输出:"],"数论/292. Nim 游戏.html":["1","292.","3","4","cn.com/problems/nim","fals","game","nim","你们是聪明人，每一步都是最优解。","你和你的朋友，两个人一起玩","可以先用动态规划发现规律，然后优化成一条表达式。","因为无论你拿走","块","块、2","块石头。","块石头，最后一块石头总是会被你的朋友拿走。","块石头，那么你永远不会赢得比赛；","如果堆中有","思路","拿掉最后一块石头的人就是获胜者。你作为先手。","来源：力扣（leetcode）","游戏","游戏：桌子上有一堆石头，每次你们轮流拿掉","示例:","编写一个函数，来判断你是否可以在给定石头数量的情况下赢得游戏。","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","解释:","输入:","输出:","还是","链接：https://leetcod"],"位运算/89. 格雷编码.html":["(int",")","+","0","00","000","001","01","010","011","0;","1","1);","10","11","1:","1。","2","20","2:","2n。当","3","89.","=",">","[0,1,3,2]","[0]","[0]。","arraylist","arraylist<>();","class","cn.com/problems/gray","code","graycode(int","j","list","n","n)","new","n，其格雷编码序列并不唯一。","n，打印其格雷编码序列。格雷编码序列必须以","p);","public","ret","ret.add(0);","ret.add(ret.get(j)","ret;","return","solut","{","}","也是一个有效的格雷编码序列。","代码1","代码2（公式法）","位数为2时的格雷码为：","例如，[0,2,3,1]","因此，当","对于给定的","开头。","当位数为3时，在所有位数为2的格雷码前添加一个0并不会破坏两个连续的数值仅有一个位数的差异这条规则，而且其值保持不变，如下：","思路1","我们定义格雷编码序列必须以","找规律：","时，其格雷编码序列为","时，长度为","来源：力扣（leetcode）","格雷编码","格雷编码是一个二进制数字系统，在该系统中，两个连续的数值仅有一个位数的差异。","然后考虑在原有位数为2的格雷码前添加1，可以看到按照原有顺序添加1后第一个值100与添加0后的最后一个值010之间并不连续。但是注意到格雷码反转后其两个连续数值依然仅有一个位数的差异，同时在10前添加1后的110与010是连续的。所以可以将原有位数为2的格雷码反转后在前面添加一个1，然后拼接到之前添加0后的格雷码后面。这样位数为3的格雷码就形成了，同时前1/2个格雷码与位数为2的格雷码相同。","的格雷编码序列，其长度为","示例","给定一个代表编码总位数的非负整数","给定编码总位数为","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","解释:","输入:","输出:","链接：https://leetcod"],"位运算/201. 数字范围按位与.html":["!=","(m","0","0;","1;","201.","=",">>=","[m,","class","int","m","m,","n","n)","n]，其中","offset","offset++;","public","rangebitwiseand(int","solut","{","}","代码","数字范围按位与","给定范围"],"位运算/52. N皇后 II.html":["\"...q\",","\"..q.\"],","\".q..\"]","\"q...\",","(1","(ld","+","//","0,","0;","1","1,","2","4","52.","8","=",">","[","[\"..q.\",","[\".q..\",","]","class","cn.com/problems/n","dfs(0,","ii","int","n","n)","n×n","n皇后","n，返回","p)","public","queen","solut","sum","totalnqueens(int","{","上图为","个皇后放置在","代码","来源：力扣（leetcode）","的棋盘上，并且使皇后彼此之间不能相互攻击。","皇后不同的解决方案的数量。","皇后问题存在如下两个不同的解法。","皇后问题的一种解法。","皇后问题研究的是如何将","示例:","给定一个整数","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","解法","解释:","输入:","输出:","链接：https://leetcod"],"位运算/51. N皇后.html":["!=","\"...q\",","\"..q.\"],","\".q..\"]","\"q...\",","&","'.'","'q'","((n","(int","(ld","(n","(po","(rd","(row","(~po","+","//","//接着继续计算n中相邻4位的和，8位的和。。。直到相邻32位的和","0)","0;","0x0000ffff)","0x0000ffff);","0x00ff00ff)","0x00ff00ff);","0x0f0f0f0f)","0x0f0f0f0f);","0x33333333)","0x33333333);","0x55555555)","0x55555555);","0x55555555的二进制为：01010101010101010101010101010101，也即01互相间隔。n和0x55555555的与结果加上n右移一位后和0x55555555的与结果正是n中相邻两位的和","1","1)","1);","1,","16)","1;","2","2)","4","4)","51.","8","8)","=","==",">=",">>","[","[\"..q.\",","[\".q..\",","]","arr","arr)","arr.set(countones(row),","arr.size()));","arraylist","arraylist(arr));","arraylist<>();","class","cn.com/problems/n","countones(int","dfs(row","int","ld);","linkedlist<>();","list>","n","n)","n;","new","n×n","n皇后","n，返回所有不同的","p","p)","p,","p;","po","privat","public","queen","rd","re","res.add(new","return","return;","rowstr(int","rowstr(p,","sb","sb.tostring();","solut","solvenqueens(int","string","stringbuild","stringbuilder();","sum;","upperlim","upperlim)","{","|","}","~(row","一定要在res中添加新创建的arraylist","上图为","个皇后放置在","为了求整型n中1的个数，可以采用分而治之的方法","代码","分别代表了皇后和空位。","和","所有行都有一个有效的皇后，解法增1","来源：力扣（leetcode）","每一种解法包含一个明确的","的棋盘上，并且使皇后彼此之间不能相互攻击。","皇后问题存在两个不同的解法。","皇后问题的一种解法。","皇后问题的棋子放置方案，该方案中","皇后问题的解决方案。","皇后问题研究的是如何将","示例:","第一行首先计算n中相邻2位的和，由于相邻两位的和最大也只为2（即只占用2个比特位），因此相邻两位的计算结果可以存储在本地（即当前两个比特位中），不会影响其他比特位。","给定一个整数","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","解法","解释:","计算pos最靠右的1的位置","计算当前行还可以放置皇后的位置","输入:","输出:","链接：https://leetcod"],"位运算/1275. 找出井字棋的获胜者.html":["\"","\")","\"draw\"；如果仍会有行动（游戏未结束），则返回","\"o","\"o\"","\"oo","\"oox\"","\"pending\"。","\"x","\"x\"","\"xo","\"xox\"","\"xx","\"xxo\"","(\"","(int","0,","0;","1","1275.","146,","1：","2","273,","292,","2：","3","3：","4：","56,","7,","73,","84};","=",">","[[0,0],[1,1],[0,1],[0,2],[1,0],[2,0]]","[[0,0],[1,1],[2,0],[1,0],[1,2],[2,1],[0,1],[0,2],[2,2]]","[[0,0],[1,1]]","[[0,0],[2,0],[1,1],[2,1],[2,2]]","b","b）记录了两人各自的棋子位置。","b），就返回该游戏的获胜者；如果游戏以平局结束，则返回","class","int","int[]","int[]{448,","move","moves)","moves，其中每个元素是大小为","new","o","public","solut","string","tictactoe(int[][]","win","x","{","上。","个相同的（非空）棋子排成一条直线（行、列、对角线）时，游戏结束。","井字棋游戏的规则如下：","代码","作为棋子。","作为棋子，而第二个玩家","你可以假设","只能放在空方格中，而不能放在已经被占用的方格上。","只要有","后","和","在一个","如果所有方块都放满棋子（不为空），游戏也会结束。","如果游戏存在获胜者（a","将先行动。","总是用","或","找出井字棋的获胜者","提示：","有效（遵循井字棋规则），网格最初是空的，a","游戏结束后，棋子无法再进行任何移动。","玩家轮流将棋子放在空方格","的另一个数组（元素分别对应网格的行和列），它按照","的网格上玩井字棋。","的行动顺序（先","示例","第一个玩家","给你一个数组","获胜。","获胜，他总是先走。","解释：\"a\"","解释：\"b\"","解释：游戏还没有结束。","输入：move","输出：\"a\"","输出：\"b\"","输出：\"draw\"","输出：\"pending\"","输出：由于没有办法再行动，游戏以平局结束。","都"],"位运算/137. 只出现一次的数字 II.html":["&","(int","//","0,","0;","1)","137.","1:","260.","2:","3","3]","99",":","=","==",">","[0,1,0,1,0,1,99]","[1,2,1,3,2,5]","[2,2,3,2]","[3,5]","[5,","^","^=","break;","class","cn.com/problems/singl","ii","iii","int","int[]","k)","new","number","nums)","nums[i];","nums，其中恰好有两个元素只出现一次，其余所有元素均出现两次。","on","public","res1","return","singlenumber(int[]","solut","three","two","xor","xor};","xor为两个结果元素异或的结果","{","{res1,","}","也是正确答案。","代码","你可以不使用额外空间来实现吗？","你的算法应该具有线性时间复杂度。","你的算法应该具有线性时间复杂度。你能否仅使用常数空间复杂度来实现？","利用k排除掉其中一个元素，找出另一个元素","只出现一次的数字","找出只出现一次的那两个元素。","来源：力扣（leetcode）","注意：","示例","结果输出的顺序并不重要，对于上面的例子，","给定一个整数数组","给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现了三次。找出那个只出现了一次的元素。","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","说明：","输入:","输出:","链接：https://leetcod"],"位运算/187. 重复的DNA序列.html":["\"aaaaacccccaaaaaccccccaaaaagggttt\"","\"cccccaaaaa\"]","();","(int","(ret);","(s.length()","//","0001","001","0011","0100","0101","011","0111","0;","10","100","111","187.","65","67","71","84","=",">","arr","a，c，g","c","char[]","class","cn.com/problems/rep","dna","findrepeateddnasequences(str","g","hashset<>();","int","key","list","new","public","ret","s)","s.tochararray();","sequenc","set","solut","t","{","}","个字母长的序列（子串）。","中的重复序列有时会对研究非常有帮助。","代码","分子中所有出现超过一次的","和","所有","时，识别","来源：力扣（leetcode）","的核苷酸组成，例如：“acgaattccg”。在研究","示例：","编写一个函数来查找","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","输入：","输出：[\"aaaaaccccc\",","都由一系列缩写为","重复的dna序列","链接：https://leetcod"],"位运算/136. 只出现一次的数字.html":["(int","0","0;","1","136.","1:","2","2:","3","4","=","=>","[2,2,1]","[2,3,2,4,4]","[4,1,2,1,2]","^","^3","b","c","class","cn.com/problems/singl","int","n","number","nums)","public","ret","singlenumber(int[]","solut","var","{","三条规则：","交换律：a","代码","任何数于0异或为任何数","你可以不使用额外空间来实现吗？","你的算法应该具有线性时间复杂度。","例子：","只出现一次的数字","思路","来源：力扣（leetcode）","相同的数异或为0:","示例","给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","说明：","输入:","输出:","链接：https://leetcod"],"剑指offer/46. 把数字翻译成字符串.html":["!=","\"bczi\",","\"bwfi\",","\"mcfi\"和\"mzi\"","%","(int","(num","+","/=","0","0)","10);","10;","12258","12258有5种不同的翻译，分别是\"bccfi\",","1:","1;","1];","46.","5","=","==","arraylist<>();","class","collections.reverse(nums);","dp","dp[0]","dp[1]","int","int[]","int[nums.size()","list","new","num","num)","nums.add(num","public","return","solut","translatenum(int","{","}","“a”","“b”，……，11","“l”，……，25","“z”。一个数字可能有多个翻译。请编程实现一个函数，用来计算一个数字有多少种不同的翻译方法。","代码","把数字翻译成字符串","提示：","示例","给定一个数字，我们按照如下规则把它翻译为字符串：0","翻译成","解释:","输入:","输出:","，1"],"剑指offer/28. 对称的二叉树.html":["!=","&&","(node1","(node1.v","*","*/","/","/**","0","1","1：","2","28.","2：","3","4","=","==","[1,2,2,3,4,4,3]","[1,2,2,null,3,null,3]","\\","binari","boolean","class","definit","false;","int","issymmetric(node1.left,","issymmetric(node1.right,","issymmetric(root,","issymmetric(treenod","left;","node.","node1,","node2","node2)","node2.left);","node2.right)","node2.val)","null","null)","privat","public","return","right;","root)","root);","solut","tree","treenod","treenode(int","true;","val","val;","x)","x;","{","||","}","代码","但是下面这个","例如，二叉树","则不是镜像对称的:","对称的二叉树","是对称的。","示例","请实现一个函数，用来判断一棵二叉树是不是对称的。如果一棵二叉树和它的镜像一样，那么它是对称的。","输入：root","输出：fals","输出：true","限制："],"剑指offer/4.二维数组中的查找.html":["!=","##","(lrow","(matrix.length","(row","(rrow","(target","**/","+","/**","0","0)","0,","1","1)","10","11","11,","12","12,","13","13,","14,","15],","16,","17,","19],","1:","1;","2","20","20],","20，返回","21","21,","22","22],","23","23,","24],","26,","2:","2d","3","3,","30","30,","30]","31","32","33","34,","4","4,","4.二维数组中的查找","5,","50]","5，返回","6,","7,","7],","8,","9,","=","==",">",">>",">>>","[","[1,","[10,","[18,","[2,","[23,","[3,","]","```java","```编写一个高效的算法来判断","boolean","class","cn.com/problems/search","col","fals","false;","false。","ii","int","l240.","l74.","lcol","lrow","m","matrix","matrix,","matrix.length","matrix[0].length","matrix[lrow][lcol]","matrix[lrow][mid])","matrix[row][col])","mid","mid;","n","public","rcol","return","row","rrow","rrow)","searchmatrix(int[][]","solut","target","target)","target;","target。该矩阵具有以下特性：","true","true;","true。","x","{","||","}","中的一个目标值","代码","如下：","搜索二维矩阵","来源：力扣（leetcode）","每列的元素从上到下升序排列。","每行中的整数从左到右按升序排列。","每行的元素从左到右升序排列。","每行的第一个整数大于前一行的最后一个整数。","现有矩阵","矩阵","矩阵中，是否存在一个目标值。该矩阵具有如下特性：","示例","示例:","给定","编写一个高效的算法来搜索","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","观察例子，发现与右上角的元素同一行的元素都不大于它，而同一列的元素都不小于它","输入:","输出:","链接：https://leetcod"],"剑指offer/L191. 位1的个数.html":["!=","&","&&","'1'。","((n","(cur","(cur.next","(cur.val","(index","(int","(long)n;","(n","(num","*","*/","*=","/*","//","0)","0);","0.25","0.25000","00000000000000000000000000001011","00000000000000000000000010000000","0;","1","1)","1));","1);","1/22","1/4","10","100.0","1024.00000","11111111111111111111111111111101","16.","18.","1:","1dao","1、2、3","1：","2","2.00000,","2.10000,","2147483648","2:","2：","3","31","3:","3。","3，则打印出","3：","9.26100","999。","=","==",">",">2",">3",">4",">5",">=","[1,2,3,4,5,6,7,8,9]","arraylist","arraylist<>();","arraytoint(cur);","bit","class","cn.com/problems/da","cn.com/problems/numb","cong","count","count++;","count;","cur","cur,","cur.next.val)","cur.next;","cur.val","cur.val;","cur;","da","de","deleteduplication(listnod","doubl","dummi","dummy.next","dummy.next;","dummy;","dupnum","dupnum)","hammingweight(int","helper(arraylist","helper(ret,","i).toarray();","index)","int","int[]","int[n];","java","java）中，没有无符号整数类型。在这种情况下，输入和输出都将被指定为有符号整数类型，并且不应影响您的实现，因为无论整数是有符号的还是无符号的，其内部的二进制表示形式都是相同的。","l191.","l50.","lcof","listnod","listnode(","listnode(int","long","mypow(doubl","n","n)","n,","need","new","next","null","null)","null;","num","nwei","n，按顺序打印出从","phead)","phead;","pow(x,","pre","pre.next","pre.next;","printnumbers(int","public","ret","ret,","ret.add(arraytoint(cur));","ret.stream().maptoint(i","ret;","return","return;","shu","solut","this.val","treat","unsign","val)","val;","valu","void","x","x,","x;","yin","zui","{","}","‘1’","一直到最大的","中，共有","中，共有一位为","中，共有三位为","中，编译器使用二进制补码记法来表示有符号整数。因此，在上面的","中，输入表示有符号整数","为正整数","代码","位1的个数","位为","位十进制数。比如输入","位数","例如，链表1","删除链表中的重复元素","到最大的","在","在一个排序的链表中，存在重复的结点，请删除该链表中重复的结点，重复的结点不保留，返回链表头指针。","处理后为","如果多次调用这个函数，你将如何优化你的算法？","实现","打印从1到最大的n位数","提示：","数值的整数次方","来源：力扣（leetcode）","次幂函数。","注意测试用例2.00000,","用返回一个整数列表来代替打印","的","的个数（也被称为汉明重量）。","示例","编写一个函数，输入是一个无符号整数，返回其二进制表达式中数字位数为","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","解释:","解释：输入的二进制串","说明:","说明：","请注意，在某些语言（如","输入:","输入数字","输入：00000000000000000000000000001011","输入：00000000000000000000000010000000","输入：11111111111111111111111111111101","输出:","输出：1","输出：3","输出：31","进阶:","链接：https://leetcod","面试题17.","，即计算"],"剑指offer/43. 1～n整数中1出现的次数.html":["!=","%","(cur","(high","(n","(高位","*","*=","+","+=","/","//","0)","0;","1","1)","1.","100","10;","12","13","1;","1：","1～n整数中1出现的次数","2。若百位上为0，百位上出现1的数字共有","2：","3.","43.","=","==","class","countdigitone(int","cur","high","i)","i;","int","long","low","n","n)","public","return","solut","sum","sum;","{","}","个","代码","以百位上1出现的次数为例，分三种情况讨论（高位为百位左边的数字，","低位","低位为百位右边的数字）","例如，输入12，1～12这些整数中包含1","百位上出现1的数字共有","的数字有1、10、11和12，1一共出现了5次。","示例","若百位上为1，百位上出现1的数字共有","若百位上大于1,","输入一个整数","输入：n","输出：5","输出：6","限制：","高位","，求1～n这n个整数的十进制表示中1出现的次数。"],"剑指offer/L153. 寻找旋转排序数组中的最小值.html":["(","(left","(nums[mid]",")。","+","0","0,","1","1:","1;","2:","=",">",">>","[0,1,2,4,5,6,7]","[3,4,5,1,2]","[4,5,6,7,0,1,2]","class","findmin(int[]","int","l153.","left","mid","mid;","nums)","nums.length","nums[left];","nums[right])","public","return","right","solut","{","}","代码","你可以假设数组中不存在重复元素。","使用二分法可以将时间复杂度缩减到o(logn)。","例如，数组","假设按照升序排序的数组在预先未知的某个点上进行了旋转。","可能变为","寻找旋转排序数组中的最小值","思路","示例","请找出其中最小的元素。","输入:","输出:","这里排除中位数的逻辑是如果mid上的值大于right上的值，则最小元素一定处于右区间（不包含mid）。","题目描述"],"剑指offer/29. 顺时针打印矩阵.html":["){","*","0","1;","1;i>=rl+1;i","1：","29.","2：",";","=","[[1,2,3,4],[5,6,7,8],[9,10,11,12]]","[[1,2,3],[4,5,6],[7,8,9]]","answer;","answer=new","answer[cur++]=matrix[i][cl];","answer[cur++]=matrix[rh][j];","ch","cl++;","cl=0,ch=matrix[0].length","class","cur=0;","for(int","i=rh","if(matrix==null||matrix.length==0||matrix[0].length==0){","int","int[0];","int[]","int[matrix.length","matrix)","matrix[0].length];","new","public","return","rh","rl++;","rl=0,rh=matrix.length","solut","spiralorder(int[][]","while(rl=cl;j","{","}","代码","示例","输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。","输入：matrix","输出：[1,2,3,4,8,12,11,10,9,5,6,7]","输出：[1,2,3,6,9,8,7,4,5]","限制：","顺时针打印矩阵"],"剑指offer/45. 把数组排成最小的数.html":["\"102\"","\"3033459\"","(int","(s1","+","0","0;","1:","2:","45.","=","[10,2]","[3,30,34,5,9]","arraylist<>();","class","compare(str","int","list","minnumber(int[]","new","numarr","nums)","public","return","s1);","s1,","s2)","s2).compareto(s2","solut","string","{","}","代码","把数组排成最小的数","提示:","示例","输入:","输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。","输出:"],"剑指offer/36. 二叉搜索树与双向链表.html":["!=","&&","(cur","(cur.left","(curpr","(first","(pre.right","(root","*/","/*","//","36.","426","=","==","_left,nod","_left;","_right)","_right;","_val)","_val,nod","_val;","biao","binari","cha","class","cn.com/problems/","cn.com/problems/convert","cur","cur)","cur.left","cur.left;","cur.right;","cur;","curpr","curpre.right","curpre;","definit","doubli","first","first.left","first;","int","last","last.right","last;","lcof","left","left;","lian","link","list/","node","node()","node(int","node.","null","null)","null,","null;","null;;","pre","pre,","pre.right","pre.right;","public","return","right","right;","root)","root,","search","shu","shuang","solut","sort","sou","suo","tree","treetodoublylist(nod","val","val;","xiang","yu","{","{}","}","};","下图展示了上面的二叉搜索树转化成的链表。“head”","为了让您更好地理解问题，以下面的二叉搜索树为例：","二叉搜索树与双向链表","代码","我们希望将这个二叉搜索树转化为双向循环链表。链表中的每个节点都有一个前驱和后继指针。对于双向循环链表，第一个节点的前驱是最后一个节点，最后一个节点的后继是第一个节点。","来源：力扣（leetcode）","注意：本题与主站","注意：此题对比原题有改动。","特别地，我们希望可以就地完成转换操作。当转化完成以后，树中节点的左指针需要指向前驱，树中节点的右指针需要指向后继。还需要返回链表中的第一个节点的指针。","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","表示指向链表中有最小元素的节点。","输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的循环双向链表。要求不能创建任何新的节点，只能调整树中节点指针的指向。","链接：https://leetcod","题相同：https://leetcod"],"剑指offer/48. 最长不含重复字符的子字符串.html":["\"abc\"，所以其长度为","\"abcabcbb\"","\"b\"，所以其长度为","\"bbbbb\"","\"pwwkew\"","\"wke\"，所以其长度为","(right","(s.length()","+","0)","0,","0;","1","1)","1);","1:","1;","1。","2:","3","3:","3。","48.","=","==","class","hashmap<>();","int","left","left++;","len","len;","lengthoflongestsubstring(str","map","map.get(s.charat(left))","map.put(s.charat(left),","math.max(len,","new","public","return","right","right++;","s)","s.length","solut","{","}","代码","因为无重复字符的最长子串是","子串","提示：","是一个子序列，不是子串。","最长不含重复字符的子字符串","的长度，\"pwke\"","示例","解释:","请从字符串中找出一个最长的不包含重复字符的子字符串，计算该最长子字符串的长度。","请注意，你的答案必须是","输入:","输出:"],"剑指offer/24.反转链表.html":["!=","(cur","(head","*","*/","/**","0","1","24.反转链表","5","=","==",">1",">2",">3",">4",">5",">null","class","cur","cur.next","cur.next;","cur;","definit","head)","head,","head.next","head.next.next","head;","int","link","list.","listnod","listnode(int","next","next;","null","null)","null,","null;","pre","pre;","public","return","reverselist(head.next);","reverselist(listnod","singli","solut","temp","temp;","val","val;","x)","x;","{","||","}","代码（迭代）","代码（递归）","定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。","示例:","输入:","输出:","限制："],"剑指offer/35. 复杂链表的复制.html":["!=","(cur","(cur.random","*/","/*","//","1);","10000","1：","2：","35.","3：","4：","=","[[1,1],[2,1]]","[[3,null],[3,0],[3,null]]","[[7,null],[13,0],[11,4],[10,2],[1,0]]","[]","class","copyrandomlist","copyrandomlist(nod","cur","cur.next","cur.next.next;","cur.next.random","cur.next;","cur.random.next;","definit","dummi","dummy.next;","dummy;","dummycur","dummycur.next","dummycur.next;","head)","head;","int","new","next","next;","node","node(","node(cur.val);","node(int","node.","null)","null;","null。","public","random","random;","return","solut","temp","temp.next","temp;","this.next","this.random","this.val","val)","val;","{","}","代码","函数，复制一个复杂链表。在复杂链表中，每个节点除了有一个","复杂链表的复制","指针指向下一个节点，还有一个","指针指向链表中的任意节点或者","提示：","示例","解释：给定的链表为空（空指针），因此返回","请实现","输入：head","输出：[[1,1],[2,1]]","输出：[[3,null],[3,0],[3,null]]","输出：[[7,null],[13,0],[11,4],[10,2],[1,0]]","输出：[]"],"剑指offer/30. 包含min函数的栈.html":["(st2.empty()","*/","/**","0.","2);","2.","20000","3);","3.","30.","=",">","class","cn.com/problems/bao","data","de","han","here.","initi","lcof","min","minhan","minstack","minstack()","minstack();","minstack.min();","minstack.pop();","minstack.push(","minstack.push(0);","minstack.top();","min、push","new","o(1)。","pop","public","push(int","shu","st1","st1,","st1.push(x);","st2","st2;","stack","stack<>();","structur","void","x","x)","zhan","{","||","}","代码","函数在该栈中，调用","包含min函数的栈","及","各函数的调用总次数不超过","定义栈的数据结构，请在该类型中实现一个能够得到栈的最小元素的","提示：","来源：力扣（leetcode）","次","的时间复杂度都是","示例:","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","返回","链接：https://leetcod"],"剑指offer/26. 树的子结构.html":["!=","&&","(a","(a.val","(b","*","*/","/","/**","0","1","1：","2","26.","2：","3","4","5","=","==","[1,2,3],","[3,1]","[3,4,5,1,2],","[4,1]","\\","a,","a:","a中有出现和b相同的结构和节点值。","b","b)","b);","b.left)","b.right);","b.val)","binari","boolean","b是a的子结构，","b：","class","definit","false;","helper(a,","helper(a.left,","helper(a.right,","helper(treenod","int","issubstructure(a.left,","issubstructure(a.right,","issubstructure(treenod","left;","node.","null","null)","privat","public","return","right;","solut","tree","treenod","treenode(int","true;","true，因为","val","val;","x)","x;","{","||","}","与","代码","例如:","即","树的子结构","的一个子树拥有相同的结构和节点值。","示例","给定的树","输入两棵二叉树a和b，判断b是不是a的子结构。(约定空树不是任意一个树的子结构)","输入：a","输出：fals","输出：true","返回","限制："],"剑指offer/32 - II. 从上到下打印二叉树 II.html":["!=","(!que.isempty())","(curlevel","(node.left","(node.right","(root","*","*/","/","/**","0)","0,","0;","15","1;","20","3","32","7","9","=","==",">","[","[15,7]","[3,9,20,null,null,15,7],","[3],","[9,20],","\\","]","arraylist<>();","binari","class","curlevel","definit","ii","ii.","int","left;","levelorder(treenod","linkedlist<>();","list","list.add(node.val);","list>","new","nextlevel","nextlevel++;","nextlevel;","node","node.","null)","public","que","que.offer(node.left);","que.offer(node.right);","que.offer(root);","que.poll();","queue","ret","ret.add(list);","ret;","return","right;","root)","solut","tree","treenod","treenode(int","val","val;","x)","x;","{","}","从上到下打印二叉树","从上到下按层打印二叉树，同一层的节点按从左到右的顺序打印，每一层打印到一行。","代码","例如:","提示：","给定二叉树:","节点总数","返回其层次遍历结果："],"剑指offer/22. 链表中倒数第k个节点.html":["!=","(head","(k","(node2.next","*","*/","/**","1","1)","2.","22.","4","=","==",">",">2",">3",">4",">5,",">5.","biao","class","cn.com/problems/lian","dao","definit","di","dian","getkthfromend(listnod","head,","head;","int","jie","k","k)","kge","lcof","link","list.","listnod","listnode(int","next;","node1","node1.next;","node1;","node2","node2.next;","null)","null;","public","return","shu","singli","solut","val","val;","x)","x;","zhong","{","}","代码","和","来源：力扣（leetcode）","注意","示例：","给定一个链表:","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。例如，一个链表有6个节点，从头节点开始，它们的值依次是1、2、3、4、5、6。这个链表的倒数第3个节点是值为4的节点。","返回链表","这道题的考点在于代码的鲁棒性，需要考虑到head为null以及链表长度小于k的情况（如果k是无符号整数还需要考虑k等于0的情况）","链接：https://leetcod","链表中倒数第k个节点"],"剑指offer/49. 丑数.html":["(index","0,","0;","1","1,","10","10,","12","1;","2,","264","2、3","3,","4,","49.","5","5,","6,","8,","9,","=","class","cn.com/problems/ch","cn.com/problems/ugli","ii/","index","int","int[]","int[n];","j","k","lcof","n","n)","new","nthuglynumber(int","num","number","number）。求按从小到大的顺序的第","nums[0]","public","shu","solut","{","不超过1690。","丑数","个丑数。","代码","和","我们把只包含因子","是丑数。","是前","来源：力扣（leetcode）","注意：本题与主站","的数称作丑数（ugli","示例:","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","解释:","说明:","输入:","输出:","链接：https://leetcod","题相同：https://leetcod"],"剑指offer/19. 正则表达式匹配.html":["\".*\"","\"a\"","\"a*\"","\"aa\"","\"aab\"","\"aab\"。","\"ab\"","\"c*a*b\"","\"mis*is*p*.\"","\"mississippi\"","&&","'*'","'.'","'.')","'a'","'a'。因此，字符串","'c'","(int","(s.charat(i","*。","+",".","0","0;","1)","19.","1:","1];","1][j","1][j]);","1][p.length()","2)","2:","3:","4:","5:","=","==",">","boolean","boolean[][]","boolean[s.length()","class","dp","dp[0][0]","dp[i","dp[i][j]","dp[s.length()][p.length()];","fals","ismatch(str","new","p","p)","p.charat(j","public","p，请你来实现一个支持","return","s","s,","solut","string","s的，而不是部分字符串。","true","true;","z","{","||","}","个,","为","代码（dp）","代表可以匹配零个或多个前面的那一个元素,","匹配任意单个字符","匹配零个或多个前面的那一个元素","可能为空，且只包含从","可被视为","和","和一个字符规律","因为","在这里前面的元素就是","字符串","所谓匹配，是要涵盖","整个","整个字符串。","无法匹配","正则表达式匹配","的小写字母。","的小写字母，以及字符","的正则表达式匹配。","示例","给你一个字符串","表示可匹配零个或多个（'*'）任意字符（'.'）。","表示零个或多个，这里","被重复一次。因此可以匹配字符串","解释:","说明:","输入:","输出:","重复了一次。"],"剑指offer/39. 数组中出现次数超过一半的数字.html":["(end","(int","(parindex","+","0,","0;","1","1);","1:","1;","2","2,","2]","3,","39.","4,","5,","=","==",">>","[1,","class","count","end)","end);","int","lastnum","majorityelement(int[]","majorityelement(nums,","mid)","new","nums)","nums,","nums.length","nums[parindex];","nums[start];","parindex","pivotindex","pivotindex,","public","random().nextint(end","return","solut","start","start)","start,","start;","swap(nums,","{","}","代码1","代码2","你可以假设数组是非空的，并且给定的数组总是存在多数元素。","数组中出现次数超过一半的数字","数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。","示例","输入:","输出:","限制："],"剑指offer/20.表示数值的字符串.html":["&&","'","')","'+'","'0'","0;","123\"、\"3.1416\"、\"0123\"及\"","16\"都表示数值，但\"12e\"、\"1a3.14\"、\"1.2.3\"、\"+","1e","20.表示数值的字符串","5\"及\"12e+5.4\"都不是。","65","=","==",">=","befor","before;","boolean","char[]","chuan","class","cn.com/problems/biao","cn.com/problems/valid","de","false;","fu","if(index","if(s[index]","index","index++;","index;","int","isnumber(str","lcof","number/","privat","public","return","s)","s){","s.length){","s.tochararray();","s[index]","sarr","scannum(char[]","scanunsignednum(s);","shi","shu","solut","while(index","zhi","zi","{","||","}","代码","来源：力扣（leetcode）","注意：本题与主站","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。例如，字符串\"+100\"、\"5e2\"、\"","链接：https://leetcod","题相同：https://leetcod"],"剑指offer/14. 剪梯子.html":["(int","+","14.","1;","1];","3;","=","class","cutrope(int","dp","dp[1]","dp[2]","int","int[]","int[target","new","public","solut","target)","{","代码","剪梯子","给你一根长度为n的绳子，请把绳子剪成整数长的m段（m、n都是整数，n>1并且m>1），每段绳子的长度记为k[0],k[1],...,k[m]。请问k[0]xk[1]x...xk[m]可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。","输入一个数n，意义见题面。（2","输入描述:"],"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":["(","(left","(nums[mid]",")。","+","0","0,","1","1,","1;","1：","2,","2]与[2,","2]，因此只能通过减少right来缩小区间进行进一步的搜索。该算法在最坏情况下的时间复杂度为o(n)。","2：",";","=","==",">",">>","[0,1,2,4,5,6,7]","[1,3,5]","[2,2,2,0,1]","[4,5,6,7,0,1,2]","class","findmin(int[]","ii","int","l154.","left","mid","mid;","nums)","nums.length","nums[left];","nums[right])","public","return","right","solut","{","}","代码","例如，数组","假设按照升序排序的数组在预先未知的某个点上进行了旋转。","允许重复会影响算法的时间复杂度吗？会如何影响，为什么？","可能变为","在153的基础上增加了重复元素的情况。这里需要额外处理中间元素与末尾元素相同的情况。这种情况下无法判断最小元素是在左区间还是右区间，例如：[2,","寻找旋转排序数组中的最小值","思路","注意数组中可能存在重复的元素。","的延伸题目。","示例","说明：","请找出其中最小的元素。","输入:","输出:","这道题是","题目描述"],"剑指offer/9. 用两个栈实现队列.html":["!=","&&","(!stack1.empty())","(!stack2.empty())","(que1.size()","(que2.size()","*","*/",",","/**","//","0","0)","0;","1","1)","11：旋转数组的最小数字","9.","=","==","back","back,","boolean","call","class","cn.com/problems/impl","data","deque（双端队列）来模拟一个栈，只要是标准的栈操作即可。","deque（双端队列）来模拟一个队列","element","element.","empti","empty()","empty.","fals","front","front,","here.","initi","instanti","int","l225.","l232.","linkedlist<>();","list","myqueu","myqueue()","myqueue();","mystack","mystack()","mystack();","new","obj","obj.empty();","obj.peek();","obj.pop();","obj.push(x);","obj.top();","object","onto","param_2","param_3","param_4","peek","peek()","peek();","peek/pop","pop","pop()","public","push","push(int","push(x)","que1","que1,","que1.add(que2.poll());","que1.add(ret);","que1.add(x);","que1.poll();","que1.size()","que2","que2.add(que1.poll());","que2.add(ret);","que2.add(x);","que2.poll();","que2.size()","que2;","queue","queue.","queue.empty();","queue.peek();","queue.pop();","queue.push(1);","queue.push(2);","remov","ret","ret;","return","size,","stack","stack.","stack1","stack1,","stack1.empty()","stack1.push(x);","stack2","stack2.empty();","stack2.peek();","stack2.pop();","stack2.push(stack1.pop());","stack2;","stack<>();","structur","such:","top","top()","top,","us","void","whether","x","x)","{","}","也就是","也就是只有","从队列首部移除元素。","代码","你只能使用标准的栈操作","你只能使用队列的基本操作","你可以使用","你可以假设所有操作都是有效的（例如,","你所使用的语言也许不支持栈。你可以使用","你所使用的语言也许不支持队列。","使用栈实现队列的下列操作：","使用队列实现栈的下列操作：","假设所有操作都是有效的","元素","入栈","只要是标准的队列操作即可。","和","对一个空的栈不会调用","将一个元素放入队列的尾部。","或者","操作是合法的。","操作）。","来源：力扣（leetcode）","注意:","用两个栈实现队列","用栈实现队列","用队列实现栈","示例:","移除栈顶元素","获取栈顶元素","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","说明:","返回","返回栈是否为空","返回队列是否为空。","返回队列首部的元素。","这些操作是合法的。","链接：https://leetcod","（例如，一个空的队列不会调用"],"剑指offer/44. 数字序列中某一位的数字.html":["0","11","1：","2：","3","44.","=","class","findnthdigit(int","if(n","int","n)","public","solut","{","代码","数字以0123456789101112131415…的格式序列化到一个字符序列中。在这个序列中，第5位（从下标0开始计数）是5，第13位是1，第19位是4，等等。","数字序列中某一位的数字","示例","请写一个函数，求任意第n位对应的数字。","输入：n","输出：0","输出：3","限制："],"剑指offer/40. 最小的k个数.html":["(int","(k","0","0)","0,","0;","1","1);","1,","1：","2","2：","40.","=","==","[0,1,2,1],","[2,1]","[3,2,1],","arr","arr,","arr.length","class","getleastnumbers(arr,","getleastnumbers(int[]","int","int[0];","int[]","int[k];","k","k)","new","public","ret","return","solut","{","个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。","代码","或者","最小的k个数","示例","输入整数数组","输入：arr","输出：[0]","输出：[1,2]","限制：","，找出其中最小的"],"剑指offer/3. 数组中的重复数字.html":["(int","(length","(output)","*duplic","//","0)","0;","1,so","1的范围内。","3.","=","==","?","[]","array","boolean","c/c++","c/c++,","class","duplic","duplicate(int","duplication)","duplication:","duplication[0]","equal","fals","false;","here","implementation;","index","input","integ","length","length,int","length:","number","number,length","numbers:","numbers[],int","otherwis","parameters:","pointor","public","return","solut","true","us","valid,","value:","{","代码","例如，如果输入长度为7的数组{2,3,1,0,2,5,3}，那么对应的输出是第一个重复的数字2。","在一个长度为n的数组里的所有数字都在0到n","数组中某些数字是重复的，但不知道有几个数字是重复的。也不知道每个数字重复几次。请找出数组中任意一个重复的数字。","数组中的重复数字","这里要特别注意~返回任意重复的一个，赋值duplication[0]"],"剑指offer/L287. 寻找重复数.html":["!=","(int","(left","(num","(re","(slow","+","0)","0,","0;","1","1:","1;","2","2:","3",":","=","==",">>","[1,3,4,2,2]","[3,1,3,4,2]","class","counter","fast","findduplicate(int[]","ii的解法：","int","l287.","left","left;","len","mid","mid)","mid;","n","num","nums)","nums.length;","nums[nums[fast]];","nums[res];","nums[slow];","nums，其数字都在","n），可知至少存在一个重复的整数。假设只有一个重复的整数，找出这个重复的数。","o(1)","o(n2)","public","re","res;","return","right","slow","slow)","solut","{","||","}","。","不能更改原数组（假设数组是只读的）。","个整数的数组","之间（包括","之间，每一次二分都可以将搜索区间缩小一半。","代码1","代码2","到","只能使用额外的","和","寻找重复数","将数组内的元素值看作是该节点指向的下个节点在数组中的索引值，这样就可以将数组转化为链表进行处理。由于元素值是从1开始，而索引值是从0开始，因此链表的长度为最大元素值加1，也就是说链表中一定存在两个节点有着相同的值，它们指向同一个节点，也即链表中有环的存在。因此本题可以转化为寻找链表中环入口的问题。具体可参考题目环形链表","思路1（二分法）","思路2（快慢指针）","数组中只有一个重复的数字，但它可能不止重复出现一次。","时间复杂度小于","的空间。","示例","给定一个包含","设置快慢指针从a1出发。假设slow和fast在a3相遇，根据以上公式（fast在与slow相遇前走过了k圈）。head从a1出发，slow从a3出发，经过a步以后，两点将在a2（环的入口）相遇。","说明：","输入:","输出:","这道题的关键是对要定位的“数”做二分，而不是对数组的索引做二分。要定位的“数”根据题意在","题目描述"],"剑指offer/32 - III. 从上到下打印二叉树 III.html":["!=","!st2.empty())","(!st1.empty()","(!st1.empty())","(!st2.empty())","(node.left","(node.right","(root","*","*/","/","/**","15","20","3","32","7","9","=","==","[","[15,7]","[20,9],","[3,9,20,null,null,15,7],","[3],","\\","]","arraylist<>();","binari","class","definit","iii","iii.","int","left;","levelorder(treenod","list","list.add(node.val);","list>","new","node","node.","null)","public","ret","ret.add(list);","ret;","return","right;","root)","solut","st1","st1.pop();","st1.push(node.left);","st1.push(node.right);","st1.push(root);","st2","st2.pop();","st2.push(node.left);","st2.push(node.right);","stack","stack<>();","tree","treenod","treenode(int","val","val;","x)","x;","{","||","}","从上到下打印二叉树","代码","例如:","提示：","给定二叉树:","节点总数","请实现一个函数按照之字形顺序打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右到左的顺序打印，第三行再按照从左到右的顺序打印，其他行以此类推。","返回其层次遍历结果："],"剑指offer/31. 栈的压入、弹出序列.html":["!=","(i","(pushed.length","0","0,","0;","1","1：","2","2,","2：","3,","31.","4,","5,","=",">","[1,2,3,4,5],","[4,3,5,1,2]","[4,5,3,2,1]","boolean","class","false;","int","int[]","j","new","pop","pop()","popped)","popped.length)","public","push(1),","push(2),","push(3),","push(4),","push(5),","pushed,","return","solut","st","stack","stack<>();","validatestacksequences(int[]","{","{1,2,3,4,5}","{4,3,5,1,2}","{4,5,3,2,1}","不能在","之前弹出。","代码","就不可能是该压栈序列的弹出序列。","提示：","是某栈的压栈序列，序列","是该压栈序列对应的一个弹出序列，但","栈的压入、弹出序列","示例","解释：1","解释：我们可以按以下顺序执行：","输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如，序列","输入：push","输出：fals","输出：true"],"剑指offer/15. 二进制中1的个数.html":["15.","二进制中1的个数"],"剑指offer/33. 二叉搜索树的后序遍历序列.html":["!=","&&","((pivotindex","(end","(postorder[i]","/","0,","1","1)","1);","1：","2","2：","3","33.","5","6","=","[1,3,2,6,5]","[1,6,3,2,5]","\\","boolean","class","end)","fals","false。假设输入的数组的任意两个数字都互不相同。","helper(int[]","helper(postorder,","i;","int","pivotindex","postorder)","postorder,","postorder.length","postorder[end])","public","return","solut","start,","true","true，否则返回","verifypostorder(int[]","{","}","二叉搜索树的后序遍历序列","代码","参考以下这颗二叉搜索树：","提示：","数组长度","示例","输入:","输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历结果。如果是则返回","输出:"],"剑指offer/41. 数据流中的中位数.html":["&","((curindex","(2","(maxheap.isempty()","(minheap.isempty()","*/","+","/","/**","0)","0;","1)","1：","2","2.5","295","2：","3","3)","41.","50000","=","==",">",">=","[\"medianfinder\",\"addnum\",\"addnum\",\"findmedian\",\"addnum\",\"findmedian\"]","[\"medianfinder\",\"addnum\",\"findmedian\",\"addnum\",\"findmedian\"]","[2,3,4]","[2,3]","[[],[1],[2],[],[3],[]]","[[],[2],[],[3],[]]","addnum(int","addnum、findmedia进行","class","cn.com/problems/find","cn.com/problems/shu","curindex","curindex;","data","de","doubl","findmedian()","here.","i1);","i2","i2)","initi","int","ju","lcof","liu","maxheap","maxheap,","maxheap.offer(num);","maxheap.peek())","median","medianfind","medianfinder()","minheap","minheap.offer(maxheap.poll());","minheap.offer(num);","minheap;","new","num","num)","priorityqueu","priorityqueue<>((i1,","priorityqueue<>();","public","shu","stream/","structur","void","wei","zhong","{","||","}","从数据流中添加一个整数到数据结构中。","代码","例如，","如何得到一个数据流中的中位数？如果从数据流中读出奇数个数值，那么中位数就是所有数值排序之后位于中间的数值。如果从数据流中读出偶数个数值，那么中位数就是所有数值排序之后中间两个数的平均值。","数据流中的中位数","最多会对","来源：力扣（leetcode）","次调用。","注意：本题与主站","的中位数是","示例","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","设计一个支持以下两种操作的数据结构：","输入：","输出：[null,null,2.00000,null,2.50000]","输出：[null,null,null,1.50000,null,2.00000]","返回目前所有元素的中位数。","链接：https://leetcod","限制：","题相同：https://leetcod"],"剑指offer/8.二叉树的下一个节点.html":["!=","(node.left","(par","(par.left","(pnode","(pnode.right","*/","/*","8.二叉树的下一个节点","=","==","class","getnext(treelinknod","int","left","next","node","node.left;","node;","null)","null;","par","par.next;","par;","pnode","pnode)","pnode.next;","pnode.right;","public","return","right","solut","this.val","treelinknod","treelinknode(int","val)","val;","{","}","代码","给定一个二叉树和其中的一个结点，请找出中序遍历顺序的下一个结点并且返回。注意，树中的结点不仅包含左右子结点，同时包含指向父结点的指针。"]},"length":124},"tokenStore":{"root":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"1":{"0":{"1":{"1":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}},"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}},"1":{"1":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}},"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}},"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.02}}},"1":{"0":{"0":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.04}}},"1":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}},"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}},"1":{"1":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}},"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}},"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.02}}},"2":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.018867924528301886}}},"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.023809523809523808},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.019736842105263157},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.011235955056179775},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01639344262295082},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.011904761904761904},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.01652892561983471},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.014925373134328358},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.06},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.043478260869565216},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01639344262295082},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}},")":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.01020408163265306},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.020202020202020204},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.024},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.016},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.014925373134328358},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.027777777777777776},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.011904761904761904},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.015503875968992248},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.00980392156862745},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},";":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}},",":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.03296703296703297},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.023809523809523808},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.016666666666666666},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.02531645569620253},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.015957446808510637},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.01652892561983471},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.04},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.05454545454545454},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.028985507246376812},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.038461538461538464},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.020833333333333332},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.03296703296703297},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}},";":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.019736842105263157},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.012121212121212121},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.024390243902439025},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.02857142857142857},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.021739130434782608},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.025},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.01020408163265306},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.025454545454545455},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.020134228187919462},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.02531645569620253},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.04854368932038835},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.015957446808510637},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.032},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.013513513513513514},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.03636363636363636},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.015544041450777202},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.045454545454545456},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.044642857142857144},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.030303030303030304},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.02976190476190476},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.03636363636363636},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.027777777777777776},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.02},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.008658008658008658},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.010050251256281407},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.048},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.02},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.021739130434782608},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.022222222222222223},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.019736842105263157},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}},"。":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.009216589861751152},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}},"可":{"docs":{},"以":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"将":{"docs":{},"计":{"docs":{},"算":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"和":{"docs":{},"改":{"docs":{},"成":{"docs":{},"计":{"docs":{},"算":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"和":{"docs":{},"余":{"docs":{},"k":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"i":{"docs":{},"的":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"和":{"docs":{},"余":{"docs":{},"k":{"docs":{},"等":{"docs":{},"于":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"j":{"docs":{},"的":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"和":{"docs":{},"余":{"docs":{},"k":{"docs":{},"（":{"docs":{},"i":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"0":{"docs":{},";":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}},"2":{"5":{"0":{"0":{"0":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{}},"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}},"）":{"docs":{},"，":{"docs":{},"要":{"docs":{},"么":{"docs":{},"包":{"docs":{},"含":{"docs":{},"增":{"docs":{},"加":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"健":{"docs":{},"康":{"docs":{},"点":{"docs":{},"数":{"docs":{},"的":{"docs":{},"魔":{"docs":{},"法":{"docs":{},"球":{"docs":{},"（":{"docs":{},"若":{"docs":{},"房":{"docs":{},"间":{"docs":{},"里":{"docs":{},"的":{"docs":{},"值":{"docs":{},"为":{"docs":{},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"表":{"docs":{},"示":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"将":{"docs":{},"增":{"docs":{},"加":{"docs":{},"健":{"docs":{},"康":{"docs":{},"点":{"docs":{},"数":{"docs":{},"）":{"docs":{},"。":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"买":{"docs":{},"入":{"docs":{},"，":{"docs":{},"在":{"docs":{},"第":{"docs":{"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}}}}}}}}},"}":{"docs":{},";":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}},"x":{"0":{"0":{"0":{"0":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},")":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}},";":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}},"docs":{}},"docs":{},"f":{"docs":{},"f":{"0":{"0":{"docs":{},"f":{"docs":{},"f":{"docs":{},")":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}},";":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}},"docs":{}},"docs":{}}}},"docs":{},"f":{"0":{"docs":{},"f":{"0":{"docs":{},"f":{"0":{"docs":{},"f":{"docs":{},")":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}},";":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"3":{"3":{"3":{"3":{"3":{"3":{"3":{"3":{"docs":{},")":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}},";":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"5":{"5":{"5":{"5":{"5":{"5":{"5":{"docs":{},")":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}},";":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"为":{"docs":{},"：":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"docs":{},"，":{"docs":{},"也":{"docs":{},"即":{"0":{"1":{"docs":{},"互":{"docs":{},"相":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"。":{"docs":{},"n":{"docs":{},"和":{"0":{"docs":{},"x":{"5":{"5":{"5":{"5":{"5":{"5":{"5":{"5":{"docs":{},"的":{"docs":{},"与":{"docs":{},"结":{"docs":{},"果":{"docs":{},"加":{"docs":{},"上":{"docs":{},"n":{"docs":{},"右":{"docs":{},"移":{"docs":{},"一":{"docs":{},"位":{"docs":{},"后":{"docs":{},"和":{"0":{"docs":{},"x":{"5":{"5":{"5":{"5":{"5":{"5":{"5":{"5":{"docs":{},"的":{"docs":{},"与":{"docs":{},"结":{"docs":{},"果":{"docs":{},"正":{"docs":{},"是":{"docs":{},"n":{"docs":{},"中":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"两":{"docs":{},"位":{"docs":{},"的":{"docs":{},"和":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"1":{"0":{"0":{"0":{"0":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}},"docs":{},",":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}},"]":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}},"。":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}},"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.023255813953488372}},"。":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}}},".":{"0":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{}}},"2":{"4":{"docs":{},".":{"0":{"0":{"0":{"0":{"0":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"6":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}},".":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}},"docs":{}},"9":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":5.006369426751593}}}},"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.016853932584269662},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.011904761904761904},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.02},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.02564102564102564}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":5.005464480874317}}},",":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}}},"^":{"9":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}},"docs":{}},")":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.022388059701492536}},";":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}}}},";":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.018867924528301886},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.023255813953488372}}}},"1":{"0":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":5.007936507936508}}}},"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"0":{"1":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}},"3":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":3.341333333333333}}}},"4":{"3":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":5.0046082949308754}}}},"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":5.009433962264151}}}},"5":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":5.006451612903226}}}},"7":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":3.3394308943089426}}}},"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.02},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571}},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.011904761904761904}}},"（":{"docs":{},"即":{"docs":{},"，":{"2":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}},"docs":{}}}},"）":{"docs":{},"。":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}},"：":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"数":{"docs":{},"字":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}}}},"2":{"0":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":5.015151515151516}}},",":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}}}},"1":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":5.011363636363637}}}},"2":{"5":{"8":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}},"有":{"5":{"docs":{},"种":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"c":{"docs":{},"c":{"docs":{},"f":{"docs":{},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}},"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":3.3400900900900896}}},"，":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005}}}},"3":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":3.3415977961432506}}},"。":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}},"题":{"docs":{},"的":{"docs":{},"泛":{"docs":{},"化":{"docs":{},"。":{"docs":{},"定":{"docs":{},"义":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"d":{"docs":{},"p":{"docs":{},"，":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"在":{"docs":{},"最":{"docs":{},"多":{"docs":{},"可":{"docs":{},"以":{"docs":{},"完":{"docs":{},"成":{"docs":{},"k":{"docs":{},"笔":{"docs":{},"交":{"docs":{},"易":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"处":{"docs":{},"于":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{},"所":{"docs":{},"能":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{},"；":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"在":{"docs":{},"最":{"docs":{},"多":{"docs":{},"可":{"docs":{},"以":{"docs":{},"完":{"docs":{},"成":{"docs":{},"k":{"docs":{},"笔":{"docs":{},"交":{"docs":{},"易":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"处":{"docs":{},"于":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{},"所":{"docs":{},"能":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{},"。":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"对":{"docs":{},"于":{"docs":{},"任":{"docs":{},"意":{"docs":{},"k":{"docs":{},"，":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"都":{"docs":{},"等":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"而":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"都":{"docs":{},"等":{"docs":{},"于":{"docs":{},"负":{"docs":{},"无":{"docs":{},"穷":{"docs":{},"，":{"docs":{},"代":{"docs":{},"表":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"处":{"docs":{},"于":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"关":{"docs":{},"系":{"docs":{},"参":{"docs":{},"考":{"docs":{},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"\"":{"docs":{},"、":{"docs":{},"\"":{"3":{"docs":{},".":{"1":{"4":{"1":{"6":{"docs":{},"\"":{"docs":{},"、":{"docs":{},"\"":{"0":{"1":{"2":{"3":{"docs":{},"\"":{"docs":{},"及":{"docs":{},"\"":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}},"7":{"5":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":5.005025125628141}}}},"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":5.003636363636364}}}},"9":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":5.00561797752809}}}},"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.018867924528301886},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.02564102564102564}},".":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}},"3":{"0":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":5.008}}}},"1":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":5.0120481927710845}}}},"2":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":3.351515151515151}}}},"6":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":5.010869565217392}}}},"7":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":3.341333333333333}}}},"8":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":5.003663003663004}}}},"9":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":5.009345794392523}}}},"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}},".":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}},"4":{"0":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":3.3388278388278385}}}},"2":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":3.3399122807017543}}}},"3":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":5.0054945054945055}}}},"4":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":5.007142857142857}}}},"5":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":5.002739726027397}}}},"6":{"docs":{},",":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}},"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":5.033333333333333}}},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}},"5":{"2":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":5.017543859649122}}}},"3":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":5.014925373134329}}}},"4":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":3.344322344322344}}}},"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}},".":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":5.011904761904762},"剑指offer/15. 二进制中1的个数.html":{"ref":"剑指offer/15. 二进制中1的个数.html","tf":5.5}}},"]":{"docs":{},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}},"6":{"6":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":5.007462686567164}}}},"docs":{},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.011904761904761904}}},")":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}},".":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"\"":{"docs":{},"都":{"docs":{},"表":{"docs":{},"示":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"但":{"docs":{},"\"":{"1":{"2":{"docs":{},"e":{"docs":{},"\"":{"docs":{},"、":{"docs":{},"\"":{"1":{"docs":{},"a":{"3":{"docs":{},".":{"1":{"4":{"docs":{},"\"":{"docs":{},"、":{"docs":{},"\"":{"1":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},"\"":{"docs":{},"、":{"docs":{},"\"":{"docs":{},"+":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}}}}},"7":{"2":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":5.011904761904762}}}},"3":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":5.006802721088436}}}},"4":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":5.005952380952381}}}},"docs":{},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}},"8":{"7":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":5.01}}}},"8":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":3.3406326034063256}}}},"docs":{},".":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}},"9":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":5.005464480874317}}},"]":{"docs":{},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}},"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.02631578947368421},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.012121212121212121},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.04},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.019736842105263157},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.014925373134328358},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.022222222222222223},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.03333333333333333},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.02197802197802198},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.02531645569620253},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.03636363636363636},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.023809523809523808},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.018867924528301886},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.021739130434782608},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.06896551724137931},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.028089887640449437},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.016},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.009216589861751152},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.02702702702702703},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.03636363636363636},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.022727272727272728},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.017857142857142856},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.03305785123966942},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.027586206896551724},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.019230769230769232},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.023809523809523808},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.05714285714285714},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.02666666666666667},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.015748031496062992},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.010752688172043012},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.015503875968992248},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.014388489208633094},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.02631578947368421},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}},"～":{"docs":{},"n":{"docs":{},"整":{"docs":{},"数":{"docs":{},"中":{"1":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":5.007751937984496}}}}}}}},"docs":{}}}}}},":":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}},";":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.02631578947368421},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.03296703296703297},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.024193548387096774},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.024390243902439025},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.04477611940298507},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.016666666666666666},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.01020408163265306},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.014925373134328358},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.011320754716981131},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.023809523809523808},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.014492753623188406},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.016},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.02197802197802198},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.018691588785046728},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.02666666666666667},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.01935483870967742},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.03636363636363636},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.058823529411764705},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.008658008658008658},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.05555555555555555},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.01984126984126984},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.015503875968992248},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.04477611940298507},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.03076923076923077},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.020833333333333332},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.03296703296703297},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.02631578947368421}},"i":{"docs":{},">":{"docs":{},"=":{"docs":{},"r":{"docs":{},"l":{"docs":{},"+":{"1":{"docs":{},";":{"docs":{},"i":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}},"docs":{}}}}}}}},",":{"1":{"docs":{},"]":{"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02}}}},"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.02197802197802198},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.07142857142857142},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.016},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.011904761904761904},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.030303030303030304},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.02197802197802198},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}},"s":{"docs":{},"o":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}},"：":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}},")":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.02185792349726776},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.032},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.023255813953488372},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.02185792349726776},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.00980392156862745},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},")":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}},";":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.01818181818181818},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"。":{"docs":{},"在":{"docs":{},"本":{"docs":{},"题":{"docs":{},"中":{"docs":{},"采":{"docs":{},"用":{"docs":{},"自":{"docs":{},"底":{"docs":{},"向":{"docs":{},"上":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"数":{"docs":{},"组":{"docs":{},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"无":{"docs":{},"需":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.017857142857142856},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.016},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.022222222222222223},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.020833333333333332},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"直":{"docs":{},"接":{"docs":{},"求":{"docs":{},"阶":{"docs":{},"乘":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"将":{"docs":{},"其":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"公":{"docs":{},"式":{"docs":{},"。":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}}}}}}}}}}}}}},",":{"docs":{"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}}}},"、":{"2":{"docs":{},"、":{"3":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{}}},"docs":{},"使":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"数":{"docs":{},"组":{"docs":{},"初":{"docs":{},"始":{"docs":{},"为":{"docs":{},"空":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}}}}},"在":{"docs":{},"区":{"docs":{},"间":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"随":{"docs":{},"机":{"docs":{},"选":{"docs":{},"择":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"，":{"docs":{},"并":{"docs":{},"与":{"docs":{},"区":{"docs":{},"间":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"行":{"docs":{},"交":{"docs":{},"换":{"docs":{},"（":{"docs":{},"这":{"docs":{},"里":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"选":{"docs":{},"择":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"可":{"docs":{},"以":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"避":{"docs":{},"免":{"docs":{},"算":{"docs":{},"法":{"docs":{},"退":{"docs":{},"化":{"docs":{},"到":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"2":{"docs":{},")":{"docs":{},"。":{"docs":{},"至":{"docs":{},"于":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"选":{"docs":{},"择":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"里":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"从":{"docs":{},"前":{"docs":{},"往":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"，":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"若":{"docs":{},"选":{"docs":{},"择":{"docs":{},"从":{"docs":{},"后":{"docs":{},"往":{"docs":{},"前":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"选":{"docs":{},"择":{"docs":{},"区":{"docs":{},"间":{"docs":{},"首":{"docs":{},"部":{"docs":{},"元":{"docs":{},"素":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"交":{"docs":{},"换":{"docs":{},"了":{"docs":{},"）":{"docs":{},"。":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"皆":{"docs":{},"无":{"docs":{},"环":{"docs":{},"：":{"docs":{},"判":{"docs":{},"断":{"docs":{},"两":{"docs":{},"个":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"结":{"docs":{},"点":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.018433179723502304},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.03508771929824561},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.017857142857142856}},"小":{"docs":{},"k":{"docs":{},"（":{"docs":{},"i":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}}}},"比":{"docs":{},"前":{"docs":{},"j":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"和":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"[":{"docs":{},"j":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}}}}}}}}}}}},",":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}},")":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}},";":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}},";":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.01020408163265306},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.013824884792626729},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01092896174863388},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.01935483870967742},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01092896174863388},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333}}},"[":{"2":{"docs":{},"]":{"docs":{},";":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005}}}}},"docs":{},"p":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}}}},"j":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.018433179723502304},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}},"]":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.011904761904761904}},";":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}},")":{"docs":{},";":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}},"+":{"1":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}},"docs":{}}},"s":{"2":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105}}}}}}}}}}}},"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"2":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.009216589861751152}}},"docs":{}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"2":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}}}}}}}}},"docs":{}}}}},"n":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.011904761904761904}}},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}}}}}}}}}}},"+":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}},"docs":{}}},"e":{"7":{"docs":{},",":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}},"]":{"docs":{},"。":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}}},"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}},"，":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}},"它":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"随":{"docs":{},"机":{"docs":{},"指":{"docs":{},"针":{"docs":{},"都":{"docs":{},"指":{"docs":{},"向":{"docs":{},"节":{"docs":{},"点":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}}}}}}}}}}}}}}}}},"则":{"docs":{},"在":{"docs":{},"该":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"环":{"docs":{},"。":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}}}}}}}},"构":{"docs":{},"成":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}}}}}}}}}},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"无":{"docs":{},"限":{"docs":{},"循":{"docs":{},"环":{"docs":{},"但":{"docs":{},"始":{"docs":{},"终":{"docs":{},"变":{"docs":{},"不":{"docs":{},"到":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}}}}}}}}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"快":{"docs":{},"乐":{"docs":{},"数":{"docs":{},"。":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}}}}}}}}}}}}}},"。":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}},"如":{"docs":{},"果":{"docs":{},"可":{"docs":{},"以":{"docs":{},"变":{"docs":{},"为":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}}}}}}}}},"→":{"docs":{},"l":{"2":{"docs":{},"→":{"docs":{},"l":{"docs":{},"n":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}}}}},"docs":{},"n":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}}}},"个":{"docs":{},"中":{"docs":{},"心":{"docs":{},"。":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"和":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"分":{"docs":{},"别":{"docs":{},"代":{"docs":{},"表":{"docs":{},"当":{"docs":{},"前":{"docs":{},"中":{"docs":{},"心":{"docs":{},"的":{"docs":{},"左":{"docs":{},"右":{"docs":{},"边":{"docs":{},"界":{"docs":{},"（":{"docs":{},"边":{"docs":{},"界":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"在":{"docs":{},"回":{"docs":{},"文":{"docs":{},"串":{"docs":{},"内":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"最":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"回":{"docs":{},"文":{"docs":{},"串":{"docs":{},"长":{"docs":{},"度":{"docs":{},"时":{"docs":{},"是":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"）":{"docs":{},"。":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"买":{"docs":{},"入":{"docs":{},"，":{"docs":{},"在":{"docs":{},"第":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.013513513513513514},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.01652892561983471}}}}}}}}}}},"/":{"2":{"2":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{}},"4":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{}},"d":{"docs":{},"a":{"docs":{},"o":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}},".":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"。":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}}}},"2":{"0":{"0":{"0":{"0":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}},"docs":{}},"docs":{}},"1":{"0":{"0":{"docs":{},"。":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}},"docs":{}},"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":5.029411764705882}}}},"2":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":5.009433962264151}}}},"6":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":5.007518796992481}}}},"9":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":5.008333333333334}}}},"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}},".":{"docs":{},"表":{"docs":{},"示":{"docs":{},"数":{"docs":{},"值":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":10.012345679012345}}}}}}}}}}},",":{"0":{"0":{"0":{"docs":{},"]":{"docs":{},"。":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}}},"docs":{}},"docs":{}},"docs":{}},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}},"]":{"docs":{},",":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936}}}}},"1":{"4":{"7":{"4":{"8":{"3":{"6":{"4":{"8":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":5.009803921568627}}}},"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}},"2":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":5.008928571428571}}},"，":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}},"]":{"docs":{},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}},"3":{"0":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":5.006329113924051}}}},"6":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":5.005813953488372}}}},"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":5.008928571428571}}},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}},"4":{"0":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":3.343434343434343}}}},"docs":{},".":{"docs":{},"反":{"docs":{},"转":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":10.006802721088436}}}}}}},"]":{"docs":{},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}},"5":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":3.3430420711974107},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}},"6":{"0":{"docs":{},".":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}},"4":{"docs":{"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":3.351515151515151}}}},"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":5.0071942446043165}}},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}},")":{"docs":{},",":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}}}},"7":{"3":{"docs":{},",":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}},"docs":{}},"8":{"7":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":5.006578947368421}}}},"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":3.3430420711974107},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":5.0078740157480315}}}},"9":{"2":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":3.3619047619047615}}},",":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}},"5":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}},"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":5.015384615384615}}}},"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.016129032258064516},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.02857142857142857},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.019417475728155338},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.030303030303030304},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.015873015873015872},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.018867924528301886},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.021739130434782608},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.05747126436781609},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.058394160583941604},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.013513513513513514},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.04},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.03333333333333333},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.028985507246376812},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.043478260869565216},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.031496062992125984},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.008064516129032258},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},":":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}},",":{"0":{"docs":{},",":{"docs":{"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806}}}},"4":{"docs":{},"]":{"docs":{"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806}}}},"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.06593406593406594},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.03508771929824561},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.014925373134328358},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.041666666666666664},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.06593406593406594},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}},"]":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666}},"与":{"docs":{},"[":{"2":{"docs":{},",":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}},"docs":{}}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"只":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"减":{"docs":{},"少":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"来":{"docs":{},"缩":{"docs":{},"小":{"docs":{},"区":{"docs":{},"间":{"docs":{},"进":{"docs":{},"行":{"docs":{},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"的":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"。":{"docs":{},"该":{"docs":{},"算":{"docs":{},"法":{"docs":{},"在":{"docs":{},"最":{"docs":{},"坏":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}},"、":{"3":{"docs":{"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}}},"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}},"设":{"docs":{},"置":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"索":{"docs":{},"引":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"指":{"docs":{},"向":{"docs":{},"区":{"docs":{},"间":{"docs":{},"首":{"docs":{},"部":{"docs":{},"。":{"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"区":{"docs":{},"间":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"如":{"docs":{},"果":{"docs":{},"发":{"docs":{},"现":{"docs":{},"当":{"docs":{},"前":{"docs":{},"索":{"docs":{},"引":{"docs":{},"位":{"docs":{},"元":{"docs":{},"素":{"docs":{},"小":{"docs":{},"于":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"，":{"docs":{},"就":{"docs":{},"将":{"docs":{},"其":{"docs":{},"与":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"索":{"docs":{},"引":{"docs":{},"上":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"行":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"增":{"1":{"docs":{},"。":{"docs":{},"（":{"docs":{},"将":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"放":{"docs":{},"在":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"可":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"出":{"docs":{},"界":{"docs":{},"）":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"皆":{"docs":{},"有":{"docs":{},"环":{"docs":{},"：":{"docs":{},"找":{"docs":{},"到":{"docs":{},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"环":{"docs":{},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"这":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"是":{"docs":{},"否":{"docs":{},"在":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"。":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"破":{"docs":{},"坏":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"形":{"docs":{},"状":{"docs":{"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}}}}}}}}}},".":{"0":{"0":{"0":{"0":{"0":{"docs":{},",":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}},";":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}},"1":{"0":{"0":{"0":{"0":{"docs":{},",":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}},"8":{"2":{"8":{"4":{"2":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},",":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}},";":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.023809523809523808}}},"，":{"docs":{},"总":{"docs":{},"和":{"docs":{},"为":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}}},"它":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}}}}}}}}},"说":{"docs":{},"明":{"docs":{},"a":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"两":{"docs":{},"位":{"docs":{},"（":{"docs":{},"后":{"docs":{},"缀":{"docs":{},"）":{"docs":{},"与":{"docs":{},"模":{"docs":{},"式":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"前":{"docs":{},"两":{"docs":{},"位":{"docs":{},"（":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"）":{"docs":{},"是":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"后":{"docs":{},"缀":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"来":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{},"（":{"docs":{},"j":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.011320754716981131},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.022988505747126436},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01092896174863388},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.021897810218978103},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.025},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01092896174863388}},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0072992700729927005},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}},"。":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}}},"，":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}}},"/":{"2":{"docs":{},">":{"0":{"docs":{},"，":{"docs":{},"也":{"docs":{},"即":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"2":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}},"docs":{}}}}}}}},"docs":{}}},"docs":{}},"个":{"docs":{},"子":{"docs":{},"串":{"docs":{},"t":{"docs":{},"构":{"docs":{},"成":{"docs":{},"。":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}}}}}}}}},"→":{"docs":{},"…":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}}},"n":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}},")":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}}},"。":{"docs":{},"当":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}},"d":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936}}},"。":{"docs":{},"那":{"docs":{},"么":{"2":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}},"docs":{}}},"若":{"docs":{},"百":{"docs":{},"位":{"docs":{},"上":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"百":{"docs":{},"位":{"docs":{},"上":{"docs":{},"出":{"docs":{},"现":{"1":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"共":{"docs":{},"有":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}},"就":{"docs":{},"是":{"docs":{},"由":{"docs":{},"(":{"2":{"docs":{},"n":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}}},"docs":{}}}}},"至":{"docs":{},"少":{"docs":{},"会":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"s":{"docs":{},"。":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}}}}}}}}}}}}},"）":{"docs":{},"或":{"docs":{},"者":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}}}}},"3":{"0":{"0":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":5.006060606060606}}}},"7":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":3.3371069182389936}}}},"9":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":5.02}}}},"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":5.012195121951219}}},"]":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}},",":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936}}}},"1":{"3":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":5.013888888888889}}}},"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":5.012195121951219}}}},"2":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":2.507575757575758},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":2.5071942446043165}}},"3":{"7":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":3.3402298850574708}}}},"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":5.015873015873016}}}},"4":{"7":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":2.5096153846153846}}}},"docs":{},",":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936}}}},"5":{"4":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":5.012195121951219}}}},"5":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":5.0036496350364965}}}},"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":5.006666666666667}}}},"6":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":5.005050505050505}}}},"7":{"3":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":5.005681818181818}}}},"docs":{}},"9":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":5.010416666666667}}}},"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.019417475728155338},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.02531645569620253},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.03636363636363636},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.023809523809523808},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.018867924528301886},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.021739130434782608},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.06896551724137931},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.016},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.021897810218978103},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.02027027027027027},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.011904761904761904},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.024793388429752067},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.04827586206896552},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.017045454545454544},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.05714285714285714},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.02666666666666667},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.01507537688442211},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.03260869565217391},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.031496062992125984},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.008064516129032258},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.022222222222222223},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},".":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":5.008},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":5.012820512820513}}},"、":{"docs":{},"在":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}},"最":{"docs":{},"后":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"放":{"docs":{},"在":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"索":{"docs":{},"引":{"docs":{},"上":{"docs":{},"。":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"有":{"docs":{},"环":{"docs":{},"：":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}},",":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}},")":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},"/":{"2":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}},"docs":{}},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}},"]":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}},":":{"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}},"：":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}},"。":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.009216589861751152},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.016},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.022222222222222223}}},"）":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"买":{"docs":{},"入":{"docs":{},"，":{"docs":{},"在":{"docs":{},"第":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}}}}}}},"卖":{"docs":{},"出":{"docs":{},"，":{"docs":{},"这":{"docs":{},"笔":{"docs":{},"交":{"docs":{},"易":{"docs":{},"所":{"docs":{},"能":{"docs":{},"获":{"docs":{},"得":{"docs":{},"利":{"docs":{},"润":{"docs":{"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}},"!":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}}},"，":{"docs":{},"则":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}},";":{"docs":{"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333}}}},"4":{"0":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":5.016666666666667}}}},"1":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":5.02},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":5.008196721311475}}}},"2":{"6":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}},"docs":{},"。":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}},"3":{"0":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":5.0060975609756095}}}},"8":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":5.006711409395973}}}},"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":5.007751937984496}}}},"4":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":5.005952380952381},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":5.035714285714286}}}},"5":{"9":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":5.015151515151516}}}},"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":5.019607843137255}}}},"6":{"0":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":5.003731343283582}}}},"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":5.013888888888889}}}},"8":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":5.011111111111111}}}},"9":{"1":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}},".":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}},"5":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}},".":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}},"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":5.012820512820513}}}},"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.0196078431372549},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.015873015873015872},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.018867924528301886},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.016},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.02247191011235955},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.014598540145985401},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.02702702702702703},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.03305785123966942},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.013793103448275862},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.05714285714285714},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.028985507246376812},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.008658008658008658},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.05434782608695652},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.015748031496062992},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.014388489208633094},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":5.005102040816326}},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":10.003968253968255}}}}}}}}}}},"、":{"docs":{},"最":{"docs":{},"后":{"docs":{},"构":{"docs":{},"造":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}},"。":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}},"]":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}},"，":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}},",":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}},")":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}},":":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}},"）":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"，":{"docs":{},"这":{"docs":{},"笔":{"docs":{},"交":{"docs":{},"易":{"docs":{},"所":{"docs":{},"能":{"docs":{},"获":{"docs":{},"得":{"docs":{},"利":{"docs":{},"润":{"docs":{"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}},"：":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}},"5":{"0":{"0":{"0":{"0":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}},"docs":{}},"docs":{}},"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}},"]":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936}}}},"1":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":5.004329004329004}}}},"2":{"2":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":3.3405797101449273}}}},"3":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":5.010869565217392}}},"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":3.3478260869565215}}}},"6":{"0":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":5.014285714285714}}}},"docs":{},",":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}},"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.018867924528301886},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.016},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.022988505747126436},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.01744186046511628},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.02702702702702703},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.03409090909090909},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.011904761904761904},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.01652892561983471},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.013793103448275862},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":5.00531914893617}}},",":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.011904761904761904},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}},"]":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}},",":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}},".":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},"。":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}},"因":{"docs":{},"为":{"docs":{},"根":{"docs":{},"据":{"docs":{},"定":{"docs":{},"义":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"节":{"docs":{},"点":{"docs":{},"可":{"docs":{},"以":{"docs":{},"为":{"docs":{},"节":{"docs":{},"点":{"docs":{},"本":{"docs":{},"身":{"docs":{},"。":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}},":":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}},"）":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"卖":{"docs":{},"出":{"docs":{},",":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.013513513513513514},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}}}}}}},")":{"docs":{},".":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},"!":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}}},";":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.023809523809523808}}},"\"":{"docs":{},"及":{"docs":{},"\"":{"1":{"2":{"docs":{},"e":{"docs":{},"+":{"5":{"docs":{},".":{"4":{"docs":{},"\"":{"docs":{},"都":{"docs":{},"不":{"docs":{},"是":{"docs":{},"。":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}}}}},"docs":{}}},"docs":{}}}},"docs":{}},"docs":{}}}}},"6":{"0":{"0":{"0":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}},"docs":{}},"docs":{}},"2":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}}},"5":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}},"7":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}},"8":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}}},"9":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":5.008064516129032}}}},"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.021739130434782608},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.018867924528301886},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.014598540145985401},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.01652892561983471},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}},"。":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806}}},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}}},"]":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}},")":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}},",":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}},".":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},"）":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"卖":{"docs":{},"出":{"docs":{},",":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}}},"，":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364}}}}}}}}}}}}}},"7":{"1":{"4":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":5.0125}}}},"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}},"2":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":5.009090909090909}}}},"3":{"docs":{},",":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}},"6":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":5.012658227848101}}}},"9":{"6":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":5.016949152542373}}}},"docs":{}},"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}},",":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}},"。":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}},".":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}},";":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}},"]":{"docs":{},",":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936}}}}},"8":{"2":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.02830188679245283}}},"4":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}},"}":{"docs":{},";":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}},"5":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":5.008928571428571}}}},"6":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":5.011111111111111}}}},"7":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":5.005181347150259}}}},"9":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":5.006666666666667}}}},"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.016129032258064516},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.025},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}},".":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":10.011627906976743}}}}}}}}}}}},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}}},")":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}},"9":{"1":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":5.013333333333334}}}},"2":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":3.344444444444444}}}},"4":{"0":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":3.3429487179487176}}}},"docs":{}},"5":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":3.339393939393939}}}},"6":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":5.011494252873563}}}},"7":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":5.0131578947368425}}}},"9":{"9":{"docs":{},"。":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}},"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":5.005434782608695}}}},"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.011235955056179775},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}},".":{"2":{"6":{"1":{"0":{"0":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":5.002450980392157}}},",":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}}},"]":{"docs":{},",":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}}}}},"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}}}}}}},"r":{"docs":{},"r":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}},"a":{"docs":{},"y":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.0641025641025641}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.016},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.016},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.013333333333333334},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.022727272727272728},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.02158273381294964}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}}}}}}}}}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"d":{"docs":{},"p":{"docs":{},",":{"docs":{"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}}}}}}}}}}},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"x":{"docs":{},"u":{"docs":{},"n":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}}}}},")":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{},",":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}}}}}}}}},",":{"docs":{"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}}}},"e":{"docs":{},"a":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}},")":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}},"/":{"docs":{},"(":{"2":{"docs":{},"x":{"docs":{},")":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"(":{"docs":{},"x":{"docs":{},"+":{"docs":{},"a":{"docs":{},"/":{"docs":{},"x":{"docs":{},")":{"docs":{},"/":{"2":{"docs":{},"。":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}}}}}}}}}}}}}}}},"=":{"0":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"正":{"docs":{},"实":{"docs":{},"根":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"导":{"docs":{},"数":{"docs":{},"是":{"2":{"docs":{},"x":{"docs":{},"。":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"函":{"docs":{},"数":{"docs":{},"上":{"docs":{},"任":{"docs":{},"一":{"docs":{},"点":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{},"f":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},")":{"docs":{},"处":{"docs":{},"的":{"docs":{},"切":{"docs":{},"线":{"docs":{},"斜":{"docs":{},"率":{"docs":{},"是":{"2":{"docs":{},"x":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"x":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"根":{"docs":{},"。":{"docs":{},"根":{"docs":{},"号":{"docs":{},"a":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"就":{"docs":{},"是":{"docs":{},"x":{"docs":{},"^":{"2":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}},"docs":{}}}}}}}}}}}}}}},"docs":{}},"得":{"docs":{},"到":{"docs":{},"x":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}}},"[":{"0":{"docs":{},"]":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}},"1":{"docs":{},"]":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}},"docs":{},"i":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.01020408163265306}},"]":{"docs":{},")":{"docs":{},";":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}},"{":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}},";":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}}},"，":{"docs":{},"b":{"docs":{},"，":{"docs":{},"c":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}}}},"c":{"docs":{},"，":{"docs":{},"g":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}}}}},",":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.014388489208633094}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}}}}},"s":{"1":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}},";":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}},"2":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}},";":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}},"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}},"=":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}}},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"l":{"docs":{},"]":{"docs":{},";":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}}}}}},"r":{"docs":{},"h":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},";":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},",":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},",":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}},")":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}},";":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.01639344262295082}}}}}},"、":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"进":{"docs":{},"行":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}},"e":{"docs":{},"\"":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}},",":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099}}},"。":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}}}}}},":":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}},"中":{"docs":{},"有":{"docs":{},"出":{"docs":{},"现":{"docs":{},"和":{"docs":{},"b":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"和":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"。":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}},"c":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.021739130434782608}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.013157894736842105}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}}}}}},"g":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666}},"e":{"docs":{},"r":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}},";":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}},"l":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},",":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.016}}}},"p":{"docs":{},"y":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},":":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.011904761904761904},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.023809523809523808}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549}}}}}}}}},"o":{"docs":{},"s":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}}},"d":{"docs":{},"e":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}},"\"":{"docs":{},"。":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.013157894736842105},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.01818181818181818},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.016129032258064516},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.016666666666666666},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.014652014652014652},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.013157894736842105},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.022222222222222223},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.01910828025477707},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.03007518796992481},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.019417475728155338},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.022222222222222223},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.017857142857142856},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.01643835616438356},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.012121212121212121},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.015873015873015872},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.018867924528301886},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.021739130434782608},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.011235955056179775},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.014285714285714285},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.012195121951219513},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.011904761904761904},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.009216589861751152},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.016},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.013793103448275862},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.03636363636363636},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0072992700729927005},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.013333333333333334},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.015748031496062992},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.013440860215053764},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.027210884353741496},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.013333333333333334},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.014388489208633094},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.015151515151515152},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.017857142857142856},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.020833333333333332},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.013157894736842105},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.014388489208633094},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.023255813953488372}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}},"=":{"0":{"docs":{},",":{"docs":{},"c":{"docs":{},"h":{"docs":{},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}},"h":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}}}}}}}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}},"a":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}}}},"n":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.022988505747126436}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}}}},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02}}}}},"n":{"docs":{},"d":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}}}},"l":{"docs":{},"f":{"docs":{},"u":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}},"e":{"docs":{},"p":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}}}},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}}}}}},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304}}}}}},"h":{"docs":{},"u":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}}}}},"a":{"docs":{},"o":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}},"i":{"docs":{},"a":{"docs":{},"o":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}},"a":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}}}}}}},"n":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}},"i":{"docs":{},"m":{"docs":{"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}}}},"h":{"docs":{"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"1":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.03296703296703297}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}}}}}}},";":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.02197802197802198}}}}}}}}},"2":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.016483516483516484}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}}}}}}},";":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}}},"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.018292682926829267},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.029304029304029304},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0273972602739726},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.02857142857142857},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.018292682926829267},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.010752688172043012},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.020202020202020204},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.04}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}}}}}}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.013333333333333334}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.02}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}}}}}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.014652014652014652},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.02}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}}}}},";":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0136986301369863},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.014285714285714285},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}},";":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102}},";":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.010958904109589041},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.014285714285714285},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}}}}}}}}}}}}}}}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.005479452054794521},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.04040404040404041},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374}}},")":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.005479452054794521},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}},",":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.005479452054794521},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.032},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506}}},"p":{"docs":{},"r":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.015151515151515152}},"e":{"docs":{},"v":{"docs":{},",":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}}},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102}}}}}}}},";":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102}}}}}},"_":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}},")":{"docs":{},";":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}},"e":{"docs":{},"+":{"docs":{},"+":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}},"=":{"0":{"docs":{},";":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}},"docs":{}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.015151515151515152}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},";":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333}}}}}}}}}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179}}}}},"4":{"docs":{},")":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}},"docs":{}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}},"2":{"docs":{},",":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}},"3":{"docs":{},",":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}},"4":{"docs":{},",":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}},"docs":{}}}}}},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}},"l":{"docs":{},"l":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"h":{"docs":{},"p":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}},")":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}},"a":{"docs":{},"c":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}},"(":{"docs":{},"n":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}},",":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}}}}},":":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}},"/":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}},",":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}}}},"i":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}},"2":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},")":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}},"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.058419243986254296},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":3.344322344322344},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":3.3399122807017543},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":3.344444444444444},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":3.3454545454545452},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":3.357333333333333},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":3.3394308943089426},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":3.3535353535353534},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":3.3405797101449273},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":3.3468468468468466},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":3.351515151515151},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":3.3388278388278385},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":3.3429487179487176},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":3.351515151515151},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":3.36231884057971},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":3.349333333333333},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":2.507575757575758},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":3.344322344322344}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":2.507575757575758}}},"i":{"docs":{"./":{"ref":"./","tf":0.010309278350515464},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":3.3415977961432506},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":3.3402298850574708},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":2.5071942446043165}},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":2.5071942446043165}}}},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"：":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}}},"/":{"docs":{"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.05263157894736842},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.02197802197802198},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.03636363636363636},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.04032258064516129},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.04878048780487805},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.029850746268656716},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.04285714285714286},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.021739130434782608},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.0784313725490196},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.025},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.02040816326530612},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.041044776119402986},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.022222222222222223},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.019417475728155338},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.03333333333333333},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.03571428571428571},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.016483516483516484},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.06037735849056604},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.012121212121212121},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.031746031746031744},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.016304347826086956},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.016},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.02247191011235955},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.012195121951219513},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.020202020202020204},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.01818181818181818},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.016},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.020134228187919462},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.0379746835443038},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.05825242718446602},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.02127659574468085},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.027649769585253458},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.021739130434782608},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.048},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.02702702702702703},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.03508771929824561},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0375},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.045454545454545456},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.03571428571428571},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.017857142857142856},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.024793388429752067},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.028846153846153848},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.04},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.02666666666666667},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.013793103448275862},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.05454545454545454},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.025547445255474453},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.03409090909090909},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.03773584905660377},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.023809523809523808},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.027777777777777776},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.08823529411764706},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.028985507246376812},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.017316017316017316},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.032},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.021739130434782608},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.01984126984126984},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.021505376344086023},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.015503875968992248},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.029850746268656716},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.046153846153846156},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.03333333333333333},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.015151515151515152},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.017857142857142856},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.02564102564102564},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.08333333333333333},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.024691358024691357},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.02197802197802198},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.02696078431372549},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.05263157894736842},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.031746031746031744},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":10.006872852233677}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}}}}},"2":{"6":{"docs":{},"]":{"docs":{},";":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}}},"docs":{}},"docs":{},"]":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.025},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.026785714285714284},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.019230769230769232},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.027586206896551724},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.041666666666666664},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.008064516129032258},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.03076923076923077},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.03333333333333333},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}},"[":{"docs":{},"]":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}},"{":{"0":{"docs":{},",":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}},"4":{"4":{"8":{"docs":{},",":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}},"docs":{}},"docs":{}},"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}},"docs":{}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},"[":{"2":{"docs":{},"]":{"docs":{},";":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"n":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}}}}}}}}}}}},"]":{"docs":{},";":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.026785714285714284},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}}}},"+":{"1":{"docs":{},"]":{"docs":{},";":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}}},"docs":{}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"1":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}},"docs":{}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}},"]":{"docs":{},";":{"docs":{"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}}}}}}}}},"docs":{}}}}},"k":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005}},"]":{"docs":{},";":{"docs":{"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}}}}},"m":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},";":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}}}}}}}}}}}},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}},"e":{"docs":{},"g":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}},",":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}},";":{"docs":{"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.01652892561983471},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}},",":{"docs":{"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"1":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}},",":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364}}},";":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}},"2":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}},",":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364}}},";":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}},"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.013157894736842105},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.02564102564102564}},")":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}},";":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.01818181818181818}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.017857142857142856},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}},"v":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":3.3406326034063256}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}}}},")":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.011904761904761904},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.015503875968992248}},";":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"最":{"docs":{},"少":{"docs":{},"分":{"docs":{},"割":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{},"i":{"docs":{},"=":{"0":{"docs":{},"时":{"docs":{},"由":{"docs":{},"于":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"其":{"docs":{},"最":{"docs":{},"小":{"docs":{},"分":{"docs":{},"割":{"docs":{},"次":{"docs":{},"数":{"docs":{},"为":{"0":{"docs":{},"。":{"docs":{"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}}}}}}}}}}},"a":{"docs":{},"x":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}},"i":{"docs":{},"n":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.01020408163265306}}}}},",":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.018867924528301886},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}},"t":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}},"e":{"docs":{},"r":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.013605442176870748},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.027210884353741496}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.034013605442176874}}}}}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}},"m":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.011904761904761904},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.014492753623188406}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135}}}}}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496}}}}}}}}}},"docs":{}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.015748031496062992}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}}}}}}}}}},";":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.023255813953488372},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}},"]":{"docs":{},")":{"docs":{},";":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}},"d":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"2":{"docs":{},",":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}},"docs":{}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},")":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}}}},"s":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.014492753623188406}}}}}}}}}}}},"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}}}},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"|":{"docs":{},"|":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},"|":{"docs":{},"|":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{},"{":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571}}}}},"=":{"docs":{},"r":{"docs":{},"h":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}}},"k":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.04285714285714286},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.023809523809523808},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.043478260869565216},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.06862745098039216},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":3.4012944983818767},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.056962025316455694},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.021897810218978103},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":2.5673076923076925},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.028409090909090908},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.06666666666666667}},")":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}},";":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}},"，":{"docs":{},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"找":{"docs":{},"到":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"和":{"docs":{},"为":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}}}}}}}}}}},"编":{"docs":{},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"否":{"docs":{},"含":{"docs":{},"有":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"其":{"docs":{},"大":{"docs":{},"小":{"docs":{},"至":{"docs":{},"少":{"docs":{},"为":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"/":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}},"e":{"docs":{},"y":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.011194029850746268},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}},")":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}},",":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179}}},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179}}},"是":{"docs":{},"出":{"docs":{},"现":{"docs":{},"频":{"docs":{},"率":{"docs":{},"，":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"是":{"docs":{},"对":{"docs":{},"应":{"docs":{},"出":{"docs":{},"现":{"docs":{},"同":{"docs":{},"样":{"docs":{},"频":{"docs":{},"率":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"结":{"docs":{},"点":{"docs":{},"（":{"docs":{},"频":{"docs":{},"率":{"docs":{},"一":{"docs":{},"样":{"docs":{},"使":{"docs":{},"用":{"docs":{},"最":{"docs":{},"近":{"docs":{},"最":{"docs":{},"少":{"docs":{},"使":{"docs":{},"用":{"docs":{},"l":{"docs":{},"r":{"docs":{},"u":{"docs":{},"原":{"docs":{},"则":{"docs":{},"）":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"表":{"docs":{},"不":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"/":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"，":{"docs":{},"负":{"docs":{},"责":{"docs":{},"处":{"docs":{},"理":{"docs":{},"频":{"docs":{},"率":{"docs":{},"相":{"docs":{},"关":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}},"t":{"docs":{},"h":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}}}}}}}}}}}},",":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005}}},"]":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}},")":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}},"[":{"docs":{},"i":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135}}},"j":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}},"]":{"docs":{},")":{"docs":{},",":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}},"g":{"docs":{},"e":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}}}},"l":{"0":{"docs":{},"→":{"docs":{},"l":{"docs":{},"n":{"docs":{},"→":{"docs":{},"l":{"1":{"docs":{},"→":{"docs":{},"l":{"docs":{},"n":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}}}}},"docs":{}}}}}}},"1":{"5":{"3":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":5.014925373134329}}}},"4":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":3.344322344322344}}}},"docs":{}},"9":{"1":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":5.002688172043011}}}},"docs":{}},"docs":{}},"2":{"2":{"5":{"docs":{},".":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}},"docs":{}},"3":{"2":{"docs":{},".":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}},"docs":{}},"4":{"0":{"docs":{},".":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}},"docs":{}},"8":{"7":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":5.006578947368421}}}},"docs":{}},"docs":{}},"5":{"0":{"docs":{},".":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}},"docs":{}},"7":{"4":{"docs":{},".":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}},"docs":{}},"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135}},"f":{"docs":{},"u":{"docs":{},"缓":{"docs":{},"存":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":5.003731343283582}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.014925373134328358}},"e":{"docs":{},"(":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.013157894736842105},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.02197802197802198},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.016129032258064516},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.029850746268656716},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.025},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.024},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.017857142857142856},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.029850746268656716},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.022222222222222223},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.02197802197802198},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.013157894736842105},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}},";":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}},")":{"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936}}},",":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}},"1":{"docs":{},"]":{"docs":{},")":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}},"docs":{}}}},"n":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.013157894736842105},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.016666666666666666},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.022222222222222223},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.013157894736842105}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.01818181818181818}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.016},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}},":":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}},";":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"2":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}},"docs":{},"i":{"docs":{},"]":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}},")":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}},")":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}},";":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425}}}}}}}}}},"a":{"docs":{},"f":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"/":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"g":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.012121212121212121},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}},"k":{"docs":{},")":{"docs":{},"。":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}}}}}},"w":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.015503875968992248}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.029850746268656716},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.031007751937984496}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}},"b":{"docs":{},")":{"docs":{},";":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}}}},"2":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}},")":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}}}},"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.010958904109589041},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.024242424242424242},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.014285714285714285},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.016483516483516484},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.019230769230769232},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.010948905109489052},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.02},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.015151515151515152},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.014388489208633094}},">":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.023809523809523808},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.024},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.024096385542168676},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.008658008658008658},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.015151515151515152},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.014388489208633094}}},".":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338}}}},"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.014388489208633094}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.02631578947368421},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.07777777777777778},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.01910828025477707},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.06015037593984962},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.038834951456310676},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.044444444444444446},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.07142857142857142},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.038461538461538464},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.016129032258064516},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.05442176870748299},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.044642857142857144}},"e":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.022222222222222223}}}}},"docs":{"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}}}}}}}}},"s":{"docs":{},")":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}}},",":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}}}}}}}}},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}}}}}}}}}}},":":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338}}},"[":{"docs":{},"]":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}}}}}}}}}},"/":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}},"a":{"docs":{},"n":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}},"g":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}},"n":{"docs":{},"k":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.010958904109589041}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0136986301369863},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.012121212121212121},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.01090909090909091},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338}}}},";":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338}}},":":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}}}}}}}}}},"u":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}},"a":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.015151515151515152}},"[":{"docs":{},"x":{"docs":{},"]":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}}},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}}}},";":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666}}}}}}}},"：":{"docs":{},"l":{"0":{"docs":{},"→":{"docs":{},"l":{"1":{"docs":{},"→":{"docs":{},"…":{"docs":{},"→":{"docs":{},"l":{"docs":{},"n":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}}}}}}},"docs":{}}}},"docs":{}}},",":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755}}},":":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}},";":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}},"d":{"docs":{},")":{"docs":{},";":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}},"f":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}},"n":{"1":{"docs":{},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"1":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}},"2":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}},"docs":{}}}}}},"2":{"docs":{},")":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"1":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}},"2":{"docs":{},";":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}},"docs":{}}}}}},"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.019736842105263157},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.01020408163265306},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.03333333333333333},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.022988505747126436},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.02976190476190476},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.018867924528301886},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.023809523809523808},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.027777777777777776},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.02},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.043478260869565216},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.03896103896103896},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.043478260869565216},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.024193548387096774},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.023255813953488372},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.038461538461538464},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.019736842105263157}},"i":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":3.39047619047619}}}},"皇":{"docs":{},"后":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":3.3478260869565215},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":5.004329004329004}}}},"u":{"docs":{},"m":{"1":{"docs":{},",":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364}}},";":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}},"2":{"docs":{},")":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}},";":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364}}}},"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.030303030303030304},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.023809523809523808},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.019230769230769232},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.018867924528301886},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.027777777777777776},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.01639344262295082}},"s":{"1":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.02040816326530612},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.022727272727272728}},",":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}},"docs":{}},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"来":{"docs":{},"自":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}}}}}}}},"2":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.015306122448979591},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.017045454545454544}},"。":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}},",":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}}}},"docs":{}}},"docs":{},")":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.019736842105263157},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.01818181818181818},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.016666666666666666},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.020833333333333332},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.019736842105263157}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.0196078431372549},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}},";":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}},";":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806}}},",":{"docs":{"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.03508771929824561}}}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"]":{"docs":{},"]":{"docs":{},";":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"]":{"docs":{},";":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.02197802197802198},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.02197802197802198}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},";":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.013157894736842105},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.013157894736842105}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}}}}},"]":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}},"i":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}},"]":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02}},")":{"docs":{},";":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}},")":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}}},";":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}}},"j":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}},"]":{"docs":{},")":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}},"k":{"docs":{},"]":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666}}}}}}}}}}}}},"，":{"docs":{},"其":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"在":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}}},"中":{"docs":{},"恰":{"docs":{},"好":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"，":{"docs":{},"其":{"docs":{},"余":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"均":{"docs":{},"出":{"docs":{},"现":{"docs":{},"两":{"docs":{},"次":{"docs":{},"。":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}}},"求":{"docs":{},"出":{"docs":{},"数":{"docs":{},"组":{"docs":{},"从":{"docs":{},"索":{"docs":{},"引":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}}}}}},",":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.0196078431372549},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666}}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"严":{"docs":{},"格":{"docs":{},"大":{"docs":{},"于":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549}},"a":{"docs":{},"y":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.013605442176870748},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.038461538461538464}},"）":{"docs":{},"。":{"docs":{},"求":{"docs":{},"按":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"第":{"docs":{"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}}}}}}}}}}}}}}},"/":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}}}}},"s":{"docs":{},":":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}},"[":{"docs":{},"]":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613}}}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}}}},"docs":{}},"e":{"docs":{},"r":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.05223880597014925}}}},";":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}}},")":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.01639344262295082}}}},"l":{"docs":{},"l":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.024390243902439025},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.005479452054794521},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.015748031496062992},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}},")":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.024390243902439025},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.029304029304029304},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.01910828025477707},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.02197802197802198},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0273972602739726},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.02040816326530612},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.018867924528301886},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.021739130434782608},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.016},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.011235955056179775},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.02142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.024390243902439025},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.023255813953488372},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.015748031496062992},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.03535353535353535},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.02666666666666667},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.02158273381294964},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.022727272727272728},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.026785714285714284},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.03597122302158273},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.046511627906976744}},";":{"docs":{"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943}}}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.013157894736842105},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.005479452054794521},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.013333333333333334},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.017857142857142856},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.05813953488372093}},";":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}},"，":{"docs":{},"随":{"docs":{},"机":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"它":{"docs":{},"自":{"docs":{},"己":{"docs":{},"。":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}}}}}}}}}}},"。":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.012195121951219513},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.013333333333333334}}},",":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}}}}}}}}}}}},";":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}}}}}}}}},"）":{"docs":{},"，":{"docs":{},"可":{"docs":{},"知":{"docs":{},"至":{"docs":{},"少":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"找":{"docs":{},"出":{"docs":{},"这":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.012121212121212121},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.015306122448979591},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.03636363636363636},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.018867924528301886},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.023809523809523808},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.013333333333333334},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.058823529411764705},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.012987012987012988},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.016129032258064516},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571}},")":{"docs":{},"。":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}},";":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}},"e":{"docs":{},"w":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.014652014652014652},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.022388059701492536},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.022222222222222223},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.021917808219178082},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.013605442176870748},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.01818181818181818},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.016},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.02909090909090909},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.020134228187919462},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.02531645569620253},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.02304147465437788},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.021739130434782608},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.016},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.024096385542168676},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.03636363636363636},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.026785714285714284},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.027472527472527472},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.019230769230769232},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.013793103448275862},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.03636363636363636},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.028846153846153848},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.040145985401459854},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.014925373134328358},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.022727272727272728},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.027777777777777776},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.013333333333333334},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.012987012987012988},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.02},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.027777777777777776},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.008064516129032258},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.013333333333333334},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.036585365853658534},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.030303030303030304},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.01715686274509804},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.03333333333333333},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.03597122302158273},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.01639344262295082}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}},"x":{"docs":{},"t":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.013605442176870748},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.03048780487804878},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.022556390977443608},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.02040816326530612},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}},"(":{"docs":{},")":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.034013605442176874}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{},";":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}}}}}}}}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},")":{"docs":{},"。":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.015151515151515152}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.015151515151515152}}}}},";":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576}}}}}}}}}},"e":{"docs":{},"d":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}},"l":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338}},"e":{"docs":{},")":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338}}}}}}}}}}}}}}}}},"*":{"docs":{},"k":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.017857142857142856}},",":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496}}},".":{"docs":{},"v":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}}}}}}},";":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.017857142857142856}}}},"2":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.015748031496062992},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.026785714285714284}},",":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}},".":{"docs":{},"v":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}},")":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.017857142857142856}}}}}}}},";":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}},")":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496}}}},"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.054878048780487805},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.05860805860805861},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.013157894736842105},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.09146341463414634},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.014598540145985401},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.030303030303030304},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.05333333333333334},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.014388489208633094},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.023255813953488372}},"(":{"0":{"docs":{},",":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}},"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}},")":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}},";":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.012195121951219513},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}}}}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0072992700729927005}}}}}}}}}}},")":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936}},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},".":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943}},";":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179}},"+":{"1":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}},"docs":{}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943}},"c":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}},";":{"docs":{"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}}}}}}}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}}},",":{"docs":{"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943}}}}}},"，":{"docs":{},"生":{"docs":{},"成":{"docs":{},"所":{"docs":{},"有":{"docs":{},"由":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}}}}}},"求":{"docs":{},"以":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}}}},"返":{"docs":{},"回":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406}},"所":{"docs":{},"有":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}},"其":{"docs":{},"格":{"docs":{},"雷":{"docs":{},"编":{"docs":{},"码":{"docs":{},"序":{"docs":{},"列":{"docs":{},"并":{"docs":{},"不":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"。":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}}}}}}}}}},"打":{"docs":{},"印":{"docs":{},"其":{"docs":{},"格":{"docs":{},"雷":{"docs":{},"编":{"docs":{},"码":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{},"格":{"docs":{},"雷":{"docs":{},"编":{"docs":{},"码":{"docs":{},"序":{"docs":{},"列":{"docs":{},"必":{"docs":{},"须":{"docs":{},"以":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}}}},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"从":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}},";":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"g":{"docs":{},"l":{"docs":{},"y":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.03636363636363636},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"u":{"docs":{},"g":{"docs":{},"l":{"docs":{},"y":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506}}},"!":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}},"中":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"个":{"0":{"docs":{},"，":{"docs":{},"取":{"docs":{},"决":{"docs":{},"于":{"docs":{},"n":{"docs":{},"!":{"docs":{},"中":{"docs":{},"一":{"docs":{},"共":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"个":{"docs":{},"质":{"docs":{},"因":{"docs":{},"数":{"2":{"docs":{},"和":{"5":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"2":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"一":{"docs":{},"定":{"docs":{},"大":{"docs":{},"于":{"5":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"最":{"docs":{},"终":{"docs":{},"取":{"docs":{},"决":{"docs":{},"于":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"个":{"5":{"docs":{},"。":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"]":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353}}}}}},"×":{"docs":{},"n":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}},"p":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.013605442176870748},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.03164556962025317},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.01744186046511628},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.041666666666666664},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.03278688524590164},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.03278688524590164}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"y":{"docs":{},"x":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.02631578947368421},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.01818181818181818},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.016129032258064516},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.0196078431372549},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.016666666666666666},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.04878048780487805},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.04395604395604396},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.013157894736842105},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.018656716417910446},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.022222222222222223},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.01910828025477707},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.03007518796992481},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.019417475728155338},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.022222222222222223},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.03571428571428571},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.019178082191780823},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.03773584905660377},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.027210884353741496},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.01818181818181818},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.023809523809523808},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.02830188679245283},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.02717391304347826},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.016},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.016853932584269662},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.014285714285714285},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.04878048780487805},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.011904761904761904},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.015957446808510637},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.02304147465437788},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.014492753623188406},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.016},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.013513513513513514},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.022727272727272728},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.011904761904761904},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.020689655172413793},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.03636363636363636},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.01824817518248175},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.023809523809523808},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.013333333333333334},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.028985507246376812},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.015748031496062992},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.011904761904761904},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.021505376344086023},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0392156862745098},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.03535353535353535},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.027210884353741496},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.013333333333333334},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.024390243902439025},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.014388489208633094},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.015151515151515152},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.017857142857142856},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.03125},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.06666666666666667},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.024509803921568627},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.02564102564102564},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.02631578947368421},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.014388489208633094},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.031746031746031744},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.01639344262295082},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.03488372093023256}}}}}},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},":":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}},"。":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}},"s":{"docs":{},"h":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.00980392156862745}},"(":{"1":{"docs":{},")":{"docs":{},",":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}},"2":{"docs":{},")":{"docs":{},",":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}},"3":{"docs":{},")":{"docs":{},",":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}},"4":{"docs":{},")":{"docs":{},",":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}},"5":{"docs":{},")":{"docs":{},",":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}},"x":{"docs":{},")":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}}}}},"a":{"docs":{},"r":{"docs":{"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.023255813953488372}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"_":{"1":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}},"2":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}},"3":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}},"4":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}},"docs":{}},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},":":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}}}}}}}},";":{"docs":{"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.023255813953488372}}}},"t":{"docs":{},"h":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.016}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}},",":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}},",":{"docs":{"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666}}}}}}}}}}},"a":{"docs":{},"o":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}}}}}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}}}},"n":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}},"e":{"docs":{},"k":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}},"(":{"docs":{},")":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}},"/":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}}}},"o":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.03289473684210526},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.012987012987012988}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02}}}},"t":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178}}}}}}}}}}}}}}}}}}},")":{"docs":{"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}},",":{"docs":{"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}}}}}}}},"[":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"]":{"docs":{},")":{"docs":{"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}}}}}}}}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.017857142857142856}}}}}}},"w":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506}}}}}},"p":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.024390243902439025}},"(":{"docs":{},")":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.00980392156862745},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.06097560975609756}}}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}}}},"r":{"docs":{},"e":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748}},"v":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.024390243902439025},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.010958904109589041},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.014285714285714285}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}},")":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.005479452054794521}},")":{"docs":{},";":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178}},";":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.02142857142857143}},";":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}},";":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102}},";":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}}}}},";":{"docs":{"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.010948905109489052},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.012987012987012988},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.024691358024691357}}}}},"c":{"docs":{},"e":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}},"s":{"docs":{},")":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.013513513513513514},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.022727272727272728},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}},",":{"docs":{"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364}}}}},"3":{"docs":{},"]":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}}}},"4":{"docs":{},"]":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}}}},"5":{"docs":{},"]":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}}}},"docs":{},"i":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.014598540145985401},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.013513513513513514}},"]":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}}}}},",":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"第":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}},"(":{"docs":{},"e":{"1":{"docs":{},",":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}},"docs":{}},"n":{"1":{"docs":{},",":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}},"docs":{}},"i":{"1":{"docs":{},",":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}},"docs":{}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.06944444444444445}},"s":{"docs":{},")":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}}}}}},"n":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"$":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"j":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.02185792349726776},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.02185792349726776}}}}}}}}}}},",":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.01744186046511628},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.024096385542168676},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.008658008658008658}}},"、":{"docs":{},"q":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186}},"，":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"表":{"docs":{},"示":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}},":":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308}}},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}},"请":{"docs":{},"你":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"支":{"docs":{},"持":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}}}},")":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.011904761904761904},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.008658008658008658},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}},";":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}},"q":{"docs":{"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818}}}}}},"docs":{}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}}}}}}}},";":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},";":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}},")":{"docs":{"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.023255813953488372}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}}}}}}}}}}}}}},"s":{"1":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.039473684210526314},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.025906735751295335}},",":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.02631578947368421},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105}}}}}}}}}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"它":{"docs":{},"递":{"docs":{},"归":{"docs":{},"地":{"docs":{},"分":{"docs":{},"割":{"docs":{},"成":{"docs":{},"两":{"docs":{},"个":{"docs":{},"非":{"docs":{},"空":{"docs":{},"子":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"将":{"docs":{},"其":{"docs":{},"表":{"docs":{},"示":{"docs":{},"为":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549}}}}},"2":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.039473684210526314},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.015544041450777202}},")":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"s":{"2":{"docs":{"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549}}},"docs":{}}}}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}}}}}}},",":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.02631578947368421}}},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}},"3":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.039473684210526314}},")":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105}}},",":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105}}}},"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.03333333333333333},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.026845637583892617},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.05063291139240506},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.041666666666666664},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.03825136612021858},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.024096385542168676},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.03636363636363636},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.02197802197802198},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.019230769230769232},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.04672897196261682},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.03870967741935484},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.03825136612021858}},"t":{"1":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}},",":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}}}}}},"2":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}},";":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}},"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}},"r":{"2":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}},"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.014492753623188406}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":3.333333333333333}},"(":{"docs":{},")":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338}}}}}}}}},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"k":{"docs":{},"m":{"docs":{},"p":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}},")":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.014492753623188406}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}},"u":{"docs":{},"r":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.014545454545454545},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.020134228187919462},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.02531645569620253},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.011904761904761904},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.014492753623188406},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.02631578947368421},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0392156862745098},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"$":{"docs":{},"#":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}}}}},")":{"docs":{},";":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}}}}}},")":{"docs":{},")":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}},")":{"docs":{},";":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}},":":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099}}},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"/":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}},"a":{"docs":{},"r":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}},"t":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.0196078431372549},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.015957446808510637},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.020833333333333332}},",":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.017857142857142856},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}},";":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.0196078431372549},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.020833333333333332}}},")":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666}}}},"_":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}},"c":{"docs":{},"k":{"1":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}},",":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}}},"2":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}},"docs":{}}}}}}}}}}}},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}},"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.005479452054794521},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.013605442176870748},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.012254901960784314},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.014388489208633094},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}},".":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}}}}},"p":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.024390243902439025},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.014388489208633094},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}}}},";":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.019736842105263157},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.019736842105263157},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.02830188679245283},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.019736842105263157}},")":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.013157894736842105},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}}}}}},";":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.013157894736842105},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.01818181818181818},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.016129032258064516},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.016666666666666666},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.011904761904761904},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.016},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.03636363636363636},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.013333333333333334},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.010752688172043012},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.020833333333333332},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.013157894736842105},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}}}},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}}}}}}}},"n":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}}}}}},"d":{"1":{"docs":{"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}},"2":{"docs":{"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}},"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}},"r":{"docs":{},"t":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}},"u":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}},"m":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.016666666666666666},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.024},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.016853932584269662},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.018867924528301886},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.031007751937984496}},"[":{"0":{"docs":{},"]":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}},"docs":{},"i":{"docs":{},"]":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}}},")":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}},";":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}},"e":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755}}}},"docs":{}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},":":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}},"a":{"docs":{},"n":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}}},"o":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666}}}}}}}}}}},")":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.016},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}}},"docs":{}}}}}}}}}}}},"{":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}},",":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.016666666666666666},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.011904761904761904},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}},"h":{"docs":{},"u":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.01020408163265306},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}},"i":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.013605442176870748},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}},"z":{"docs":{},"e":{"1":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}},",":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}},"2":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}},";":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}},"docs":{},",":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.022641509433962263}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755}}}}},"l":{"docs":{},",":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.014492753623188406},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.03}},")":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}},"s":{"docs":{},"b":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"$":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}}},"docs":{}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338}}}}}}}},"j":{"docs":{},",":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}},"(":{"docs":{},")":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}},")":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338}},";":{"docs":{"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}}}},";":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}}},")":{"docs":{},"{":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.024691358024691357}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}}}}},"i":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}},":":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308}}},";":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}},"、":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}}}}},"b":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"x":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}}}}}},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}},"将":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}}},"计":{"docs":{},"算":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}}},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"部":{"docs":{},"分":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}},"r":{"docs":{},"r":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.024691358024691357}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.04838709677419355},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.03333333333333333},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.216},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.013824884792626729},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.020100502512562814},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.007352941176470588}},"的":{"docs":{},"平":{"docs":{},"方":{"docs":{},"根":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":5.008064516129032}}}}}},")":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.024193548387096774},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.022222222222222223},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"对":{"docs":{},"于":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"方":{"docs":{},"程":{"docs":{},"也":{"docs":{},"要":{"docs":{},"做":{"docs":{},"一":{"docs":{},"下":{"docs":{},"优":{"docs":{},"化":{"docs":{},"，":{"docs":{},"即":{"docs":{},"使":{"docs":{},"用":{"docs":{},"不":{"docs":{},"带":{"docs":{},"符":{"docs":{},"号":{"docs":{},"的":{"docs":{},"右":{"docs":{},"移":{"docs":{},"操":{"docs":{},"作":{"docs":{},"替":{"docs":{},"代":{"docs":{},"除":{"docs":{},"以":{"2":{"docs":{},"。":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.009216589861751152},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}},"u":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}},"g":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}},"n":{"docs":{},"g":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}},"，":{"docs":{},"对":{"docs":{},"链":{"docs":{},"表":{"docs":{},"进":{"docs":{},"行":{"docs":{},"分":{"docs":{},"隔":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"所":{"docs":{},"有":{"docs":{},"小":{"docs":{},"于":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112}}}}}}}}}}}}}}}},"满":{"docs":{},"足":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}},",":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"o":{"docs":{},"r":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}},"}":{"docs":{},";":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}},"为":{"docs":{},"两":{"docs":{},"个":{"docs":{},"结":{"docs":{},"果":{"docs":{},"元":{"docs":{},"素":{"docs":{},"异":{"docs":{},"或":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}}}}}}}}}}}}}}},"三":{"docs":{},"数":{"docs":{},"之":{"docs":{},"和":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":5.011904761904762}}}}},"角":{"docs":{},"形":{"docs":{},"最":{"docs":{},"小":{"docs":{},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":5.015151515151516}}}}}}}}},"条":{"docs":{},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304}}}}}}},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":3.339393939393939},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":5.011494252873563}}}}}}},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":3.3429487179487176},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":5.006451612903226}}}}}}},"能":{"docs":{},"更":{"docs":{},"改":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"（":{"docs":{},"假":{"docs":{},"设":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"只":{"docs":{},"读":{"docs":{},"的":{"docs":{},"）":{"docs":{},"。":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}},"在":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}},"允":{"docs":{},"许":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"信":{"docs":{},"封":{"docs":{},"。":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}}}}}},"会":{"docs":{},"同":{"docs":{},"时":{"docs":{},"为":{"docs":{},"空":{"docs":{},"。":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}}}}},"使":{"docs":{},"用":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"把":{"docs":{},"复":{"docs":{},"制":{"docs":{},"后":{"docs":{},"的":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"旧":{"docs":{},"节":{"docs":{},"点":{"docs":{},"之":{"docs":{},"后":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"对":{"docs":{},"于":{"docs":{},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"个":{"docs":{},"旧":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"就":{"docs":{},"是":{"docs":{},"指":{"docs":{},"向":{"docs":{},"其":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"之":{"docs":{},"后":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"修":{"docs":{},"改":{"docs":{},"所":{"docs":{},"有":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"再":{"docs":{},"经":{"docs":{},"过":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"将":{"docs":{},"新":{"docs":{},"旧":{"docs":{},"链":{"docs":{},"表":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"开":{"docs":{},"来":{"docs":{},"。":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"字":{"docs":{},"典":{"docs":{},"中":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"无":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"转":{"docs":{},"换":{"docs":{},"。":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"答":{"docs":{},"案":{"docs":{},"输":{"docs":{},"出":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}}}}}}}}}},"是":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806}}}}}},"）":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}},"超":{"docs":{},"过":{"1":{"6":{"9":{"0":{"docs":{},"。":{"docs":{"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"丑":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":3.351515151515151},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":5.012820512820513}}}},"个":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.023255813953488372}},"一":{"docs":{},"组":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"链":{"docs":{},"表":{"docs":{},"难":{"docs":{},"度":{"docs":{},"困":{"docs":{},"难":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":3.3430420711974107}}}}}}}}}}}},"高":{"docs":{},"频":{"docs":{},"元":{"docs":{},"素":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":2.5096153846153846}}}}}},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}}}},"严":{"docs":{},"格":{"docs":{},"大":{"docs":{},"于":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.012121212121212121}}}}}},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.028846153846153848}}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"请":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"找":{"docs":{},"的":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"的":{"docs":{},"第":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"第":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}}}}}},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}}},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}}}}}}}}}}}},"待":{"docs":{},"反":{"docs":{},"转":{"docs":{},"元":{"docs":{},"素":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669}}}}}}},"节":{"docs":{},"点":{"docs":{},"一":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"，":{"docs":{},"请":{"docs":{},"你":{"docs":{},"返":{"docs":{},"回":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"后":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"一":{"docs":{},"支":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"股":{"docs":{},"票":{"docs":{},"在":{"docs":{},"第":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}}}}},"股":{"docs":{},"票":{"docs":{},"第":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364}}}}}}}}}},"代":{"docs":{},"表":{"docs":{},"了":{"docs":{},"第":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}}}}}},"房":{"docs":{},"间":{"docs":{},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{},"二":{"docs":{},"维":{"docs":{},"网":{"docs":{},"格":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"英":{"docs":{},"勇":{"docs":{},"的":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"（":{"docs":{},"k":{"docs":{},"）":{"docs":{},"最":{"docs":{},"初":{"docs":{},"被":{"docs":{},"安":{"docs":{},"置":{"docs":{},"在":{"docs":{},"左":{"docs":{},"上":{"docs":{},"角":{"docs":{},"的":{"docs":{},"房":{"docs":{},"间":{"docs":{},"里":{"docs":{},"，":{"docs":{},"他":{"docs":{},"必":{"docs":{},"须":{"docs":{},"穿":{"docs":{},"过":{"docs":{},"地":{"docs":{},"下":{"docs":{},"城":{"docs":{},"并":{"docs":{},"通":{"docs":{},"过":{"docs":{},"对":{"docs":{},"抗":{"docs":{},"恶":{"docs":{},"魔":{"docs":{},"来":{"docs":{},"拯":{"docs":{},"救":{"docs":{},"公":{"docs":{},"主":{"docs":{},"。":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"零":{"docs":{},".":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}}}},"超":{"docs":{},"级":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"。":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}}},"序":{"docs":{},"列":{"docs":{},"为":{"docs":{},"：":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},",":{"7":{"docs":{},",":{"8":{"docs":{},",":{"1":{"3":{"docs":{},",":{"1":{"4":{"docs":{},",":{"1":{"6":{"docs":{},",":{"1":{"9":{"docs":{},",":{"2":{"6":{"docs":{},",":{"2":{"8":{"docs":{},",":{"3":{"2":{"docs":{},"]":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}},"皇":{"docs":{},"后":{"docs":{},"放":{"docs":{},"置":{"docs":{},"在":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"（":{"docs":{},"非":{"docs":{},"空":{"docs":{},"）":{"docs":{},"棋":{"docs":{},"子":{"docs":{},"排":{"docs":{},"成":{"docs":{},"一":{"docs":{},"条":{"docs":{},"直":{"docs":{},"线":{"docs":{},"（":{"docs":{},"行":{"docs":{},"、":{"docs":{},"列":{"docs":{},"、":{"docs":{},"对":{"docs":{},"角":{"docs":{},"线":{"docs":{},"）":{"docs":{},"时":{"docs":{},"，":{"docs":{},"游":{"docs":{},"戏":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"母":{"docs":{},"长":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"（":{"docs":{},"子":{"docs":{},"串":{"docs":{},"）":{"docs":{},"。":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}}}}}}}}}}}},"丑":{"docs":{},"数":{"docs":{},"。":{"docs":{"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.02564102564102564}}}}},"数":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"输":{"docs":{},"入":{"4":{"docs":{},"、":{"5":{"docs":{},"、":{"1":{"docs":{},"、":{"6":{"docs":{},"、":{"2":{"docs":{},"、":{"7":{"docs":{},"、":{"3":{"docs":{},"、":{"8":{"docs":{},"这":{"8":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"则":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"4":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"1":{"docs":{},"、":{"2":{"docs":{},"、":{"3":{"docs":{},"、":{"4":{"docs":{},"。":{"docs":{"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"docs":{}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}},"之":{"docs":{},"前":{"docs":{},"在":{"docs":{},"刷":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"很":{"docs":{},"多":{"docs":{},"题":{"docs":{},"目":{"docs":{},"做":{"docs":{},"过":{"docs":{},"就":{"docs":{},"忘":{"docs":{},"掉":{"docs":{},"了":{"docs":{},"，":{"docs":{},"再":{"docs":{},"次":{"docs":{},"碰":{"docs":{},"到":{"docs":{},"类":{"docs":{},"似":{"docs":{},"的":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{},"是":{"docs":{},"依":{"docs":{},"然":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"无":{"docs":{},"从":{"docs":{},"下":{"docs":{},"手":{"docs":{},"。":{"docs":{},"其":{"docs":{},"实":{"docs":{},"这":{"docs":{},"往":{"docs":{},"往":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"对":{"docs":{},"于":{"docs":{},"题":{"docs":{},"目":{"docs":{},"没":{"docs":{},"有":{"docs":{},"理":{"docs":{},"解":{"docs":{},"，":{"docs":{},"掌":{"docs":{},"握":{"docs":{},"透":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"在":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"刷":{"docs":{},"题":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"刻":{"docs":{},"意":{"docs":{},"放":{"docs":{},"慢":{"docs":{},"了":{"docs":{},"脚":{"docs":{},"步":{"docs":{},"，":{"docs":{},"每":{"docs":{},"做":{"docs":{},"完":{"docs":{},"一":{"docs":{},"道":{"docs":{},"题":{"docs":{},"，":{"docs":{},"都":{"docs":{},"去":{"docs":{},"主":{"docs":{},"动":{"docs":{},"思":{"docs":{},"考":{"docs":{},"这":{"docs":{},"种":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"空":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"多":{"docs":{},"少":{"docs":{},"，":{"docs":{},"是":{"docs":{},"否":{"docs":{},"还":{"docs":{},"有":{"docs":{},"更":{"docs":{},"优":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"，":{"docs":{},"能":{"docs":{},"否":{"docs":{},"做":{"docs":{},"到":{"docs":{},"举":{"docs":{},"一":{"docs":{},"反":{"docs":{},"三":{"docs":{},"等":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"弹":{"docs":{},"出":{"docs":{},"。":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}}},"间":{"docs":{},"（":{"docs":{},"包":{"docs":{},"括":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"次":{"docs":{},"二":{"docs":{},"分":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"区":{"docs":{},"间":{"docs":{},"缩":{"docs":{},"小":{"docs":{},"一":{"docs":{},"半":{"docs":{},"。":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}},"乘":{"docs":{},"积":{"docs":{},"最":{"docs":{},"大":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":5.017543859649122}}}}}}}}},"买":{"docs":{},"卖":{"docs":{},"股":{"docs":{},"票":{"docs":{},"的":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"时":{"docs":{},"机":{"docs":{"./":{"ref":"./","tf":0.013745704467353952},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":3.3406326034063256},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":3.3400900900900896},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":5.011363636363637},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":3.3415977961432506}},"含":{"docs":{},"手":{"docs":{},"续":{"docs":{},"费":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":5.0125}}}}}}}}}}}}}},"入":{"docs":{},",":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}}},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}}}}},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"与":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":5.005050505050505}}}}}}},"中":{"docs":{},"第":{"docs":{},"k":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":5.006329113924051}}}}}}}},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"被":{"docs":{},"错":{"docs":{},"误":{"docs":{},"地":{"docs":{},"交":{"docs":{},"换":{"docs":{},"。":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}}}}}}}}}}}}}},"的":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":5.015873015873016}}}}}}}}},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":5.006802721088436}}}}},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}}}}},"树":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}},"展":{"docs":{},"开":{"docs":{},"为":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":5.009433962264151}}}}}}},"的":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":5.007142857142857}}}}}},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":5.002739726027397}}}}}},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":5.005813953488372}}}}}}}}}}},"进":{"docs":{},"制":{"docs":{},"中":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/15. 二进制中1的个数.html":{"ref":"剑指offer/15. 二进制中1的个数.html","tf":5.5}}}}}},"docs":{}}}}},"交":{"docs":{},"错":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":5.0131578947368425}}}}},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{},"。":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105}}}}}}},"易":{"docs":{},"。":{"docs":{"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}},"换":{"docs":{},"律":{"docs":{},"：":{"docs":{},"a":{"docs":{"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304}}}}}}},"从":{"docs":{},"上":{"docs":{},"到":{"docs":{},"下":{"docs":{},"打":{"docs":{},"印":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":2.507575757575758},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":2.5071942446043165}}}}}}},"按":{"docs":{},"层":{"docs":{},"打":{"docs":{},"印":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"同":{"docs":{},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"按":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"层":{"docs":{},"打":{"docs":{},"印":{"docs":{},"到":{"docs":{},"一":{"docs":{},"行":{"docs":{},"。":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"路":{"docs":{},"径":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.028089887640449437}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"首":{"docs":{},"部":{"docs":{},"移":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"到":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"中":{"docs":{},"。":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}},"位":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":5.002688172043011}}}}}},"docs":{},"运":{"docs":{},"算":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}}}},"有":{"docs":{},"符":{"docs":{},"号":{"docs":{},"整":{"docs":{},"数":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"。":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}}}}}}}}},"数":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}},"为":{"2":{"docs":{},"时":{"docs":{},"的":{"docs":{},"格":{"docs":{},"雷":{"docs":{},"码":{"docs":{},"为":{"docs":{},"：":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}}}}}},"docs":{}}},"为":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"十":{"docs":{},"进":{"docs":{},"制":{"docs":{},"数":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}},"俄":{"docs":{},"罗":{"docs":{},"斯":{"docs":{},"套":{"docs":{},"娃":{"docs":{},"信":{"docs":{},"封":{"docs":{},"问":{"docs":{},"题":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":5.012195121951219}}}}}}}}}}},"分":{"docs":{},"割":{"docs":{},"回":{"docs":{},"文":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":5.0120481927710845},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":3.351515151515151}}}}},"成":{"docs":{"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}},"一":{"docs":{},"些":{"docs":{},"子":{"docs":{},"串":{"docs":{},"，":{"docs":{},"使":{"docs":{},"每":{"docs":{},"个":{"docs":{},"子":{"docs":{},"串":{"docs":{},"都":{"docs":{},"是":{"docs":{},"回":{"docs":{},"文":{"docs":{},"串":{"docs":{},"。":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"到":{"docs":{},"小":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":5.007462686567164}}}}}},"隔":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":5.011111111111111}}}},"时":{"docs":{},"可":{"docs":{},"以":{"docs":{},"重":{"docs":{},"复":{"docs":{},"使":{"docs":{},"用":{"docs":{},"字":{"docs":{},"典":{"docs":{},"中":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"。":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}},"别":{"docs":{},"去":{"docs":{},"掉":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"2":{"docs":{},"s":{"docs":{},"首":{"docs":{},"尾":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"构":{"docs":{},"成":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"2":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}},"代":{"docs":{},"表":{"docs":{},"了":{"docs":{},"皇":{"docs":{},"后":{"docs":{},"和":{"docs":{},"空":{"docs":{},"位":{"docs":{},"。":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}}},"子":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"出":{"docs":{},"现":{"docs":{},"超":{"docs":{},"过":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}}}}}}}}}}}}},"前":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":2.5096153846153846}},"序":{"docs":{"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}},"剑":{"docs":{},"指":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}}}}}}}}},"剪":{"docs":{},"梯":{"docs":{},"子":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":5.033333333333333}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"自":{"docs":{},"不":{"docs":{},"必":{"docs":{},"说":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"主":{"docs":{},"要":{"docs":{},"说":{"docs":{},"下":{"docs":{},"公":{"docs":{},"式":{"docs":{},"法":{"docs":{},"。":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}},"包":{"docs":{},"含":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"栈":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":5.012195121951219}}}}}}}}}}},"区":{"docs":{},"域":{"docs":{},"和":{"docs":{},"检":{"docs":{},"索":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":3.3371069182389936}}}}}},"间":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669}}}},"单":{"docs":{},"词":{"docs":{},"拆":{"docs":{},"分":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":3.3388278388278385},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":5.009345794392523}}}},"接":{"docs":{},"龙":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":5.003636363636364}}}}}},"反":{"docs":{},"转":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":5.007518796992481},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":3.344444444444444}}}},"从":{"docs":{},"位":{"docs":{},"置":{"docs":{"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112}}}}}}},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":3.349333333333333},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":5.010869565217392}}}}}}}}},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}}}},"放":{"docs":{},"在":{"docs":{},"空":{"docs":{},"方":{"docs":{},"格":{"docs":{},"中":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"能":{"docs":{},"放":{"docs":{},"在":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"占":{"docs":{},"用":{"docs":{},"的":{"docs":{},"方":{"docs":{},"格":{"docs":{},"上":{"docs":{},"。":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}},"包":{"docs":{},"含":{"docs":{},"小":{"docs":{},"写":{"docs":{},"字":{"docs":{},"母":{"docs":{},"。":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}}}}}}},"要":{"docs":{},"有":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}},"是":{"docs":{},"标":{"docs":{},"准":{"docs":{},"的":{"docs":{},"队":{"docs":{},"列":{"docs":{},"操":{"docs":{},"作":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}}}}}},"合":{"docs":{},"并":{"docs":{},"k":{"docs":{},"个":{"docs":{},"排":{"docs":{},"序":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":5.008928571428571}}}}}}}}}},"和":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.013157894736842105},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.0196078431372549},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.015306122448979591},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.011904761904761904},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01092896174863388},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.03389830508474576},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.01507537688442211},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01092896174863388},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.013157894736842105}},"为":{"docs":{},"k":{"docs":{},"的":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":5.014285714285714}}}}}}}},"节":{"docs":{},"点":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186}}}},"一":{"docs":{},"个":{"docs":{},"非":{"docs":{},"空":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}}}}},"字":{"docs":{},"符":{"docs":{},"模":{"docs":{},"式":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}},"规":{"docs":{},"律":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}},"串":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}}},"包":{"docs":{},"含":{"docs":{},"非":{"docs":{},"空":{"docs":{},"单":{"docs":{},"词":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"字":{"docs":{},"典":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}}}}}}}}}},"分":{"docs":{},"母":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}},"地":{"docs":{},"下":{"docs":{},"城":{"docs":{},"游":{"docs":{},"戏":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":5.005952380952381}}}}}}},"填":{"docs":{},"充":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"右":{"docs":{},"侧":{"docs":{},"节":{"docs":{},"点":{"docs":{},"指":{"docs":{},"针":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":3.3394308943089426}}}}}}}}}}}}}}}},"它":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}},"。":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}},"复":{"docs":{},"制":{"docs":{},"带":{"docs":{},"随":{"docs":{},"机":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":5.003663003663004}}}}}}}}}}},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"复":{"docs":{},"制":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":5.006666666666667}}}}}}}}},"如":{"docs":{},"果":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.02531645569620253}},"有":{"docs":{},"任":{"docs":{},"何":{"docs":{},"问":{"docs":{},"题":{"docs":{},"和":{"docs":{},"意":{"docs":{},"见":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"在":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"e":{"docs":{},"区":{"docs":{},"提":{"docs":{},"出":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}}}}}}}}}}}}}}}}}}}}}},"你":{"docs":{},"已":{"docs":{},"经":{"docs":{},"完":{"docs":{},"成":{"docs":{},"了":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}}}}}}}}},"最":{"docs":{},"多":{"docs":{},"只":{"docs":{},"允":{"docs":{},"许":{"docs":{},"完":{"docs":{},"成":{"docs":{},"一":{"docs":{},"笔":{"docs":{},"交":{"docs":{},"易":{"docs":{},"（":{"docs":{},"即":{"docs":{},"买":{"docs":{},"入":{"docs":{},"和":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"一":{"docs":{},"支":{"docs":{},"股":{"docs":{},"票":{"docs":{},"）":{"docs":{},"，":{"docs":{},"设":{"docs":{},"计":{"docs":{},"一":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"来":{"docs":{},"计":{"docs":{},"算":{"docs":{},"你":{"docs":{},"所":{"docs":{},"能":{"docs":{},"获":{"docs":{},"取":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{},"。":{"docs":{"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"只":{"docs":{},"使":{"docs":{},"用":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}}}}}},"链":{"docs":{},"表":{"docs":{},"无":{"docs":{},"环":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{},"查":{"docs":{},"找":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"一":{"docs":{},"串":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"里":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"删":{"docs":{},"掉":{"docs":{},"他":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"在":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"里":{"docs":{},"也":{"docs":{},"删":{"docs":{},"掉":{"docs":{},"他":{"docs":{},"。":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"里":{"docs":{},"没":{"docs":{},"有":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"现":{"docs":{},"在":{"docs":{},"的":{"docs":{},"频":{"docs":{},"率":{"docs":{},"，":{"docs":{},"就":{"docs":{},"给":{"docs":{},"他":{"docs":{},"新":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"频":{"docs":{},"率":{"docs":{},"，":{"docs":{},"放":{"docs":{},"到":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"里":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}},"这":{"docs":{},"一":{"docs":{},"串":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"空":{"docs":{},"了":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"当":{"docs":{},"前":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"频":{"docs":{},"率":{"docs":{},"是":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"频":{"docs":{},"率":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"要":{"docs":{},"+":{"1":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"键":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"请":{"docs":{},"设":{"docs":{},"置":{"docs":{},"或":{"docs":{},"插":{"docs":{},"入":{"docs":{},"值":{"docs":{},"。":{"docs":{},"当":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"达":{"docs":{},"到":{"docs":{},"其":{"docs":{},"容":{"docs":{},"量":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"应":{"docs":{},"该":{"docs":{},"在":{"docs":{},"插":{"docs":{},"入":{"docs":{},"新":{"docs":{},"项":{"docs":{},"目":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"使":{"docs":{},"最":{"docs":{},"不":{"docs":{},"经":{"docs":{},"常":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"项":{"docs":{},"目":{"docs":{},"无":{"docs":{},"效":{"docs":{},"。":{"docs":{},"在":{"docs":{},"此":{"docs":{},"问":{"docs":{},"题":{"docs":{},"中":{"docs":{},"，":{"docs":{},"当":{"docs":{},"存":{"docs":{},"在":{"docs":{},"平":{"docs":{},"局":{"docs":{},"（":{"docs":{},"即":{"docs":{},"两":{"docs":{},"个":{"docs":{},"或":{"docs":{},"更":{"docs":{},"多":{"docs":{},"个":{"docs":{},"键":{"docs":{},"具":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"使":{"docs":{},"用":{"docs":{},"频":{"docs":{},"率":{"docs":{},"）":{"docs":{},"时":{"docs":{},"，":{"docs":{},"最":{"docs":{},"近":{"docs":{},"最":{"docs":{},"少":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"键":{"docs":{},"将":{"docs":{},"被":{"docs":{},"去":{"docs":{},"除":{"docs":{},"。":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"中":{"docs":{},"，":{"docs":{},"则":{"docs":{},"获":{"docs":{},"取":{"docs":{},"键":{"docs":{},"的":{"docs":{},"值":{"docs":{},"（":{"docs":{},"总":{"docs":{},"是":{"docs":{},"正":{"docs":{},"数":{"docs":{},"）":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"总":{"docs":{},"数":{"docs":{},"不":{"docs":{},"是":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669}}}}}}}},"前":{"docs":{},"驱":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"将":{"docs":{},"它":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"重":{"docs":{},"新":{"docs":{},"设":{"docs":{},"为":{"docs":{},"空":{"docs":{},"。":{"docs":{},"倒":{"docs":{},"序":{"docs":{},"输":{"docs":{},"出":{"docs":{},"从":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"到":{"docs":{},"该":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"节":{"docs":{},"点":{"docs":{},"这":{"docs":{},"条":{"docs":{},"路":{"docs":{},"径":{"docs":{},"上":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"更":{"docs":{},"新":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"。":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"树":{"docs":{},"的":{"docs":{},"形":{"docs":{},"状":{"docs":{},"）":{"docs":{},"。":{"docs":{},"。":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"更":{"docs":{},"新":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"。":{"docs":{"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"空":{"docs":{},"，":{"docs":{},"将":{"docs":{},"它":{"docs":{},"的":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"更":{"docs":{},"新":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"。":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}}}}}}}}}}}}}}}}},"输":{"docs":{},"出":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"更":{"docs":{},"新":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"。":{"docs":{"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"在":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"在":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"下":{"docs":{},"的":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"其":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"作":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}}}}}}}}}}}}},"输":{"docs":{},"出":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"将":{"docs":{},"其":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"作":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"经":{"docs":{},"常":{"docs":{},"被":{"docs":{},"修":{"docs":{},"改":{"docs":{},"（":{"docs":{},"插":{"docs":{},"入":{"docs":{},"/":{"docs":{},"删":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{},"）":{"docs":{},"并":{"docs":{},"且":{"docs":{},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"地":{"docs":{},"查":{"docs":{},"找":{"docs":{},"第":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"够":{"docs":{},"修":{"docs":{},"改":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"增":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"段":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"c":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{},"设":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"，":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"直":{"docs":{},"接":{"docs":{},"相":{"docs":{},"连":{"docs":{},"的":{"docs":{},"房":{"docs":{},"子":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"天":{"docs":{},"晚":{"docs":{},"上":{"docs":{},"被":{"docs":{},"打":{"docs":{},"劫":{"docs":{},"，":{"docs":{},"房":{"docs":{},"屋":{"docs":{},"将":{"docs":{},"自":{"docs":{},"动":{"docs":{},"报":{"docs":{},"警":{"docs":{},"。":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"小":{"docs":{},"数":{"docs":{},"部":{"docs":{},"分":{"docs":{},"为":{"docs":{},"循":{"docs":{},"环":{"docs":{},"小":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"循":{"docs":{},"环":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"括":{"docs":{},"在":{"docs":{},"括":{"docs":{},"号":{"docs":{},"内":{"docs":{},"。":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}},"堆":{"docs":{},"中":{"docs":{},"有":{"docs":{"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857}}}}},"所":{"docs":{},"有":{"docs":{},"方":{"docs":{},"块":{"docs":{},"都":{"docs":{},"放":{"docs":{},"满":{"docs":{},"棋":{"docs":{},"子":{"docs":{},"（":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"）":{"docs":{},"，":{"docs":{},"游":{"docs":{},"戏":{"docs":{},"也":{"docs":{},"会":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}},"游":{"docs":{},"戏":{"docs":{},"存":{"docs":{},"在":{"docs":{},"获":{"docs":{},"胜":{"docs":{},"者":{"docs":{},"（":{"docs":{},"a":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}},"多":{"docs":{},"次":{"docs":{},"调":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"你":{"docs":{},"将":{"docs":{},"如":{"docs":{},"何":{"docs":{},"优":{"docs":{},"化":{"docs":{},"你":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"？":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"：":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},",":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613}}}}}}},"何":{"docs":{},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"？":{"docs":{},"如":{"docs":{},"果":{"docs":{},"从":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"读":{"docs":{},"出":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"值":{"docs":{},"排":{"docs":{},"序":{"docs":{},"之":{"docs":{},"后":{"docs":{},"位":{"docs":{},"于":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"从":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"读":{"docs":{},"出":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"值":{"docs":{},"排":{"docs":{},"序":{"docs":{},"之":{"docs":{},"后":{"docs":{},"中":{"docs":{},"间":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"值":{"docs":{},"。":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"小":{"docs":{},"写":{"docs":{},"英":{"docs":{},"文":{"docs":{},"字":{"docs":{},"母":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}},"中":{"docs":{},"找":{"docs":{},"出":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}}}},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}}}}}}}}},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}}}},"，":{"docs":{},"在":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}}}}},"典":{"docs":{},"中":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"。":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}},"母":{"docs":{},"异":{"docs":{},"位":{"docs":{},"词":{"docs":{},"指":{"docs":{},"字":{"docs":{},"母":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"但":{"docs":{},"排":{"docs":{},"列":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":3.3527508090614884},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"：":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"。":{"docs":{},"你":{"docs":{},"将":{"docs":{},"使":{"docs":{},"用":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"。":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"称":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":5.0078740157480315}}}}}}},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"转":{"docs":{},"化":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"长":{"docs":{},"上":{"docs":{},"升":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"本":{"docs":{},"题":{"docs":{},"的":{"docs":{},"难":{"docs":{},"点":{"docs":{},"就":{"docs":{},"在":{"docs":{},"于":{"docs":{},"选":{"docs":{},"择":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"策":{"docs":{},"略":{"docs":{},"。":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"按":{"docs":{},"照":{"docs":{},"高":{"docs":{},"度":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"高":{"docs":{},"度":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"宽":{"docs":{},"度":{"docs":{},"降":{"docs":{},"序":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"高":{"docs":{},"度":{"docs":{},"的":{"docs":{},"信":{"docs":{},"封":{"docs":{},"最":{"docs":{},"多":{"docs":{},"只":{"docs":{},"能":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"被":{"docs":{},"选":{"docs":{},"中":{"docs":{},"，":{"docs":{},"所":{"docs":{},"选":{"docs":{},"中":{"docs":{},"的":{"docs":{},"信":{"docs":{},"封":{"docs":{},"是":{"docs":{},"能":{"docs":{},"够":{"docs":{},"容":{"docs":{},"纳":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"被":{"docs":{},"选":{"docs":{},"中":{"docs":{},"的":{"docs":{},"信":{"docs":{},"封":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"宽":{"docs":{},"度":{"docs":{},"的":{"docs":{},"信":{"docs":{},"封":{"docs":{},"。":{"docs":{},"按":{"docs":{},"照":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"算":{"docs":{},"法":{"docs":{},"从":{"docs":{},"左":{"docs":{},"至":{"docs":{},"右":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"策":{"docs":{},"略":{"docs":{},"更":{"docs":{},"加":{"docs":{},"易":{"docs":{},"于":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"上":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"做":{"docs":{},"如":{"docs":{},"下":{"docs":{},"操":{"docs":{},"作":{"docs":{},"：":{"docs":{},"若":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"正":{"docs":{},"数":{"docs":{},"但":{"docs":{},"与":{"docs":{},"索":{"docs":{},"引":{"docs":{},"位":{"docs":{},"不":{"docs":{},"对":{"docs":{},"应":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"其":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"将":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"与":{"docs":{},"其":{"docs":{},"对":{"docs":{},"应":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"行":{"docs":{},"交":{"docs":{},"换":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"交":{"docs":{},"换":{"docs":{},"过":{"docs":{},"来":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"还":{"docs":{},"满":{"docs":{},"足":{"docs":{},"上":{"docs":{},"述":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"继":{"docs":{},"续":{"docs":{},"进":{"docs":{},"行":{"docs":{},"上":{"docs":{},"述":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"交":{"docs":{},"换":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"上":{"docs":{},"述":{"docs":{},"算":{"docs":{},"法":{"docs":{},"第":{"2":{"docs":{},"a":{"docs":{},"步":{"docs":{},"中":{"docs":{},"的":{"docs":{},"「":{"docs":{},"输":{"docs":{},"出":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"」":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"2":{"docs":{},"b":{"docs":{},"步":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}},"应":{"docs":{},"的":{"docs":{},"交":{"docs":{},"易":{"docs":{},"状":{"docs":{},"态":{"docs":{},"为":{"docs":{},":":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}}}}}}}},"数":{"docs":{},"字":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}},"：":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364}}}},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"不":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}}},"寻":{"docs":{},"找":{"docs":{},"两":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":5.005102040816326}}}}}}}}}}}},"旋":{"docs":{},"转":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{"./":{"ref":"./","tf":0.013745704467353952},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":3.355311355311355},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":5.014925373134329},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":5.014925373134329},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":3.355311355311355}}}}}}}}}}}}},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":5.006578947368421},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":5.006578947368421}}}}}}},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":5.007936507936508}}}}}}},"快":{"docs":{},"乐":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":5.009433962264151}}}}},"恢":{"docs":{},"复":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":5.005434782608695}}}}}}}}},"扁":{"docs":{},"平":{"docs":{},"化":{"docs":{},"多":{"docs":{},"级":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":5.0060975609756095}}}}}}}},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"使":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"点":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"单":{"docs":{},"级":{"docs":{},"双":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"。":{"docs":{},"您":{"docs":{},"将":{"docs":{},"获":{"docs":{},"得":{"docs":{},"列":{"docs":{},"表":{"docs":{},"第":{"docs":{},"一":{"docs":{},"级":{"docs":{},"的":{"docs":{},"头":{"docs":{},"部":{"docs":{},"。":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"打":{"docs":{},"家":{"docs":{},"劫":{"docs":{},"舍":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":3.3402298850574708}}}}},"印":{"docs":{},"从":{"1":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"n":{"docs":{},"位":{"docs":{},"数":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}},"docs":{}}}},"扰":{"docs":{},"乱":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":5.005181347150259}}}}}}},"找":{"docs":{},"出":{"docs":{},"井":{"docs":{},"字":{"docs":{},"棋":{"docs":{},"的":{"docs":{},"获":{"docs":{},"胜":{"docs":{},"者":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":5.005025125628141}}}}}}}}},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"那":{"docs":{},"两":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}}}}}}}}}}}}},"到":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"母":{"docs":{},"异":{"docs":{},"位":{"docs":{},"词":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":5.006711409395973}}}}}}}}}}}}},"该":{"docs":{},"树":{"docs":{},"中":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"定":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"。":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"被":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}},"以":{"docs":{},"i":{"docs":{},"为":{"docs":{},"中":{"docs":{},"心":{"docs":{},"的":{"docs":{},"回":{"docs":{},"文":{"docs":{},"串":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"半":{"docs":{},"径":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}}}}}}}}}}}}},"和":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}}}},"规":{"docs":{},"律":{"docs":{},"：":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}},"把":{"docs":{},"数":{"docs":{},"字":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"成":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":5.013888888888889}}}}}}}}},"组":{"docs":{},"排":{"docs":{},"成":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":5.019607843137255}}}}}}}}}}},"搜":{"docs":{},"索":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}},"二":{"docs":{},"维":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":3.343434343434343},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936}}}}}}}},"数":{"docs":{},"字":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"某":{"docs":{},"一":{"docs":{},"位":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":5.035714285714286}}}}}}}}}}},"范":{"docs":{},"围":{"docs":{},"按":{"docs":{},"位":{"docs":{},"与":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":5.029411764705882}}}}}}},"以":{"0":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"1":{"0":{"1":{"1":{"1":{"2":{"1":{"3":{"1":{"4":{"1":{"5":{"docs":{},"…":{"docs":{},"的":{"docs":{},"格":{"docs":{},"式":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"。":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"，":{"docs":{},"第":{"5":{"docs":{},"位":{"docs":{},"（":{"docs":{},"从":{"docs":{},"下":{"docs":{},"标":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},"计":{"docs":{},"数":{"docs":{},"）":{"docs":{},"是":{"5":{"docs":{},"，":{"docs":{},"第":{"1":{"3":{"docs":{},"位":{"docs":{},"是":{"1":{"docs":{},"，":{"docs":{},"第":{"1":{"9":{"docs":{},"位":{"docs":{},"是":{"4":{"docs":{},"，":{"docs":{},"等":{"docs":{},"等":{"docs":{},"。":{"docs":{"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571}}}}}}},"docs":{}}}},"docs":{}},"docs":{}}}},"docs":{}}}},"docs":{}},"docs":{}}}},"docs":{}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":5.008196721311475}}}}}}}}},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":5.010416666666667}}}}}}}}}}}}},"的":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"最":{"docs":{},"大":{"docs":{},"元":{"docs":{},"素":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":5.009803921568627}}}}}}}}},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{},"字":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":5.012820512820513}}}}}}},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"但":{"docs":{},"它":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"止":{"docs":{},"重":{"docs":{},"复":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"是":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}}}}}},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}}}}}}}}},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{},"的":{"docs":{},"一":{"docs":{},"半":{"docs":{},"，":{"docs":{},"请":{"docs":{},"找":{"docs":{},"出":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"某":{"docs":{},"些":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"有":{"docs":{},"几":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"。":{"docs":{},"也":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"重":{"docs":{},"复":{"docs":{},"几":{"docs":{},"次":{"docs":{},"。":{"docs":{},"请":{"docs":{},"找":{"docs":{},"出":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"修":{"docs":{},"改":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":3.3371069182389936}}}}},"的":{"docs":{},"流":{"docs":{},"程":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}},"长":{"docs":{},"度":{"docs":{},"即":{"docs":{},"为":{"docs":{},"所":{"docs":{},"求":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}},"为":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}},"不":{"docs":{},"会":{"docs":{},"超":{"docs":{},"过":{"1":{"0":{"docs":{},",":{"0":{"0":{"0":{"docs":{},"。":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"。":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}},"仅":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}},"长":{"docs":{},"度":{"docs":{"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}}}},"论":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}}},"值":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"次":{"docs":{},"方":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}},"旋":{"docs":{},"转":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":5.016949152542373}}}}}}},"无":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"最":{"docs":{},"长":{"docs":{},"子":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":5.008}}}}}}}}}}},"法":{"docs":{},"匹":{"docs":{},"配":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.011904761904761904},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}},"最":{"docs":{},"佳":{"docs":{},"买":{"docs":{},"卖":{"docs":{},"股":{"docs":{},"票":{"docs":{},"时":{"docs":{},"机":{"docs":{},"含":{"docs":{},"冷":{"docs":{},"冻":{"docs":{},"期":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":5.02}}}}}}}}}}}}},"大":{"docs":{},"矩":{"docs":{},"形":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":5.008928571428571}}}}},"小":{"docs":{},"的":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":5.016666666666667}}}}}},"覆":{"docs":{},"盖":{"docs":{},"子":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":5.012658227848101}}}}}}},"长":{"docs":{},"上":{"docs":{},"升":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":5.006060606060606}}}}}}},"不":{"docs":{},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"子":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":5.011111111111111}}}}}}}}}}}}},"公":{"docs":{},"共":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":5.0046082949308754}}}}}}},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":5.00531914893617}}}}}},"特":{"docs":{},"殊":{"docs":{},"序":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":3.3405797101449273}}}}}},"的":{"docs":{},"上":{"docs":{},"升":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}},"子":{"docs":{},"串":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008}}}}},"多":{"docs":{},"信":{"docs":{},"封":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"为":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}}}}},"会":{"docs":{},"对":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}},"后":{"docs":{},"，":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}},"终":{"docs":{},"都":{"docs":{},"会":{"docs":{},"被":{"docs":{},"填":{"docs":{},"充":{"docs":{},"为":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}}}}}},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"最":{"docs":{},"右":{"docs":{},"边":{"docs":{},"。":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}}}}}}}}}}}}}}},"有":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613}},"序":{"docs":{},"链":{"docs":{},"表":{"docs":{},"转":{"docs":{},"换":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":5.006369426751593}}}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"乘":{"docs":{},"积":{"docs":{"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806}}}}}},"些":{"docs":{},"房":{"docs":{},"间":{"docs":{},"由":{"docs":{},"恶":{"docs":{},"魔":{"docs":{},"守":{"docs":{},"卫":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"在":{"docs":{},"进":{"docs":{},"入":{"docs":{},"这":{"docs":{},"些":{"docs":{},"房":{"docs":{},"间":{"docs":{},"时":{"docs":{},"会":{"docs":{},"失":{"docs":{},"去":{"docs":{},"健":{"docs":{},"康":{"docs":{},"点":{"docs":{},"数":{"docs":{},"（":{"docs":{},"若":{"docs":{},"房":{"docs":{},"间":{"docs":{},"里":{"docs":{},"的":{"docs":{},"值":{"docs":{},"为":{"docs":{},"负":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"表":{"docs":{},"示":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"将":{"docs":{},"损":{"docs":{},"失":{"docs":{},"健":{"docs":{},"康":{"docs":{},"点":{"docs":{},"数":{"docs":{},"）":{"docs":{},"；":{"docs":{},"其":{"docs":{},"他":{"docs":{},"房":{"docs":{},"间":{"docs":{},"要":{"docs":{},"么":{"docs":{},"是":{"docs":{},"空":{"docs":{},"的":{"docs":{},"（":{"docs":{},"房":{"docs":{},"间":{"docs":{},"里":{"docs":{},"的":{"docs":{},"值":{"docs":{},"为":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"效":{"docs":{},"（":{"docs":{},"遵":{"docs":{},"循":{"docs":{},"井":{"docs":{},"字":{"docs":{},"棋":{"docs":{},"规":{"docs":{},"则":{"docs":{},"）":{"docs":{},"，":{"docs":{},"网":{"docs":{},"格":{"docs":{},"最":{"docs":{},"初":{"docs":{},"是":{"docs":{},"空":{"docs":{},"的":{"docs":{},"，":{"docs":{},"a":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"书":{"docs":{},"主":{"docs":{},"要":{"docs":{},"记":{"docs":{},"录":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"我":{"docs":{},"在":{"docs":{},"刷":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"碰":{"docs":{},"到":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"个":{"docs":{},"人":{"docs":{},"认":{"docs":{},"为":{"docs":{},"比":{"docs":{},"较":{"docs":{},"经":{"docs":{},"典":{"docs":{},"题":{"docs":{},"目":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"和":{"docs":{},"题":{"docs":{},"解":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"题":{"docs":{},"中":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"高":{"docs":{},"度":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"是":{"docs":{},"指":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}},"棵":{"docs":{},"高":{"docs":{},"度":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"：":{"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"：":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"用":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"t":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"用":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"当":{"docs":{},"前":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"内":{"docs":{},"各":{"docs":{},"字":{"docs":{},"符":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"变":{"docs":{},"量":{"docs":{},"表":{"docs":{},"示":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"等":{"docs":{},"于":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"数":{"docs":{},"量":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"显":{"docs":{},"然":{"docs":{},"当":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"等":{"docs":{},"于":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"数":{"docs":{},"量":{"docs":{},"时":{"docs":{},"，":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"是":{"docs":{},"符":{"docs":{},"合":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"。":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"找":{"docs":{},"和":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"k":{"docs":{},"对":{"docs":{},"数":{"docs":{},"字":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":5.005681818181818}}}}}}}}}}}},"栈":{"docs":{},"的":{"docs":{},"压":{"docs":{},"入":{"docs":{},"、":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"序":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":5.012195121951219}}}}}}}}}}},"树":{"docs":{},"的":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":5.0071942446043165}}}}}},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{},"小":{"docs":{},"于":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}}}}}},"格":{"docs":{},"雷":{"docs":{},"编":{"docs":{},"码":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":5.006666666666667}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"数":{"docs":{},"字":{"docs":{},"系":{"docs":{},"统":{"docs":{},"，":{"docs":{},"在":{"docs":{},"该":{"docs":{},"系":{"docs":{},"统":{"docs":{},"中":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"仅":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"数":{"docs":{},"的":{"docs":{},"差":{"docs":{},"异":{"docs":{},"。":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"正":{"docs":{},"则":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{"./":{"ref":"./","tf":0.006872852233676976},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":5.005464480874317},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":5.005464480874317}}}}}}}}},"求":{"docs":{},"根":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{},"字":{"docs":{},"之":{"docs":{},"和":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":5.00561797752809}}}}}}}}}}}}},"游":{"docs":{},"戏":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":3.3619047619047615}},"：":{"docs":{},"桌":{"docs":{},"子":{"docs":{},"上":{"docs":{},"有":{"docs":{},"一":{"docs":{},"堆":{"docs":{},"石":{"docs":{},"头":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"你":{"docs":{},"们":{"docs":{},"轮":{"docs":{},"流":{"docs":{},"拿":{"docs":{},"掉":{"docs":{"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"束":{"docs":{},"后":{"docs":{},"，":{"docs":{},"棋":{"docs":{},"子":{"docs":{},"无":{"docs":{},"法":{"docs":{},"再":{"docs":{},"进":{"docs":{},"行":{"docs":{},"任":{"docs":{},"何":{"docs":{},"移":{"docs":{},"动":{"docs":{},"。":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}},"环":{"docs":{},"形":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":3.3399122807017543}}}}}},"用":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"队":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":5.002450980392157}}}}}}}}},"二":{"docs":{},"分":{"docs":{},"法":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}}}}}}},"迭":{"docs":{},"代":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"果":{"docs":{},"反":{"docs":{},"转":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"自":{"docs":{},"底":{"docs":{},"向":{"docs":{},"上":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"整":{"docs":{},"棵":{"docs":{},"树":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"包":{"docs":{},"含":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"值":{"docs":{},"为":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"加":{"docs":{},"上":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"自":{"docs":{},"身":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"值":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"值":{"docs":{},"为":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"包":{"docs":{},"含":{"docs":{},"自":{"docs":{},"身":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"值":{"docs":{},"之":{"docs":{},"和":{"docs":{},"。":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"户":{"1":{"docs":{},"关":{"docs":{},"注":{"docs":{},"了":{"docs":{},"用":{"docs":{},"户":{"2":{"docs":{},".":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},"docs":{}}}}}},"发":{"docs":{},"送":{"docs":{},"了":{"docs":{},"一":{"docs":{},"条":{"docs":{},"新":{"docs":{},"推":{"docs":{},"文":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}},"取":{"docs":{},"消":{"docs":{},"关":{"docs":{},"注":{"docs":{},"了":{"docs":{},"用":{"docs":{},"户":{"2":{"docs":{},".":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},"docs":{}}}}}}}},"的":{"docs":{},"获":{"docs":{},"取":{"docs":{},"推":{"docs":{},"文":{"docs":{},"应":{"docs":{},"当":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"d":{"docs":{},"为":{"5":{"docs":{},"的":{"docs":{},"推":{"docs":{},"文":{"docs":{},".":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0072992700729927005}}}}}}},"docs":{}}}}}},"两":{"docs":{},"个":{"docs":{},"推":{"docs":{},"文":{"docs":{},"，":{"docs":{},"i":{"docs":{},"d":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"发":{"docs":{},"送":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"推":{"docs":{},"文":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}},"docs":{}},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"找":{"docs":{},"到":{"docs":{},"循":{"docs":{},"环":{"docs":{},"的":{"docs":{},"入":{"docs":{},"口":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"docs":{},"来":{"docs":{},"代":{"docs":{},"替":{"docs":{},"打":{"docs":{},"印":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}}}}},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"队":{"docs":{},"列":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}},"队":{"docs":{},"列":{"docs":{},"实":{"docs":{},"现":{"docs":{},"栈":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}},"目":{"docs":{},"前":{"docs":{},"只":{"docs":{},"有":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"语":{"docs":{},"言":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"后":{"docs":{},"续":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"会":{"docs":{},"加":{"docs":{},"入":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"以":{"docs":{},"及":{"docs":{},"g":{"docs":{},"o":{"docs":{},"语":{"docs":{},"言":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"鉴":{"docs":{},"于":{"docs":{},"个":{"docs":{},"人":{"docs":{},"有":{"docs":{},"限":{"docs":{},"的":{"docs":{},"精":{"docs":{},"力":{"docs":{},"和":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"会":{"docs":{},"实":{"docs":{},"施":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"章":{"docs":{},"节":{"docs":{},"的":{"docs":{},"编":{"docs":{},"排":{"docs":{},"形":{"docs":{},"式":{"docs":{},"参":{"docs":{},"考":{"docs":{},"了":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"题":{"docs":{},"型":{"docs":{},"分":{"docs":{},"类":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"以":{"docs":{},"及":{"docs":{},"链":{"docs":{},"表":{"docs":{},"等":{"docs":{},"。":{"docs":{},"题":{"docs":{},"目":{"docs":{},"以":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"难":{"docs":{},"度":{"docs":{},"居":{"docs":{},"多":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"含":{"docs":{},"有":{"docs":{},"少":{"docs":{},"量":{"docs":{},"的":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"题":{"docs":{},"以":{"docs":{},"及":{"docs":{},"极":{"docs":{},"少":{"docs":{},"量":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"题":{"docs":{},"。":{"docs":{},"题":{"docs":{},"目":{"docs":{},"没":{"docs":{},"有":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"纯":{"docs":{},"粹":{"docs":{},"按":{"docs":{},"照":{"docs":{},"了":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"做":{"docs":{},"题":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"来":{"docs":{},"编":{"docs":{},"排":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"章":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"《":{"docs":{},"剑":{"docs":{},"指":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"》":{"docs":{},"上":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"有":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"题":{"docs":{},"目":{"docs":{},"是":{"docs":{},"与":{"docs":{},"之":{"docs":{},"前":{"docs":{},"章":{"docs":{},"节":{"docs":{},"重":{"docs":{},"合":{"docs":{},"的":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"性":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}}}}},"编":{"docs":{},"辑":{"docs":{},"距":{"docs":{},"离":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":5.009090909090909}}}}},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"高":{"docs":{},"效":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"来":{"docs":{},"搜":{"docs":{},"索":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"计":{"docs":{},"算":{"docs":{},"确":{"docs":{},"保":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"能":{"docs":{},"够":{"docs":{},"拯":{"docs":{},"救":{"docs":{},"到":{"docs":{},"公":{"docs":{},"主":{"docs":{},"所":{"docs":{},"需":{"docs":{},"的":{"docs":{},"最":{"docs":{},"低":{"docs":{},"初":{"docs":{},"始":{"docs":{},"健":{"docs":{},"康":{"docs":{},"点":{"docs":{},"数":{"docs":{},"。":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"找":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}}}},"，":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"你":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"给":{"docs":{},"定":{"docs":{},"石":{"docs":{},"头":{"docs":{},"数":{"docs":{},"量":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"赢":{"docs":{},"得":{"docs":{},"游":{"docs":{},"戏":{"docs":{},"。":{"docs":{"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"无":{"docs":{},"符":{"docs":{},"号":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"其":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"中":{"docs":{},"数":{"docs":{},"字":{"docs":{},"位":{"docs":{},"数":{"docs":{},"为":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"“":{"docs":{},"快":{"docs":{},"乐":{"docs":{},"数":{"docs":{},"”":{"docs":{},"。":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}},"段":{"docs":{},"程":{"docs":{},"序":{"docs":{},"来":{"docs":{},"查":{"docs":{},"找":{"docs":{},"第":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}}}}}}}}}}}},"缺":{"docs":{},"失":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"正":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":5.02}}}}}}}}}},"被":{"docs":{},"围":{"docs":{},"绕":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":5.008}}},"间":{"docs":{},"不":{"docs":{},"会":{"docs":{},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{},"边":{"docs":{},"界":{"docs":{},"上":{"docs":{},"，":{"docs":{},"换":{"docs":{},"句":{"docs":{},"话":{"docs":{},"说":{"docs":{},"，":{"docs":{},"任":{"docs":{},"何":{"docs":{},"边":{"docs":{},"界":{"docs":{},"上":{"docs":{},"的":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"复":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}},"解":{"docs":{},"码":{"docs":{},"方":{"docs":{},"法":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":5.013333333333334}}}}},"释":{"docs":{},":":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.021739130434782608},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.011235955056179775},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.023809523809523808},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.02185792349726776},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.030303030303030304},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.01818181818181818},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.024},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.014598540145985401},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.02027027027027027},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.03508771929824561},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.022727272727272728},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.024793388429752067},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.018691588785046728},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.02666666666666667},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.013793103448275862},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.017045454545454544},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.023809523809523808},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.013333333333333334},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.03333333333333333},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.02185792349726776}}},"：":{"1":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}},"3":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}},"6":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}},"7":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}},"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"环":{"docs":{},"，":{"docs":{},"其":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"连":{"docs":{},"接":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}}},"二":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"环":{"docs":{},"。":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}}}}},"给":{"docs":{},"定":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"如":{"docs":{},"图":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}}},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"为":{"docs":{},"空":{"docs":{},"（":{"docs":{},"空":{"docs":{},"指":{"docs":{},"针":{"docs":{},"）":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"返":{"docs":{},"回":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"没":{"docs":{},"有":{"docs":{},"公":{"docs":{},"共":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}},"最":{"docs":{},"长":{"docs":{},"公":{"docs":{},"共":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.009216589861751152}}}}}}}}}},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}},"b":{"docs":{},"\"":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}},"游":{"docs":{},"戏":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"串":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.008064516129032258}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"按":{"docs":{},"以":{"docs":{},"下":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"执":{"docs":{},"行":{"docs":{},"：":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}}}}}}}}}}}}},"法":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.028985507246376812},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.008658008658008658}}}},"设":{"docs":{},"计":{"docs":{},"推":{"docs":{},"特":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":5.0036496350364965}}}},"并":{"docs":{},"实":{"docs":{},"现":{"docs":{},"最":{"docs":{},"不":{"docs":{},"经":{"docs":{},"常":{"docs":{},"使":{"docs":{},"用":{"docs":{},"（":{"docs":{},"l":{"docs":{},"f":{"docs":{},"u":{"docs":{},"）":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"它":{"docs":{},"应":{"docs":{},"该":{"docs":{},"支":{"docs":{},"持":{"docs":{},"以":{"docs":{},"下":{"docs":{},"操":{"docs":{},"作":{"docs":{},"：":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"来":{"docs":{},"计":{"docs":{},"算":{"docs":{},"你":{"docs":{},"所":{"docs":{},"能":{"docs":{},"获":{"docs":{},"取":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{},"。":{"docs":{},"你":{"docs":{},"最":{"docs":{},"多":{"docs":{},"可":{"docs":{},"以":{"docs":{},"完":{"docs":{},"成":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}}}}}},"可":{"docs":{},"以":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"地":{"docs":{},"完":{"docs":{},"成":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"交":{"docs":{},"易":{"docs":{},"（":{"docs":{},"多":{"docs":{},"次":{"docs":{},"买":{"docs":{},"卖":{"docs":{},"一":{"docs":{},"支":{"docs":{},"股":{"docs":{},"票":{"docs":{},"）":{"docs":{},"。":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"出":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{},"。":{"docs":{},"在":{"docs":{},"满":{"docs":{},"足":{"docs":{},"以":{"docs":{},"下":{"docs":{},"约":{"docs":{},"束":{"docs":{},"条":{"docs":{},"件":{"docs":{},"下":{"docs":{},"，":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"地":{"docs":{},"完":{"docs":{},"成":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"交":{"docs":{},"易":{"docs":{},"（":{"docs":{},"多":{"docs":{},"次":{"docs":{},"买":{"docs":{},"卖":{"docs":{},"一":{"docs":{},"支":{"docs":{},"股":{"docs":{},"票":{"docs":{},"）":{"docs":{},":":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"简":{"docs":{},"化":{"docs":{},"版":{"docs":{},"的":{"docs":{},"推":{"docs":{},"特":{"docs":{},"(":{"docs":{},"t":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"用":{"docs":{},"户":{"docs":{},"实":{"docs":{},"现":{"docs":{},"发":{"docs":{},"送":{"docs":{},"推":{"docs":{},"文":{"docs":{},"，":{"docs":{},"关":{"docs":{},"注":{"docs":{},"/":{"docs":{},"取":{"docs":{},"消":{"docs":{},"关":{"docs":{},"注":{"docs":{},"其":{"docs":{},"他":{"docs":{},"用":{"docs":{},"户":{"docs":{},"，":{"docs":{},"能":{"docs":{},"够":{"docs":{},"看":{"docs":{},"见":{"docs":{},"关":{"docs":{},"注":{"docs":{},"人":{"docs":{},"（":{"docs":{},"包":{"docs":{},"括":{"docs":{},"自":{"docs":{},"己":{"docs":{},"）":{"docs":{},"的":{"docs":{},"最":{"docs":{},"近":{"docs":{},"十":{"docs":{},"条":{"docs":{},"推":{"docs":{},"文":{"docs":{},"。":{"docs":{},"你":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"需":{"docs":{},"要":{"docs":{},"支":{"docs":{},"持":{"docs":{},"以":{"docs":{},"下":{"docs":{},"的":{"docs":{},"几":{"docs":{},"个":{"docs":{},"功":{"docs":{},"能":{"docs":{},"：":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"支":{"docs":{},"持":{"docs":{},"以":{"docs":{},"下":{"docs":{},"两":{"docs":{},"种":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"：":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}},"置":{"docs":{},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"从":{"docs":{},"a":{"1":{"docs":{},"出":{"docs":{},"发":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"和":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"在":{"docs":{},"a":{"3":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"以":{"docs":{},"上":{"docs":{},"公":{"docs":{},"式":{"docs":{},"（":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"在":{"docs":{},"与":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"前":{"docs":{},"走":{"docs":{},"过":{"docs":{},"了":{"docs":{},"k":{"docs":{},"圈":{"docs":{},"）":{"docs":{},"。":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"从":{"docs":{},"a":{"1":{"docs":{},"出":{"docs":{},"发":{"docs":{},"，":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"从":{"docs":{},"a":{"3":{"docs":{},"出":{"docs":{},"发":{"docs":{},"，":{"docs":{},"经":{"docs":{},"过":{"docs":{},"a":{"docs":{},"步":{"docs":{},"以":{"docs":{},"后":{"docs":{},"，":{"docs":{},"两":{"docs":{},"点":{"docs":{},"将":{"docs":{},"在":{"docs":{},"a":{"2":{"docs":{},"（":{"docs":{},"环":{"docs":{},"的":{"docs":{},"入":{"docs":{},"口":{"docs":{},"）":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"。":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}},"d":{"docs":{},"p":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},"表":{"docs":{},"示":{"docs":{},"范":{"docs":{},"围":{"docs":{},"为":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}}}},"docs":{}}}}}}}}}}}}},"超":{"docs":{},"级":{"docs":{},"丑":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":5.013888888888889}},"是":{"docs":{},"指":{"docs":{},"其":{"docs":{},"所":{"docs":{},"有":{"docs":{},"质":{"docs":{},"因":{"docs":{},"数":{"docs":{},"都":{"docs":{},"是":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}},"路":{"docs":{},"径":{"docs":{},"总":{"docs":{},"和":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":3.341333333333333}}}}}},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":5.010869565217392}}}}}}}},"通":{"docs":{},"配":{"docs":{},"符":{"docs":{},"匹":{"docs":{},"配":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":5.005952380952381}}}}}}},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"d":{"docs":{},"n":{"docs":{},"a":{"docs":{},"序":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":5.01}}}}}}},"子":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":5.015151515151516}}}}}}},"以":{"docs":{},"上":{"1":{"docs":{},"、":{"2":{"docs":{},"直":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"空":{"docs":{},"。":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}}}}}}}}}},"docs":{}}},"docs":{}}},"了":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}},"两":{"docs":{},"次":{"docs":{},"构":{"docs":{},"成":{"docs":{},"。":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}},")":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}}}}}}},"四":{"docs":{},"次":{"docs":{},"构":{"docs":{},"成":{"docs":{},"。":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}}}}}}},"排":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":5.0054945054945055}}}}},"新":{"docs":{},"排":{"docs":{},"列":{"docs":{},"为":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099}}}}}}},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.003436426116838488}},"中":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":5.008928571428571}}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112}}}}}},"接":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"k":{"docs":{},"o":{"docs":{},"u":{"docs":{},".":{"docs":{},"x":{"docs":{},"y":{"docs":{},"z":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":5.008333333333334}}}}}}}},"不":{"docs":{},"超":{"docs":{},"过":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}}}}}}},"阶":{"docs":{},"乘":{"docs":{},"后":{"docs":{},"的":{"docs":{},"零":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":5.011904761904762}}}}}}},"顺":{"docs":{},"时":{"docs":{},"针":{"docs":{},"打":{"docs":{},"印":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"./":{"ref":"./","tf":0.003436426116838488},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":5.015384615384615}}}}}}}}},"!":{"docs":{},"=":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.013157894736842105},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.018292682926829267},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.014652014652014652},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.019736842105263157},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.017857142857142856},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.024657534246575342},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.02040816326530612},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.016304347826086956},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.02142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.024390243902439025},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.023255813953488372},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.010752688172043012},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.025252525252525252},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.02666666666666667},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.015151515151515152},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.012254901960784314},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.013157894736842105},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.02877697841726619},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.03488372093023256}}},"s":{"docs":{},"t":{"2":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}}}}}}}},"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"2":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}}},"docs":{}}}}},"(":{"1":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406}}},"2":{"2":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}},"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.02666666666666667},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}},"4":{"docs":{},"n":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}}}},"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}},"i":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.015306122448979591},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.011320754716981131},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}},"n":{"docs":{},"t":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.014545454545454545},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.024096385542168676},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.013513513513513514},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.015544041450777202},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.022727272727272728},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.030303030303030304},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.023809523809523808},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.013333333333333334},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.008658008658008658},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.024},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.020833333333333332},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}},")":{"1":{"docs":{},"e":{"9":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}},"docs":{}}},"docs":{}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}}}}}},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}},"l":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.011320754716981131}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}},"n":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}}}}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"1":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}}}}}}},"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}}}}}}}}}}}}},"d":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},"n":{"docs":{},";":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}},"n":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.034482758620689655},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.021645021645021644},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.023255813953488372}},"u":{"docs":{},"m":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.027777777777777776},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}},"s":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}}}}}}},"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.02197802197802198},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.02197802197802198}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.012121212121212121},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.03731343283582089}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.015748031496062992}},".":{"docs":{},"v":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496}}}}},"2":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.017857142857142856}}}}}}}},"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943}},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.014388489208633094}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.014388489208633094},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338}}}}}}}}}}}}}}}}},"r":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}},"e":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}}},")":{"docs":{},";":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.016},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.005479452054794521},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.011320754716981131}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}}}}}}},"w":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}},"d":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}},"s":{"1":{"docs":{"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"2":{"docs":{},")":{"docs":{},")":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}},"docs":{}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}}}}}}},"3":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105}}}}}}}}}}}},"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.013157894736842105},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}},"u":{"docs":{},"m":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}}}}}}},"t":{"2":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}}}}}}}}},"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.017857142857142856},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338}}}}},"r":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.016483516483516484},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}},")":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.016},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01092896174863388},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01092896174863388}}}}}}}}}}},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}},"[":{"1":{"docs":{},"]":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}},"docs":{}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.020202020202020204},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.015873015873015872}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}}}}},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.012121212121212121}}}}}}}},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.01020408163265306},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353}},"i":{"docs":{},"d":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}}}}}}}}},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}},"^":{"2":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}},"docs":{}}},"a":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.014388489208633094}},"[":{"0":{"docs":{},"]":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}},"docs":{}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{},",":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},",":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}}}}}}}}}}}}}},"n":{"docs":{},"s":{"1":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}},"2":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}},"docs":{}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}}}}},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}}}}}}}}}}}}},"d":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}}}},"w":{"docs":{},",":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}},"j":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.01020408163265306},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}},"c":{"docs":{},"u":{"docs":{},"r":{"1":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}},"2":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}},"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.014652014652014652},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.012195121951219513},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.015503875968992248},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.02}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.005479452054794521},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.005479452054794521},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}},"p":{"docs":{},"r":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102}},"e":{"docs":{},"v":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}},"p":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}}}}},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}}},"!":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},")":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},")":{"docs":{},")":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}},")":{"docs":{"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.014388489208633094}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}}}}}}}},"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}}},"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}},"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576}}}}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"i":{"docs":{},"(":{"docs":{},"s":{"docs":{},",":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}}}}}}}}}}}},"p":{"docs":{},"q":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}}}}}}}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},")":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},";":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}}},"未":{"docs":{},"找":{"docs":{},"到":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}},"缓":{"docs":{},"存":{"docs":{},"容":{"docs":{},"量":{"docs":{},")":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}},"p":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.005479452054794521}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.005479452054794521},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.014285714285714285}}}}}}}}},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364}}}}}}}}}}}}}},")":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}},"o":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.020833333333333332}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}}}}}}}}}}}}},"k":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}},")":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}},"g":{"docs":{},"a":{"docs":{},"p":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}}}},"b":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"[":{"docs":{},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"y":{"docs":{},"]":{"docs":{},".":{"docs":{},"x":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}}}}}}}}},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},")":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}}}}}}}}}}}}}}},"docs":{}},"或":{"docs":{},"者":{"docs":{},"子":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}}}}}}},"删":{"docs":{},"除":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.02727272727272727}}}},"将":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.03636363636363636}}},"插":{"docs":{},"入":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}},"股":{"docs":{},"票":{"docs":{},"价":{"docs":{},"格":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.043795620437956206}}}}}},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}},"]":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}}}}},"n":{"docs":{},"]":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}}}}},"(":{"8":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}}},"9":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}}},"docs":{},"n":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.021645021645021644},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}},"即":{"docs":{},"冷":{"docs":{},"冻":{"docs":{},"期":{"docs":{},"为":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}}}}},"上":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"符":{"docs":{},"号":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613}}}}}}},"推":{"docs":{},"文":{"docs":{},"i":{"docs":{},"d":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}},"用":{"docs":{},"户":{"docs":{},"i":{"docs":{},"d":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}},"u":{"1":{"docs":{},",":{"docs":{},"v":{"1":{"docs":{},")":{"docs":{},",":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}},"docs":{}}}},"2":{"docs":{},",":{"docs":{},"v":{"2":{"docs":{},")":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}},"docs":{}}}},"docs":{},",":{"docs":{},"v":{"docs":{},")":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"来":{"docs":{},"自":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}}}}}}}}}}}},"k":{"docs":{},",":{"docs":{},"v":{"docs":{},"k":{"docs":{},")":{"docs":{},"。":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}}}}}},"~":{"docs":{},"p":{"docs":{},"o":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}},"\"":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}},"高":{"docs":{},"位":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}}},"q":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.014705882352941176}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}}}}},"docs":{}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}}}}}},"+":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.013157894736842105},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.012121212121212121},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.023809523809523808},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.0196078431372549},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.016666666666666666},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.025510204081632654},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.017857142857142856},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.04905660377358491},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.06896551724137931},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.03932584269662921},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.016},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.011904761904761904},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.03723404255319149},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.07834101382488479},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01092896174863388},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.01818181818181818},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.024096385542168676},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.039473684210526314},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.025906735751295335},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.10606060606060606},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.017857142857142856},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.02197802197802198},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.019230769230769232},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.01935483870967742},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.041379310344827586},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.04716981132075472},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.03896103896103896},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.011904761904761904},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.046511627906976744},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0392156862745098},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01092896174863388},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.020833333333333332},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.013157894736842105},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},"=":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.023255813953488372}}}},":":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.02857142857142857},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.019417475728155338},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.021739130434782608},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}},"=":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.08552631578947369},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.04395604395604396},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.05454545454545454},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.04032258064516129},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.0975609756097561},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.05970149253731343},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.08571428571428572},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.047619047619047616},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.05434782608695652},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.049019607843137254},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.1},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.08673469387755102},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.0975609756097561},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.13186813186813187},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.09210526315789473},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.04477611940298507},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.07777777777777778},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.07643312101910828},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.09774436090225563},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.05825242718446602},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.06666666666666667},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.03571428571428571},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.10989010989010989},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.07671232876712329},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.05660377358490566},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.04081632653061224},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.06962025316455696},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.05454545454545454},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.023809523809523808},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.02830188679245283},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.03260869565217391},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.024},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.04597701149425287},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.028089887640449437},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.07142857142857142},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.09146341463414634},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.05813953488372093},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.050505050505050504},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.08727272727272728},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.064},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.06040268456375839},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.11392405063291139},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.1130952380952381},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.11650485436893204},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.07446808510638298},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.10599078341013825},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.07650273224043716},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.050724637681159424},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.0847457627118644},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.05454545454545454},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.072},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.060240963855421686},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.11842105263157894},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.11678832116788321},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.11486486486486487},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.09090909090909091},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.07017543859649122},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.05699481865284974},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.125},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.125},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.10714285714285714},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.06060606060606061},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.06547619047619048},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.08791208791208792},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.14049586776859505},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.08653846153846154},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.102803738317757},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.08},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.04},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.06451612903225806},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.05517241379310345},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.16363636363636364},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.07692307692307693},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.06204379562043796},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.09701492537313433},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.10227272727272728},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.09433962264150944},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.03571428571428571},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.1111111111111111},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.05333333333333334},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.05627705627705628},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.04020100502512563},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.064},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.06},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.03260869565217391},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.06944444444444445},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.023622047244094488},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.05555555555555555},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.06182795698924731},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.05426356589147287},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.05970149253731343},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.03076923076923077},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0392156862745098},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.12626262626262627},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.05555555555555555},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.08163265306122448},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.14666666666666667},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.036585365853658534},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.03597122302158273},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.06818181818181818},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.0625},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.08974358974358974},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.07650273224043716},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.0625},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.06172839506172839},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.13333333333333333},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.04395604395604396},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.04411764705882353},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.07142857142857142},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.1},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.02564102564102564},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.08552631578947369},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.050359712230215826},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.08536585365853659},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.03278688524590164},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.10465116279069768}},"=":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.016666666666666666},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.025510204081632654},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.014652014652014652},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.017857142857142856},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.016483516483516484},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.01643835616438356},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.018867924528301886},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.023809523809523808},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.018867924528301886},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.016304347826086956},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.032},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.016853932584269662},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.014285714285714285},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.01744186046511628},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.030303030303030304},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.016},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.015957446808510637},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.009216589861751152},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.02185792349726776},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.016},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.017857142857142856},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.011904761904761904},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.02666666666666667},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.018867924528301886},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.031496062992125984},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.023809523809523808},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.010752688172043012},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.015503875968992248},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.020202020202020204},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.02877697841726619},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.017857142857142856},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.02185792349726776},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.020833333333333332},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.024691358024691357},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.014705882352941176},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.023255813953488372}}},">":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.024390243902439025},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.05434782608695652}}}},">":{"0":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}},"1":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.019417475728155338},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374}}},"2":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.03333333333333333},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.019417475728155338},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.022222222222222223},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.02197802197802198},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.011235955056179775},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}},",":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112}}}},"3":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.022222222222222223},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.019417475728155338},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.022222222222222223},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.011235955056179775},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}},".":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099}}}},"4":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.022222222222222223},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.02912621359223301},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.022222222222222223},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.016483516483516484},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}},",":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}}},"5":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.022222222222222223},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.02912621359223301},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.022222222222222223},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374}},",":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}},".":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}}},"9":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.011235955056179775}}},"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.024193548387096774},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.015306122448979591},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.011320754716981131},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.014545454545454545},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.07272727272727272},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.024096385542168676},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.017857142857142856},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.04},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.028846153846153848},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0072992700729927005},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.06},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.04522613065326633},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.12},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.036585365853658534},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.06097560975609756},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},">":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.025974025974025976},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}},">":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.011320754716981131},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}},"=":{"docs":{"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.058823529411764705}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748}},",":{"docs":{"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112}}}}}}},"=":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.023809523809523808},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.008658008658008658},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}},"[":{"0":{"docs":{},",":{"1":{"docs":{},",":{"0":{"docs":{},",":{"1":{"docs":{},",":{"0":{"docs":{},",":{"1":{"docs":{},",":{"9":{"9":{"docs":{},"]":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}}}}},"4":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"3":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}},"docs":{}}},"docs":{}}},"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308}}},"]":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}},"。":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}},"1":{"0":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549}}}},"9":{"docs":{},",":{"2":{"docs":{},",":{"5":{"docs":{},",":{"3":{"docs":{},",":{"7":{"docs":{},",":{"1":{"0":{"1":{"docs":{},",":{"1":{"8":{"docs":{},"]":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.011904761904761904}}}},"5":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}},"docs":{}}},"8":{"docs":{},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}},"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}},",":{"2":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},"]":{"docs":{},",":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}},"docs":{}},"]":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.02857142857142857}},",":{"docs":{},"[":{"1":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}},",":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"2":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02}}}},"1":{"docs":{},",":{"3":{"docs":{},",":{"2":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"3":{"docs":{},",":{"3":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"4":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936}}}},"docs":{}}},"docs":{}}}}}}}}}}}}},"4":{"docs":{},",":{"4":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.015748031496062992}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"3":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.015748031496062992}}}},"docs":{}}}}}}}},"docs":{}}}}}}}},"3":{"docs":{},"]":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}},",":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}},",":{"0":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}},"docs":{}}},"4":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},",":{"8":{"docs":{},",":{"9":{"docs":{},"]":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}},"docs":{}}}}}}},"]":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}},",":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.024390243902439025}}}}},"docs":{}}},"docs":{}}},"docs":{}},"]":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}},",":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}},"[":{"1":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}},",":{"docs":{},"[":{"7":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"7":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"7":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"1":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"1":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"3":{"docs":{},",":{"2":{"docs":{},",":{"6":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}}},"docs":{}}},"docs":{}}},"4":{"docs":{},",":{"2":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}},"docs":{}}},"docs":{}}},"5":{"docs":{},"]":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}}},"docs":{}}}}}}}}}}}},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}},"docs":{}}},"docs":{}}}}},"6":{"docs":{},",":{"3":{"docs":{},",":{"2":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},",":{"1":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}},"docs":{}},"docs":{}}},"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.01020408163265306},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.011904761904761904},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}}},"docs":{}}}}}}}},"3":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}}}},"docs":{}}},"docs":{}}}}}}},"]":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}},",":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}},"2":{"0":{"docs":{},",":{"9":{"docs":{},"]":{"docs":{},",":{"docs":{"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}},"docs":{}}},"3":{"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{},",":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}}},"docs":{}}},"docs":{}}},"6":{"docs":{},",":{"4":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{},",":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}},"是":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936}}}},"docs":{},",":{"1":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}}}},"4":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}}},"docs":{}}}}}}}}}}}}},"docs":{}},"]":{"docs":{"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}}}},"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304}}}},"2":{"docs":{},",":{"0":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}},"docs":{}}},"docs":{}}},"3":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}},"docs":{}}},"docs":{}}},"3":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"4":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304}}}},"docs":{}}},"docs":{}}},"4":{"docs":{},"]":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}},"7":{"docs":{},",":{"1":{"0":{"1":{"docs":{},"]":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806}}},"]":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}},"4":{"docs":{},"]":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005}}}}},"6":{"docs":{},"]":{"docs":{},",":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}},"docs":{}}},"7":{"docs":{},",":{"1":{"3":{"docs":{},",":{"1":{"9":{"docs":{},"]":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}},"，":{"docs":{},"前":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}},"]":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}},",":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}}},"3":{"docs":{},",":{"1":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}},"docs":{}}},"docs":{}}},"4":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}}},"docs":{}}}}}}}}}}}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}},",":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}}}},"docs":{}}}}}}}}}}}},"]":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}},"2":{"docs":{},",":{"0":{"docs":{},",":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}},"1":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}},"docs":{}}},"docs":{}}},"docs":{}},"]":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}},",":{"docs":{"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}}}}},"3":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"3":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}},"docs":{}}}}}}}},"docs":{}}}}}}}},"6":{"docs":{},",":{"5":{"docs":{},",":{"0":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}}}},"docs":{}}}}}}}},"3":{"0":{"docs":{},",":{"3":{"4":{"docs":{},",":{"5":{"docs":{},",":{"9":{"docs":{},"]":{"docs":{"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},",":{"5":{"docs":{},",":{"0":{"docs":{},",":{"0":{"docs":{},",":{"3":{"docs":{},",":{"1":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"4":{"docs":{},",":{"5":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358}},",":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}}},"3":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}},"docs":{}}}}}}}},"docs":{}}},"docs":{}}},"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02}}},"]":{"docs":{},",":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}}},"5":{"docs":{},",":{"1":{"docs":{},",":{"6":{"docs":{},",":{"2":{"docs":{},",":{"0":{"docs":{},",":{"8":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"7":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}},",":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"]":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}},"9":{"docs":{},",":{"2":{"0":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"1":{"5":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936}},",":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}},"]":{"docs":{},",":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}},"4":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304}}}},"docs":{}}},"docs":{}}},"8":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}},"docs":{}}},"docs":{}},"]":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}},"3":{"docs":{},"]":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}},",":{"5":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}},"docs":{}}},"docs":{}}},"docs":{}}},"5":{"docs":{},",":{"3":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}},"docs":{}}},"docs":{}}},"6":{"docs":{},",":{"7":{"docs":{},",":{"0":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.029850746268656716},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.029850746268656716},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"9":{"docs":{},",":{"0":{"docs":{},",":{"5":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"5":{"docs":{},",":{"3":{"docs":{},",":{"6":{"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"4":{"docs":{},"]":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}},",":{"1":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}}}},"docs":{}}},"docs":{}},"docs":{}}},"8":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}}},"docs":{}}},"docs":{}}},"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}},"6":{"docs":{},",":{"5":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{},",":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}}},"docs":{}}},"7":{"docs":{},"]":{"docs":{},"。":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}},"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},"7":{"docs":{},",":{"1":{"docs":{},",":{"5":{"docs":{},",":{"3":{"docs":{},",":{"6":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"6":{"docs":{},",":{"4":{"docs":{},",":{"3":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}},"docs":{}}},"docs":{}}},"docs":{}}},"8":{"docs":{},",":{"9":{"docs":{},",":{"1":{"1":{"docs":{},",":{"1":{"2":{"docs":{},"]":{"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"9":{"docs":{},",":{"2":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576}}}}},"docs":{}},"docs":{}}},"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.02857142857142857},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.047619047619047616},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.03508771929824561},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.011904761904761904},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}},"[":{"0":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"0":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"0":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},"]":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"2":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"0":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"0":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},"]":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"]":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}},"docs":{}}},"2":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},"]":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"1":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},"]":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}},"docs":{}}},"docs":{}}}}},"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"5":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},",":{"8":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"9":{"docs":{},",":{"1":{"0":{"docs":{},",":{"1":{"1":{"docs":{},",":{"1":{"2":{"docs":{},"]":{"docs":{},"]":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}},"]":{"docs":{},",":{"docs":{},"[":{"4":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"7":{"docs":{},",":{"8":{"docs":{},",":{"9":{"docs":{},"]":{"docs":{},"]":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"3":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"3":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"3":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"]":{"docs":{},"]":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}}}}}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}}}}}},"5":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"6":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"6":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},"]":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"7":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"3":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"1":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"0":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},"]":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}},"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"docs":{},"]":{"docs":{},"]":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}},"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"docs":{},"]":{"docs":{},"]":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}},"a":{"docs":{},",":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669}}}},"\"":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"0":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"0":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"0":{"docs":{},"\"":{"docs":{},"]":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}},"docs":{}}}}},"docs":{}}}}},"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"0":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"0":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}},"docs":{}}}}},"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"o":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"l":{"docs":{},"o":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"o":{"docs":{},"g":{"docs":{},"\"":{"docs":{},"]":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}},"]":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"\"":{"docs":{},"]":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338}}}}}}}}}}}},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"\"":{"docs":{},"]":{"docs":{"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}},",":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}}},".":{"docs":{},".":{"docs":{},"q":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}},"q":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{},"]":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{},"]":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}},"买":{"docs":{},"入":{"docs":{},",":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}}},"m":{"docs":{},",":{"docs":{"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353}}}}},"f":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}},"a":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}},"s":{"docs":{},"t":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.02631578947368421},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.013157894736842105},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.018867924528301886},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.02631578947368421}},")":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}}}}}}}}}}}}},"l":{"docs":{},"s":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.017857142857142856},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01092896174863388},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01092896174863388},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}},"e":{"docs":{},";":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.015748031496062992},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.02158273381294964},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.024691358024691357},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}},"。":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}},"假":{"docs":{},"设":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"互":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.013157894736842105},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"n":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.017857142857142856}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}}},";":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102}}}}}}},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},"/":{"docs":{},"(":{"2":{"docs":{},"x":{"docs":{},")":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"比":{"docs":{},"x":{"docs":{},"更":{"docs":{},"接":{"docs":{},"近":{"docs":{},"的":{"docs":{},"近":{"docs":{},"似":{"docs":{},"值":{"docs":{},"。":{"docs":{},"代":{"docs":{},"入":{"docs":{},"f":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},"=":{"docs":{},"x":{"docs":{},"^":{"2":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"i":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}},")":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}},"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},",":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}},",":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.021739130434782608}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.017857142857142856},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0072992700729927005}},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},".":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}},"i":{"docs":{},"d":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}},")":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0072992700729927005}},":":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0072992700729927005}}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}},"u":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}},"e":{"docs":{},"e":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.025}},")":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}}},"d":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}},".":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}},"docs":{}}}},"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}},"docs":{}},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}},"docs":{}},"]":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}},"docs":{}}}}}}}},"n":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}},"m":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.017857142857142856}}}}},"m":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.015306122448979591},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.03333333333333333},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.023809523809523808},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.058823529411764705},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936}},"i":{"docs":{},"d":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.017857142857142856},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.018867924528301886},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}},")":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}},",":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}}},";":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}},";":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}},"n":{"docs":{"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.016666666666666666}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.036585365853658534}},"(":{"docs":{},")":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}},";":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}}},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.024390243902439025}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}}},"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.024390243902439025}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.02040816326530612}},")":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.011194029850746268}},")":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}},"=":{"1":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}},"docs":{}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}}}}}}}}}}},"(":{"docs":{},"d":{"docs":{},"p":{"docs":{},"(":{"docs":{},"j":{"docs":{},")":{"docs":{"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}}}}}}}},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},">":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}}},";":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}},"、":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}}}}}},"s":{"docs":{},"s":{"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.023809523809523808}}}},"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008}}},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}},"docs":{}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}},"docs":{}}}}}}},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936}}}}},"n":{"docs":{},",":{"docs":{"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}}}},"b":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},",":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}}}},"m":{"docs":{},"x":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},",":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}},"[":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},",":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}},"docs":{}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"x":{"6":{"7":{"docs":{},")":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}},"docs":{}},"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.030303030303030304},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.023809523809523808}},",":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.020202020202020204},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.011904761904761904}},";":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}},"]":{"docs":{},";":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}}}}}}}}}},"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"]":{"docs":{},")":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}}}}}}}},"l":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"[":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"]":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},")":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}}}}}}}}}},")":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}},";":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}},"x":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.013513513513513514}},"{":{"1":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}},"docs":{}},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.02040816326530612}},";":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.02197802197802198},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.018691588785046728}}}}}}}},";":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005}},"[":{"docs":{},"]":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.013513513513513514},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.022727272727272728},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},",":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}}}},"p":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.02857142857142857},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.021739130434782608},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.014545454545454545},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.02531645569620253},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.032},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.019230769230769232},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.022222222222222223}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}},"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},",":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}}},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}}}}}}}}}}},">":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.01090909090909091},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"算":{"docs":{},"法":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"n":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"y":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"p":{"docs":{},"/":{"4":{"4":{"7":{"5":{"9":{"8":{"5":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}}},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.03125}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.016129032258064516}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.007352941176470588}},"(":{"docs":{},")":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.00980392156862745}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}}}}}},")":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}},",":{"docs":{"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"2":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}}}}}}}}}}}}}}}},"docs":{},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}}},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"做":{"docs":{},"到":{"docs":{},"：":{"docs":{"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}}}}}}}}}}},"d":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}},";":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}},"v":{"docs":{},"e":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}},"s":{"docs":{},")":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}},"x":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425}},")":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}},"o":{"1":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}},"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.04},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.020100502512562814}},"(":{"1":{"docs":{},")":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}},"，":{"docs":{},"并":{"docs":{},"使":{"docs":{},"用":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}}},"。":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}}},"docs":{},"n":{"2":{"docs":{},")":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}},"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}},")":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}},"(":{"docs":{},"m":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}},"n":{"docs":{},")":{"docs":{},",":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}}}}}}}},"h":{"docs":{},")":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}},"k":{"docs":{},")":{"docs":{},",":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}},"m":{"docs":{},"x":{"docs":{},"n":{"docs":{},")":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}},",":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}},"b":{"docs":{},"j":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}},"）":{"docs":{},"。":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}},"p":{"docs":{},".":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}},"e":{"docs":{},"r":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353}}}}}}}}}},"n":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}},"t":{"docs":{},"o":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}}}}}},"r":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.016129032258064516},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.015544041450777202}},"e":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.013157894736842105},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.024},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.013157894736842105}},"s":{"1":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.024}}},"docs":{},";":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.024096385542168676},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178}}}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.02142857142857143}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}},"p":{"docs":{},"q":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{},")":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}}}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},",":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.014925373134328358}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.014925373134328358}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.023809523809523808}},")":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}},";":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.024}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}}}}}}}}},";":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}}}}}},"i":{"docs":{},"d":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425}},")":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.015957446808510637}}}}}},"t":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}},",":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}},"[":{"1":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}}},"docs":{}}},"t":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.013333333333333334},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.010752688172043012},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.012254901960784314},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.013157894736842105},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.016129032258064516},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.021739130434782608},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.0196078431372549},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.025},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.015306122448979591},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.018292682926829267},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.014652014652014652},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.013157894736842105},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.011194029850746268},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.01910828025477707},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.022556390977443608},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.03571428571428571},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.01643835616438356},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.022641509433962263},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.013605442176870748},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.01818181818181818},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.031746031746031744},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.018867924528301886},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.02247191011235955},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.03488372093023256},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.020202020202020204},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.02181818181818182},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.02127659574468085},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.021739130434782608},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.024},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.024096385542168676},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.014598540145985401},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.011904761904761904},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.020689655172413793},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.019230769230769232},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.022388059701492536},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.018867924528301886},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.013333333333333334},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.012987012987012988},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.03937007874015748},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.015873015873015872},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.013440860215053764},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.03076923076923077},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.022222222222222223},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.02040816326530612},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.04316546762589928},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.015151515151515152},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.026785714285714284},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.03125},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.037037037037037035},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.02696078431372549},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.02564102564102564},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.013157894736842105},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.014388489208633094},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.046511627906976744}},";":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}}}}}}}}}}}}}}}}},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}},"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}}}}}},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"j":{"docs":{},")":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.01098901098901099},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.013333333333333334},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.012254901960784314},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.029304029304029304}},")":{"docs":{},";":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}}}}}},";":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.014652014652014652}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.01098901098901099}}}}}}}},"v":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}}}}},")":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}},",":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}},"e":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}}}},"docs":{}}}}}}}}},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"z":{"docs":{},"u":{"docs":{},"i":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0072992700729927005}},".":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}},"u":{"docs":{},"r":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}},"g":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},",":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}},"d":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},",":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},",":{"docs":{"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.013157894736842105},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.03296703296703297},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.016129032258064516},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.029850746268656716},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.015873015873015872},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.024},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.017857142857142856},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.029850746268656716},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.022222222222222223},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.03296703296703297},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.013157894736842105},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}},";":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}},")":{"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}},"[":{"0":{"docs":{},"]":{"docs":{},"}":{"docs":{},";":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}}},"1":{"docs":{},"]":{"docs":{},")":{"docs":{},",":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}}},"docs":{},"j":{"docs":{},"]":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}}}}}},")":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.016129032258064516},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.01509433962264151}},";":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755}}}},";":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}},"）":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"（":{"docs":{},"r":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666}}}}}}}}}}}}}}}},";":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}}},"g":{"docs":{},"e":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"b":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.01935483870967742}}}}}}}},"o":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}},"o":{"docs":{},"t":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.023255813953488372}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}},";":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}},"c":{"docs":{},"n":{"docs":{},"t":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266}}}},"docs":{}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},";":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.011320754716981131}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}},")":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.011320754716981131}},";":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755}},";":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}},")":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}},";":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}},",":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.016}}},";":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}}}}},";":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.012195121951219513},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186}}},")":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.016304347826086956},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.013793103448275862},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}},";":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496}}}},",":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.016},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}},"=":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}}}}}}}}}},"w":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}},",":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}},";":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}},"p":{"docs":{},",":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.01818181818181818}}}},"s":{"docs":{},"e":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.01818181818181818}}}},"b":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}}}}}}}}},",":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}},":":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}},"g":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}},"t":{"docs":{},"a":{"docs":{},"e":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}},"d":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936}},")":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}},"h":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}},"l":{"docs":{},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}},"=":{"0":{"docs":{},",":{"docs":{},"r":{"docs":{},"h":{"docs":{},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"{":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},"}":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"4":{"docs":{},",":{"3":{"docs":{},",":{"5":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"}":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}},"docs":{}}},"docs":{}}},"docs":{}}},"5":{"docs":{},",":{"3":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},"}":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.05921052631578947},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.054945054945054944},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.06666666666666667},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.056451612903225805},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.04878048780487805},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.05970149253731343},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.02857142857142857},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.023809523809523808},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.043478260869565216},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.029411764705882353},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.041666666666666664},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.061224489795918366},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.04},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.04878048780487805},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.047619047619047616},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.046052631578947366},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.041044776119402986},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.05555555555555555},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.044585987261146494},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.06766917293233082},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.038834951456310676},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.044444444444444446},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.0625},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.04395604395604396},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.07945205479452055},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.04150943396226415},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.047619047619047616},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.0379746835443038},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.04242424242424243},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.03968253968253968},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.04716981132075472},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.059782608695652176},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.032},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.028089887640449437},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.07142857142857142},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.06097560975609756},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.040697674418604654},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.030303030303030304},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.03272727272727273},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.016},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.020134228187919462},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.0379746835443038},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.023809523809523808},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.038834951456310676},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.047872340425531915},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.03686635944700461},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01639344262295082},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.07246376811594203},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.03389830508474576},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.030303030303030304},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.01818181818181818},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.04},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.060240963855421686},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.02631578947368421},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.014598540145985401},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.013513513513513514},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.03636363636363636},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.03508771929824561},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.031088082901554404},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.025},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.022727272727272728},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.026785714285714284},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.045454545454545456},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.03571428571428571},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.027472527472527472},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.01652892561983471},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.019230769230769232},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.028037383177570093},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.04},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.02666666666666667},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.03225806451612903},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.041379310344827586},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.07272727272727272},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.04807692307692308},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.040145985401459854},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.029850746268656716},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.028409090909090908},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.04716981132075472},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.03571428571428571},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.027777777777777776},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.03333333333333333},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.08823529411764706},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.028985507246376812},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.030303030303030304},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.010050251256281407},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.032},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.02},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.021739130434782608},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.041666666666666664},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.03937007874015748},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.031746031746031744},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.0456989247311828},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.023255813953488372},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.05970149253731343},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.03076923076923077},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0784313725490196},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.050505050505050504},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.03333333333333333},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.061224489795918366},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.04666666666666667},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.036585365853658534},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.03597122302158273},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.06060606060606061},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.05357142857142857},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.02564102564102564},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01639344262295082},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.052083333333333336},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.024691358024691357},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.06666666666666667},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.054945054945054944},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.04411764705882353},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.07142857142857142},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.03333333333333333},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.02564102564102564},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.05921052631578947},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.06474820143884892},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.024390243902439025},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.047619047619047616},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.05737704918032787},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.06976744186046512}},"}":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}},"\"":{"docs":{},"$":{"docs":{},"i":{"docs":{},"d":{"docs":{},"\"":{"docs":{},":":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"\"":{"docs":{},":":{"docs":{},"{":{"docs":{},"\"":{"docs":{},"$":{"docs":{},"i":{"docs":{},"d":{"docs":{},"\"":{"docs":{},":":{"docs":{},"\"":{"2":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"\"":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"\"":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"\"":{"docs":{},":":{"docs":{},"{":{"docs":{},"\"":{"docs":{},"$":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"\"":{"docs":{},":":{"docs":{},"\"":{"2":{"docs":{},"\"":{"docs":{},"}":{"docs":{},",":{"docs":{},"\"":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"\"":{"docs":{},":":{"2":{"docs":{},"}":{"docs":{},",":{"docs":{},"\"":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"\"":{"docs":{},":":{"docs":{},"{":{"docs":{},"\"":{"docs":{},"$":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"\"":{"docs":{},":":{"docs":{},"\"":{"2":{"docs":{},"\"":{"docs":{},"}":{"docs":{},",":{"docs":{},"\"":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"\"":{"docs":{},":":{"1":{"docs":{},"}":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}}}}},"e":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}},"docs":{}}}}},"|":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.008658008658008658}},"|":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.015873015873015872},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01092896174863388},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.02158273381294964},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01092896174863388},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.01639344262295082}}}},"}":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.05921052631578947},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.06593406593406594},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.04242424242424243},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.06451612903225806},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.07462686567164178},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.03571428571428571},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.06521739130434782},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.041666666666666664},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.0663265306122449},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.042682926829268296},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.040293040293040296},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.039473684210526314},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.048507462686567165},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.022222222222222223},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.044585987261146494},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.06766917293233082},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.019417475728155338},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.022222222222222223},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.03571428571428571},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.04395604395604396},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.07945205479452055},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.033962264150943396},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.047619047619047616},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.0379746835443038},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.05454545454545454},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.03968253968253968},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.04716981132075472},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.02717391304347826},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.032},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.028089887640449437},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.07142857142857142},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.054878048780487805},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.040697674418604654},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.06909090909090909},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.047872340425531915},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.04608294930875576},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.03278688524590164},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.043478260869565216},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.03389830508474576},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.030303030303030304},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.032},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.07228915662650602},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.021897810218978103},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.013513513513513514},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.03571428571428571},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.03296703296703297},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.025806451612903226},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.041379310344827586},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.038461538461538464},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0364963503649635},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.03731343283582089},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.04716981132075472},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.03571428571428571},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.04},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.030303030303030304},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.032},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.02},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.03937007874015748},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.01984126984126984},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.04032258064516129},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.023255813953488372},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.07462686567164178},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.09230769230769231},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.058823529411764705},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.045454545454545456},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.044444444444444446},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.061224489795918366},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.04666666666666667},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.03597122302158273},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.06060606060606061},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.05357142857142857},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.03278688524590164},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.06172839506172839},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.06593406593406594},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.04411764705882353},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.05921052631578947},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.06474820143884892},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.03278688524590164},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.06976744186046512}},"}":{"docs":{},";":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}},"d":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}},")":{"docs":{},";":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}},"。":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.015873015873015872},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.014492753623188406},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.021897810218978103},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.02027027027027027},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.024793388429752067},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"若":{"docs":{},"干":{"docs":{},"次":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"a":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}}}}}}}}}}}}}}}},"​":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}},"代":{"docs":{},"码":{"1":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}},"（":{"docs":{},"递":{"docs":{},"归":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"）":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"f":{"docs":{},"s":{"docs":{},"）":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}},"d":{"docs":{},"p":{"docs":{},"）":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}},"，":{"2":{"0":{"docs":{},"m":{"docs":{},"s":{"docs":{},"）":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}},"docs":{}},"docs":{}}}}}},"2":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}},"（":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"法":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"）":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}}}},"docs":{}}}}}}}}}}}}}}}}}},"双":{"docs":{},"向":{"docs":{},"b":{"docs":{},"f":{"docs":{},"s":{"docs":{},"）":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}},"递":{"docs":{},"归":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}},"三":{"docs":{},"指":{"docs":{},"针":{"docs":{},"法":{"docs":{},"）":{"docs":{"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818}}}}}}},"公":{"docs":{},"式":{"docs":{},"法":{"docs":{},"）":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}}}},"3":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}},"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.010752688172043012},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}},"（":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"方":{"docs":{},"法":{"docs":{},"）":{"docs":{"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203}}}}},"）":{"docs":{"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374}}}}},"递":{"docs":{},"归":{"docs":{},"方":{"docs":{},"法":{"docs":{},"）":{"docs":{"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203}}}}},"）":{"docs":{"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374}}}}},"线":{"docs":{},"段":{"docs":{},"树":{"docs":{},"）":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}},"d":{"docs":{},"p":{"docs":{},"）":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}},"表":{"docs":{},"数":{"docs":{},"字":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.033707865168539325}}}},"可":{"docs":{},"以":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"零":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"那":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},",":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}},"了":{"docs":{},"交":{"docs":{},"易":{"docs":{},"股":{"docs":{},"票":{"docs":{},"的":{"docs":{},"手":{"docs":{},"续":{"docs":{},"费":{"docs":{},"用":{"docs":{},"。":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}}}}}}}}}}}}}}},"到":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"内":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"看":{"docs":{},"作":{"docs":{},"是":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"下":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"值":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"链":{"docs":{},"表":{"docs":{},"进":{"docs":{},"行":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"是":{"docs":{},"从":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"而":{"docs":{},"索":{"docs":{},"引":{"docs":{},"值":{"docs":{},"是":{"docs":{},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"最":{"docs":{},"大":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"加":{"1":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"一":{"docs":{},"定":{"docs":{},"存":{"docs":{},"在":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"有":{"docs":{},"着":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"指":{"docs":{},"向":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"也":{"docs":{},"即":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"有":{"docs":{},"环":{"docs":{},"的":{"docs":{},"存":{"docs":{},"在":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"本":{"docs":{},"题":{"docs":{},"可":{"docs":{},"以":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"环":{"docs":{},"入":{"docs":{},"口":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"具":{"docs":{},"体":{"docs":{},"可":{"docs":{},"参":{"docs":{},"考":{"docs":{},"题":{"docs":{},"目":{"docs":{},"环":{"docs":{},"形":{"docs":{},"链":{"docs":{},"表":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"以":{"docs":{},"及":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"深":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"成":{"docs":{},"一":{"docs":{},"条":{"docs":{},"新":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"而":{"docs":{},"对":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"针":{"docs":{},"仅":{"docs":{},"作":{"docs":{},"浅":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"，":{"docs":{},"即":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"针":{"docs":{},"依":{"docs":{},"然":{"docs":{},"指":{"docs":{},"向":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"利":{"docs":{},"用":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"将":{"docs":{},"深":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"新":{"docs":{},"旧":{"docs":{},"节":{"docs":{},"点":{"docs":{},"存":{"docs":{},"储":{"docs":{},"下":{"docs":{},"来":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"新":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"将":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"中":{"docs":{},"原":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"所":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"重":{"docs":{},"新":{"docs":{},"排":{"docs":{},"列":{"docs":{},"后":{"docs":{},"变":{"docs":{},"为":{"docs":{},"：":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}}}}}}}}},"展":{"docs":{},"开":{"docs":{},"为":{"docs":{},"：":{"docs":{"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943}}}}}}},"给":{"docs":{},"定":{"docs":{},"链":{"docs":{},"表":{"docs":{},"从":{"docs":{},"中":{"docs":{},"间":{"docs":{},"断":{"docs":{},"开":{"docs":{},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"1":{"docs":{},"与":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"2":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"反":{"docs":{},"转":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"2":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"将":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"1":{"docs":{},"与":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"2":{"docs":{},"交":{"docs":{},"叉":{"docs":{},"合":{"docs":{},"并":{"docs":{},"。":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"法":{"docs":{},"结":{"docs":{},"合":{"docs":{},"思":{"docs":{},"路":{"1":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}},"docs":{}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"中":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"s":{"docs":{},"首":{"docs":{},"尾":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"，":{"docs":{},"构":{"docs":{},"成":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"2":{"docs":{},"s":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"2":{"docs":{},"s":{"docs":{},"就":{"docs":{},"是":{"docs":{},"由":{"2":{"docs":{},"n":{"docs":{},"个":{"docs":{},"子":{"docs":{},"串":{"docs":{},"t":{"docs":{},"构":{"docs":{},"成":{"docs":{},"。":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}},"先":{"docs":{},"行":{"docs":{},"动":{"docs":{},"。":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"放":{"docs":{},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"。":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}}}}}},"思":{"docs":{},"路":{"1":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}},"（":{"docs":{},"二":{"docs":{},"分":{"docs":{},"法":{"docs":{},"）":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"）":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}},"2":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364}},"（":{"docs":{},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"）":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}}}},"贪":{"docs":{},"心":{"docs":{},"算":{"docs":{},"法":{"docs":{},"+":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"）":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}}}}}},"3":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}},"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}},"依":{"docs":{},"然":{"docs":{},"与":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"为":{"0":{"docs":{},"差":{"docs":{},"不":{"docs":{},"多":{"docs":{},"，":{"docs":{},"只":{"docs":{},"不":{"docs":{},"过":{"docs":{},"这":{"docs":{},"里":{"docs":{},"要":{"docs":{},"求":{"docs":{},"和":{"docs":{},"是":{"docs":{},"k":{"docs":{},"的":{"docs":{},"倍":{"docs":{},"数":{"docs":{},"，":{"docs":{},"也":{"docs":{},"即":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"小":{"docs":{},"于":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"2":{"docs":{},")":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}},"docs":{}},")":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"任":{"docs":{},"意":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"边":{"docs":{},"，":{"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"最":{"docs":{},"多":{"docs":{},"经":{"docs":{},"过":{"3":{"docs":{},"次":{"docs":{},"：":{"docs":{},"一":{"docs":{},"次":{"docs":{},"用":{"docs":{},"于":{"docs":{},"找":{"docs":{},"到":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"次":{"docs":{},"将":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"还":{"docs":{},"原":{"docs":{},"。":{"docs":{"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},",":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}},"。":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}}}},"仍":{"docs":{},"然":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"减":{"docs":{},"少":{"docs":{},"到":{"docs":{},"了":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"。":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"执":{"docs":{},"行":{"docs":{},"两":{"docs":{},"项":{"docs":{},"操":{"docs":{},"作":{"docs":{},"？":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"应":{"docs":{},"当":{"docs":{},"返":{"docs":{},"回":{"docs":{},":":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.019417475728155338}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}},"其":{"docs":{},"格":{"docs":{},"雷":{"docs":{},"编":{"docs":{},"码":{"docs":{},"序":{"docs":{},"列":{"docs":{},"为":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}},"识":{"docs":{},"别":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}}}}},"的":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}},"延":{"docs":{},"伸":{"docs":{},"题":{"docs":{},"目":{"docs":{},"。":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}}}}},"后":{"docs":{},"面":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"进":{"docs":{},"入":{"docs":{},"第":{"3":{"docs":{},"步":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}},"docs":{}}}}}}}}},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"就":{"docs":{},"把":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"是":{"docs":{},"节":{"docs":{},"点":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186}}}}}}}}}},"短":{"docs":{},"转":{"docs":{},"换":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{},"转":{"docs":{},"换":{"docs":{},"需":{"docs":{},"遵":{"docs":{},"循":{"docs":{},"如":{"docs":{},"下":{"docs":{},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}},"矩":{"docs":{},"形":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"其":{"docs":{},"面":{"docs":{},"积":{"docs":{},"。":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}}}}}}}}}},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"每":{"docs":{},"来":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"数":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}}}},"那":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"用":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"替":{"docs":{},"换":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}},"；":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}}}}},"平":{"docs":{},"方":{"docs":{},"根":{"docs":{},"是":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}}}}}},"范":{"docs":{},"围":{"docs":{},"是":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}}},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}}}}}}}}}},"倍":{"docs":{},"数":{"docs":{},"，":{"docs":{},"即":{"docs":{},"总":{"docs":{},"和":{"docs":{},"为":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}}}}}}},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"和":{"docs":{},"为":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.021739130434782608}}}}}}}}},"串":{"docs":{},"是":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.03355704697986577}}}},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"「":{"docs":{},"公":{"docs":{},"共":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"」":{"docs":{},"是":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"所":{"docs":{},"共":{"docs":{},"同":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"但":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}},"中":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}}},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"将":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"扰":{"docs":{},"乱":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"符":{"docs":{},"合":{"docs":{},"条":{"docs":{},"件":{"docs":{},"的":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"都":{"docs":{},"不":{"docs":{},"超":{"docs":{},"过":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}}}},"。":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008}}},"，":{"docs":{},"\"":{"docs":{},"p":{"docs":{},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"\"":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}}}}}}},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}}},"值":{"docs":{},"是":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326}}}},"节":{"docs":{},"点":{"docs":{},"之":{"docs":{},"前":{"docs":{},"。":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112}}}}},"都":{"docs":{},"在":{"docs":{},"大":{"docs":{},"于":{"docs":{},"或":{"docs":{},"等":{"docs":{},"于":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112}}}}}}}}}}},"左":{"docs":{},"右":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"差":{"docs":{},"的":{"docs":{},"绝":{"docs":{},"对":{"docs":{},"值":{"docs":{},"不":{"docs":{},"超":{"docs":{},"过":{"1":{"docs":{},"。":{"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936}}}},"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"倍":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"请":{"docs":{},"将":{"docs":{},"最":{"docs":{},"后":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"保":{"docs":{},"持":{"docs":{},"原":{"docs":{},"有":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"请":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"趟":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"完":{"docs":{},"成":{"docs":{},"反":{"docs":{},"转":{"docs":{},"。":{"docs":{"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}},"数":{"docs":{},"值":{"docs":{},"更":{"docs":{},"新":{"docs":{},"为":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}},"字":{"docs":{},"，":{"docs":{},"每":{"docs":{},"条":{"docs":{},"从":{"docs":{},"根":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"都":{"docs":{},"代":{"docs":{},"表":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}}}}}}}},"有":{"1":{"docs":{},"、":{"1":{"0":{"docs":{},"、":{"1":{"1":{"docs":{},"和":{"1":{"2":{"docs":{},"，":{"1":{"docs":{},"一":{"docs":{},"共":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"5":{"docs":{},"次":{"docs":{},"。":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}}}},"docs":{}}}}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"称":{"docs":{},"作":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"（":{"docs":{},"u":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}}},"深":{"docs":{},"度":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"大":{"docs":{},"（":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"它":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"）":{"docs":{},"。":{"docs":{},"”":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}},"祖":{"docs":{},"先":{"docs":{},"且":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}},"「":{"docs":{},"最":{"docs":{},"小":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"子":{"docs":{},"串":{"docs":{},"」":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}}}}}}}},"字":{"docs":{},"母":{"docs":{},"异":{"docs":{},"位":{"docs":{},"词":{"docs":{},"。":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.03355704697986577}}},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"这":{"docs":{},"些":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"起":{"docs":{},"始":{"docs":{},"索":{"docs":{},"引":{"docs":{},"。":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}}}}}}}}}}}}}}}}}}}}},"小":{"docs":{},"写":{"docs":{},"字":{"docs":{},"母":{"docs":{},"。":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"字":{"docs":{},"符":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}}},"通":{"docs":{},"配":{"docs":{},"符":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}}}}},"正":{"docs":{},"则":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}},"旋":{"docs":{},"转":{"docs":{},"操":{"docs":{},"作":{"docs":{},"就":{"docs":{},"是":{"docs":{},"将":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}}}}}}}}},"时":{"docs":{},"候":{"docs":{},"买":{"docs":{},"入":{"docs":{},"，":{"docs":{},"在":{"docs":{},"第":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.021897810218978103}}}}}}},"卖":{"docs":{},"出":{"docs":{},",":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.014598540145985401}}},"，":{"docs":{},"这":{"docs":{},"笔":{"docs":{},"交":{"docs":{},"易":{"docs":{},"所":{"docs":{},"能":{"docs":{},"获":{"docs":{},"得":{"docs":{},"利":{"docs":{},"润":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"都":{"docs":{},"是":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"扰":{"docs":{},"乱":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135}}}}}}}},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"而":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}}}},"树":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"和":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"。":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}},"种":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"表":{"docs":{},"示":{"docs":{},"形":{"docs":{},"式":{"docs":{},"。":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}}}}}}},"扰":{"docs":{},"乱":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}}},"二":{"docs":{},"维":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"找":{"docs":{},"出":{"docs":{},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}}}}}}}}}}},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"（":{"docs":{},"n":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}}}}}},"不":{"docs":{},"同":{"docs":{},"非":{"docs":{},"空":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}}}}}}}}}}},"消":{"docs":{},"息":{"docs":{},"通":{"docs":{},"过":{"docs":{},"以":{"docs":{},"下":{"docs":{},"方":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"了":{"docs":{},"编":{"docs":{},"码":{"docs":{},"：":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}}}}}}}}}}}}}}},"方":{"docs":{},"案":{"docs":{},"。":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613}}}}},"质":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.027777777777777776}}}}}},"超":{"docs":{},"级":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"。":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}}}}}}},"格":{"docs":{},"雷":{"docs":{},"编":{"docs":{},"码":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"其":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}}}}}}}}},"棋":{"docs":{},"盘":{"docs":{},"上":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"使":{"docs":{},"皇":{"docs":{},"后":{"docs":{},"彼":{"docs":{},"此":{"docs":{},"之":{"docs":{},"间":{"docs":{},"不":{"docs":{},"能":{"docs":{},"相":{"docs":{},"互":{"docs":{},"攻":{"docs":{},"击":{"docs":{},"。":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}}}}}},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"（":{"docs":{},"元":{"docs":{},"素":{"docs":{},"分":{"docs":{},"别":{"docs":{},"对":{"docs":{},"应":{"docs":{},"网":{"docs":{},"格":{"docs":{},"的":{"docs":{},"行":{"docs":{},"和":{"docs":{},"列":{"docs":{},"）":{"docs":{},"，":{"docs":{},"它":{"docs":{},"按":{"docs":{},"照":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}},"网":{"docs":{},"格":{"docs":{},"上":{"docs":{},"玩":{"docs":{},"井":{"docs":{},"字":{"docs":{},"棋":{"docs":{},"。":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}},"行":{"docs":{},"动":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"（":{"docs":{},"先":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}},"核":{"docs":{},"苷":{"docs":{},"酸":{"docs":{},"组":{"docs":{},"成":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{},"“":{"docs":{},"a":{"docs":{},"c":{"docs":{},"g":{"docs":{},"a":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"c":{"docs":{},"c":{"docs":{},"g":{"docs":{},"”":{"docs":{},"。":{"docs":{},"在":{"docs":{},"研":{"docs":{},"究":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"数":{"docs":{},"（":{"docs":{},"也":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"汉":{"docs":{},"明":{"docs":{},"重":{"docs":{},"量":{"docs":{},"）":{"docs":{},"。":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}}}}},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"是":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.01639344262295082}}}}}}},"示":{"docs":{},"例":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.013157894736842105},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.02197802197802198},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.016129032258064516},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.029850746268656716},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.021739130434782608},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.0196078431372549},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.01020408163265306},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.06},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.019736842105263157},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.015873015873015872},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.011235955056179775},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.02976190476190476},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.013824884792626729},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.0273224043715847},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.03389830508474576},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.045454545454545456},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.01818181818181818},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.024},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.02631578947368421},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.014598540145985401},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.02027027027027027},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.03508771929824561},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.022727272727272728},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.016483516483516484},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.024793388429752067},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.028846153846153848},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.028037383177570093},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.02666666666666667},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.013793103448275862},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.019230769230769232},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.022388059701492536},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.017045454545454544},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.023809523809523808},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.013333333333333334},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.020100502512562814},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.024},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.021739130434782608},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.015748031496062992},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.021505376344086023},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.015503875968992248},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.029850746268656716},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.03076923076923077},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0392156862745098},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.03333333333333333},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.02666666666666667},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.014388489208633094},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.0273224043715847},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.02197802197802198},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.07142857142857142},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.03333333333333333},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.013157894736842105},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.024390243902439025},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.031746031746031744},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.01639344262295082}},":":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}},"：":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}}}},"给":{"docs":{},"定":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.020202020202020204},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936}},"一":{"docs":{},"个":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}},"包":{"docs":{},"含":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}},"非":{"docs":{},"负":{"docs":{},"数":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"目":{"docs":{},"标":{"docs":{},"整":{"docs":{},"数":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}},"无":{"docs":{},"序":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"其":{"docs":{},"中":{"docs":{},"最":{"docs":{},"长":{"docs":{},"上":{"docs":{},"升":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}},"数":{"docs":{},"组":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}}}}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"第":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}}}}}}}},"含":{"docs":{},"有":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}},"未":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"找":{"docs":{},"出":{"docs":{},"其":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"额":{"docs":{},"外":{"docs":{},"增":{"docs":{},"加":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"该":{"docs":{},"指":{"docs":{},"针":{"docs":{},"可":{"docs":{},"以":{"docs":{},"指":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"任":{"docs":{},"何":{"docs":{},"节":{"docs":{},"点":{"docs":{},"或":{"docs":{},"空":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"链":{"docs":{},"表":{"docs":{},"开":{"docs":{},"始":{"docs":{},"入":{"docs":{},"环":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"定":{"docs":{},"值":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112}}}}}}}},":":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}}}},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"按":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"高":{"docs":{},"度":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"。":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"它":{"docs":{},"的":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}}}},"判":{"docs":{},"断":{"docs":{},"它":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"高":{"docs":{},"度":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}},"原":{"docs":{},"地":{"docs":{},"将":{"docs":{},"它":{"docs":{},"展":{"docs":{},"开":{"docs":{},"为":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943}}}}}}}}}}}},"它":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"都":{"docs":{},"存":{"docs":{},"放":{"docs":{},"一":{"docs":{},"个":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}}}}}}}}}}}},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"目":{"docs":{},"标":{"docs":{},"和":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"从":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"路":{"docs":{},"径":{"docs":{},"总":{"docs":{},"和":{"docs":{},"等":{"docs":{},"于":{"docs":{},"给":{"docs":{},"定":{"docs":{},"目":{"docs":{},"标":{"docs":{},"和":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"。":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"请":{"docs":{},"找":{"docs":{},"出":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"并":{"docs":{},"且":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"树":{"docs":{},"中":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"包":{"docs":{},"含":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"包":{"docs":{},"含":{"docs":{},"指":{"docs":{},"向":{"docs":{},"父":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"，":{"docs":{},"编":{"docs":{},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}}}}}}}},"维":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"包":{"docs":{},"含":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}},"，":{"docs":{},"请":{"docs":{},"你":{"docs":{},"找":{"docs":{},"出":{"docs":{},"其":{"docs":{},"中":{"docs":{},"不":{"docs":{},"含":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"空":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"它":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"由":{"docs":{},"它":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"串":{"docs":{},"重":{"docs":{},"复":{"docs":{},"多":{"docs":{},"次":{"docs":{},"构":{"docs":{},"成":{"docs":{},"。":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"只":{"docs":{},"含":{"docs":{},"有":{"docs":{},"小":{"docs":{},"写":{"docs":{},"英":{"docs":{},"文":{"docs":{},"字":{"docs":{},"母":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"长":{"docs":{},"度":{"docs":{},"不":{"docs":{},"超":{"docs":{},"过":{"1":{"0":{"0":{"0":{"0":{"docs":{},"。":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"其":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"频":{"docs":{},"率":{"docs":{},"前":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"除":{"docs":{},"了":{"docs":{},"某":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"以":{"docs":{},"外":{"docs":{},"，":{"docs":{},"其":{"docs":{},"余":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"均":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"三":{"docs":{},"次":{"docs":{},"。":{"docs":{},"找":{"docs":{},"出":{"docs":{},"那":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"次":{"docs":{},"。":{"docs":{},"找":{"docs":{},"出":{"docs":{},"那":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"第":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364}}}}}}},"字":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"按":{"docs":{},"照":{"docs":{},"如":{"docs":{},"下":{"docs":{},"规":{"docs":{},"则":{"docs":{},"把":{"docs":{},"它":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"为":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"：":{"0":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"仅":{"docs":{},"包":{"docs":{},"含":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}},"三":{"docs":{},"角":{"docs":{},"形":{"docs":{},"，":{"docs":{},"找":{"docs":{},"出":{"docs":{},"自":{"docs":{},"顶":{"docs":{},"向":{"docs":{},"下":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{},"。":{"docs":{},"每":{"docs":{},"一":{"docs":{},"步":{"docs":{},"只":{"docs":{},"能":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"下":{"docs":{},"一":{"docs":{},"行":{"docs":{},"中":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"上":{"docs":{},"。":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"非":{"docs":{},"空":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"请":{"docs":{},"计":{"docs":{},"算":{"docs":{},"解":{"docs":{},"码":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"。":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"表":{"docs":{},"编":{"docs":{},"码":{"docs":{},"总":{"docs":{},"位":{"docs":{},"数":{"docs":{},"的":{"docs":{},"非":{"docs":{},"负":{"docs":{},"整":{"docs":{},"数":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}}}}}}}}}}},"些":{"docs":{},"标":{"docs":{},"记":{"docs":{},"了":{"docs":{},"宽":{"docs":{},"度":{"docs":{},"和":{"docs":{},"高":{"docs":{},"度":{"docs":{},"的":{"docs":{},"信":{"docs":{},"封":{"docs":{},"，":{"docs":{},"宽":{"docs":{},"度":{"docs":{},"和":{"docs":{},"高":{"docs":{},"度":{"docs":{},"以":{"docs":{},"整":{"docs":{},"数":{"docs":{},"对":{"docs":{},"形":{"docs":{},"式":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}}},"两":{"docs":{},"个":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}},"单":{"docs":{},"词":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}},"（":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}},",":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}}}}}},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"表":{"docs":{},"示":{"docs":{},"分":{"docs":{},"数":{"docs":{},"的":{"docs":{},"分":{"docs":{},"子":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}}}}}}}}}}},"以":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"的":{"docs":{},"整":{"docs":{},"形":{"docs":{},"数":{"docs":{},"组":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}}}}}}}}}}},"的":{"docs":{},"有":{"docs":{},"序":{"docs":{},"链":{"docs":{},"表":{"docs":{},"：":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}}}}},"树":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.014388489208633094}}}},"这":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"：":{"1":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669}}},"docs":{}}}}}},"链":{"docs":{},"表":{"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099}}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.015873015873015872}},":":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}},"如":{"docs":{},"下":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"目":{"docs":{},"标":{"docs":{},"和":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"将":{"docs":{},"在":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}},"，":{"docs":{},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"它":{"docs":{},"们":{"docs":{},"中":{"docs":{},"找":{"docs":{},"出":{"docs":{},"最":{"docs":{},"长":{"docs":{},"的":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{},"最":{"docs":{},"长":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"序":{"docs":{},"列":{"docs":{},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{},"该":{"docs":{},"序":{"docs":{},"列":{"docs":{},"为":{"docs":{},"某":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"独":{"docs":{},"有":{"docs":{},"的":{"docs":{},"最":{"docs":{},"长":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"（":{"docs":{},"即":{"docs":{},"不":{"docs":{},"能":{"docs":{},"是":{"docs":{},"其":{"docs":{},"他":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"）":{"docs":{},"。":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"三":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105}}}}}}},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}}}}},"编":{"docs":{},"码":{"docs":{},"总":{"docs":{},"位":{"docs":{},"数":{"docs":{},"为":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}}}},"范":{"docs":{},"围":{"docs":{"位运算/201. 数字范围按位与.html":{"ref":"位运算/201. 数字范围按位与.html","tf":0.029411764705882353}}}}},"你":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"每":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}},"数":{"docs":{},"组":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}},"根":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"的":{"docs":{},"绳":{"docs":{},"子":{"docs":{},"，":{"docs":{},"请":{"docs":{},"把":{"docs":{},"绳":{"docs":{},"子":{"docs":{},"剪":{"docs":{},"成":{"docs":{},"整":{"docs":{},"数":{"docs":{},"长":{"docs":{},"的":{"docs":{},"m":{"docs":{},"段":{"docs":{},"（":{"docs":{},"m":{"docs":{},"、":{"docs":{},"n":{"docs":{},"都":{"docs":{},"是":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"n":{"docs":{},">":{"1":{"docs":{},"并":{"docs":{},"且":{"docs":{},"m":{"docs":{},">":{"1":{"docs":{},"）":{"docs":{},"，":{"docs":{},"每":{"docs":{},"段":{"docs":{},"绳":{"docs":{},"子":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"记":{"docs":{},"为":{"docs":{},"k":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"k":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},",":{"docs":{},"k":{"docs":{},"[":{"docs":{},"m":{"docs":{},"]":{"docs":{},"。":{"docs":{},"请":{"docs":{},"问":{"docs":{},"k":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"x":{"docs":{},"k":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"x":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"x":{"docs":{},"k":{"docs":{},"[":{"docs":{},"m":{"docs":{},"]":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"乘":{"docs":{},"积":{"docs":{},"是":{"docs":{},"多":{"docs":{},"少":{"docs":{},"？":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"当":{"docs":{},"绳":{"docs":{},"子":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"8":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"把":{"docs":{},"它":{"docs":{},"剪":{"docs":{},"成":{"docs":{},"长":{"docs":{},"度":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"2":{"docs":{},"、":{"3":{"docs":{},"、":{"3":{"docs":{},"的":{"docs":{},"三":{"docs":{},"段":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"乘":{"docs":{},"积":{"docs":{},"是":{"1":{"8":{"docs":{},"。":{"docs":{"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"两":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}}}}}}}}},"说":{"docs":{},"明":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669}},"：":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"修":{"docs":{},"改":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}}}}}}}}}},":":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}},"输":{"docs":{},"入":{"docs":{},":":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.013157894736842105},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.02197802197802198},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.016129032258064516},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.029850746268656716},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.021739130434782608},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.0196078431372549},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.06},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.011235955056179775},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.03571428571428571},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.0273224043715847},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.03389830508474576},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.045454545454545456},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.01818181818181818},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.024},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.02631578947368421},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.014598540145985401},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.02027027027027027},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.03508771929824561},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.022727272727272728},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.016483516483516484},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.024793388429752067},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.028037383177570093},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.02666666666666667},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.013793103448275862},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.019230769230769232},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.022388059701492536},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.017045454545454544},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.023809523809523808},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.013333333333333334},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.024},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.021739130434782608},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.010752688172043012},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.029850746268656716},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0392156862745098},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.03333333333333333},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.0273224043715847},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.02197802197802198},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.013157894736842105},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.031746031746031744}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}}}},"：":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"1":{"0":{"1":{"1":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"0":{"1":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.01639344262295082}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.019736842105263157},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.02666666666666667}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.015748031496062992}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"1":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.013824884792626729}}},"docs":{}}}}},"\"":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"\"":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}}},"b":{"docs":{},"a":{"docs":{},"\"":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}},"c":{"docs":{},"\"":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.020100502512562814}}}}},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.03076923076923077}}}}}}}},"n":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.015503875968992248},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.07142857142857142}}},"a":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.014388489208633094}},"r":{"docs":{},"r":{"docs":{"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.03333333333333333}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.024390243902439025}}}}}}},"将":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"是":{"docs":{},"最":{"docs":{},"长":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"最":{"docs":{},"长":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"序":{"docs":{},"列":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"字":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"某":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"外":{"docs":{},"向":{"docs":{},"里":{"docs":{},"以":{"docs":{},"顺":{"docs":{},"时":{"docs":{},"针":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"依":{"docs":{},"次":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"把":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"起":{"docs":{},"来":{"docs":{},"排":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"打":{"docs":{},"印":{"docs":{},"能":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"出":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"。":{"docs":{"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"该":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"符":{"docs":{},"合":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"人":{"docs":{},"的":{"docs":{},"习":{"docs":{},"惯":{"docs":{},"，":{"docs":{},"本":{"docs":{},"题":{"docs":{},"从":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"计":{"docs":{},"数":{"docs":{},"，":{"docs":{},"即":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"1":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"有":{"6":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"从":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"值":{"docs":{},"依":{"docs":{},"次":{"docs":{},"是":{"1":{"docs":{},"、":{"2":{"docs":{},"、":{"3":{"docs":{},"、":{"4":{"docs":{},"、":{"5":{"docs":{},"、":{"6":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"3":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"值":{"docs":{},"为":{"4":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"n":{"docs":{},"，":{"docs":{},"意":{"docs":{},"义":{"docs":{},"见":{"docs":{},"题":{"docs":{},"面":{"docs":{},"。":{"docs":{},"（":{"2":{"docs":{"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333}}},"docs":{}}}}}}}}}}}},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"，":{"docs":{},"将":{"docs":{},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"循":{"docs":{},"环":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"要":{"docs":{},"求":{"docs":{},"不":{"docs":{},"能":{"docs":{},"创":{"docs":{},"建":{"docs":{},"任":{"docs":{},"何":{"docs":{},"新":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"调":{"docs":{},"整":{"docs":{},"树":{"docs":{},"中":{"docs":{},"节":{"docs":{},"点":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"指":{"docs":{},"向":{"docs":{},"。":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"a":{"docs":{},"和":{"docs":{},"b":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"b":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"a":{"docs":{},"的":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"(":{"docs":{},"约":{"docs":{},"定":{"docs":{},"空":{"docs":{},"树":{"docs":{},"不":{"docs":{},"是":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"树":{"docs":{},"的":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},")":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"表":{"docs":{},"示":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"压":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"请":{"docs":{},"判":{"docs":{},"断":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"该":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"压":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"均":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"序":{"docs":{},"列":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"描":{"docs":{},"述":{"docs":{},":":{"docs":{"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333}}}}},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}}}}}}},"出":{"docs":{},":":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.013157894736842105},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.02197802197802198},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.016129032258064516},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.029850746268656716},"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.021739130434782608},"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.0196078431372549},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.06},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.011235955056179775},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.023809523809523808},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.010638297872340425},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.0273224043715847},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.03389830508474576},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.045454545454545456},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.01818181818181818},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.024},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.02631578947368421},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.014598540145985401},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.02027027027027027},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.03508771929824561},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.022727272727272728},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.016483516483516484},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.024793388429752067},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.028037383177570093},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.02666666666666667},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.013793103448275862},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.019230769230769232},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.022388059701492536},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.017045454545454544},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.023809523809523808},"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888},"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.013333333333333334},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.024},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.021739130434782608},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.010752688172043012},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.029850746268656716},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0392156862745098},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.03333333333333333},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.0273224043715847},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.02197802197802198},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.013157894736842105},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.031746031746031744}}},"：":{"0":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571}}},"1":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"3":{"1":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.009216589861751152},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571}}},"5":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}},"6":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}},"7":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}},"docs":{},"n":{"docs":{},"o":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.013157894736842105}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}}}},"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},",":{"8":{"docs":{},",":{"1":{"2":{"docs":{},",":{"1":{"1":{"docs":{},",":{"1":{"0":{"docs":{},",":{"9":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"6":{"docs":{},",":{"9":{"docs":{},",":{"8":{"docs":{},",":{"7":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"]":{"docs":{"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}}}},"docs":{},"#":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"docs":{},"#":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},",":{"7":{"docs":{},",":{"docs":{},"#":{"docs":{},"]":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{},"\"":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}}}}}}}}}}}}}},"[":{"1":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},"]":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"3":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"3":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"3":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"]":{"docs":{},"]":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}}}}}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}}}}}},"7":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"3":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"1":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"0":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},"]":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"]":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"2":{"docs":{},".":{"0":{"0":{"0":{"0":{"0":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"2":{"docs":{},".":{"5":{"0":{"0":{"0":{"0":{"docs":{},"]":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"1":{"docs":{},".":{"5":{"0":{"0":{"0":{"0":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"2":{"docs":{},".":{"0":{"0":{"0":{"0":{"0":{"docs":{},"]":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}},"b":{"docs":{},"\"":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"\"":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}},"由":{"docs":{},"于":{"docs":{},"没":{"docs":{},"有":{"docs":{},"办":{"docs":{},"法":{"docs":{},"再":{"docs":{},"行":{"docs":{},"动":{"docs":{},"，":{"docs":{},"游":{"docs":{},"戏":{"docs":{},"以":{"docs":{},"平":{"docs":{},"局":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}}}},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"长":{"docs":{},"公":{"docs":{},"共":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}}}}}}}}}},"这":{"docs":{},"道":{"docs":{},"题":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"是":{"docs":{},"对":{"docs":{},"要":{"docs":{},"定":{"docs":{},"位":{"docs":{},"的":{"docs":{},"“":{"docs":{},"数":{"docs":{},"”":{"docs":{},"做":{"docs":{},"二":{"docs":{},"分":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"对":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"做":{"docs":{},"二":{"docs":{},"分":{"docs":{},"。":{"docs":{},"要":{"docs":{},"定":{"docs":{},"位":{"docs":{},"的":{"docs":{},"“":{"docs":{},"数":{"docs":{},"”":{"docs":{},"根":{"docs":{},"据":{"docs":{},"题":{"docs":{},"意":{"docs":{},"在":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"考":{"docs":{},"点":{"docs":{},"在":{"docs":{},"于":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"鲁":{"docs":{},"棒":{"docs":{},"性":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"到":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"以":{"docs":{},"及":{"docs":{},"链":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"小":{"docs":{},"于":{"docs":{},"k":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"（":{"docs":{},"如":{"docs":{},"果":{"docs":{},"k":{"docs":{},"是":{"docs":{},"无":{"docs":{},"符":{"docs":{},"号":{"docs":{},"整":{"docs":{},"数":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"k":{"docs":{},"等":{"docs":{},"于":{"0":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"）":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}}},"种":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"原":{"docs":{},"理":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"是":{"docs":{},"不":{"docs":{},"断":{"docs":{},"用":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{},"f":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},")":{"docs":{},"的":{"docs":{},"切":{"docs":{},"线":{"docs":{},"来":{"docs":{},"逼":{"docs":{},"近":{"docs":{},"方":{"docs":{},"程":{"docs":{},"x":{"docs":{},"^":{"2":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"排":{"docs":{},"除":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"上":{"docs":{},"的":{"docs":{},"值":{"docs":{},"大":{"docs":{},"于":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"上":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"一":{"docs":{},"定":{"docs":{},"处":{"docs":{},"于":{"docs":{},"右":{"docs":{},"区":{"docs":{},"间":{"docs":{},"（":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"）":{"docs":{},"。":{"docs":{"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"就":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"，":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"是":{"docs":{},"该":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"频":{"docs":{},"率":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"特":{"docs":{},"别":{"docs":{},"注":{"docs":{},"意":{"docs":{},"~":{"docs":{},"返":{"docs":{},"回":{"docs":{},"任":{"docs":{},"意":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"样":{"docs":{},"在":{"docs":{},"区":{"docs":{},"间":{"docs":{},"内":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"一":{"docs":{},"定":{"docs":{},"不":{"docs":{},"大":{"docs":{},"于":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"，":{"docs":{},"而":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"一":{"docs":{},"定":{"docs":{},"不":{"docs":{},"小":{"docs":{},"于":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"。":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"。":{"docs":{"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}}}}}}}}}},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"就":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"实":{"docs":{},"现":{"docs":{},"直":{"docs":{},"接":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"/":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"不":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"频":{"docs":{},"率":{"docs":{},"更":{"docs":{},"新":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"笔":{"docs":{},"交":{"docs":{},"易":{"docs":{},"所":{"docs":{},"能":{"docs":{},"获":{"docs":{},"得":{"docs":{},"利":{"docs":{},"润":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.014598540145985401},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.02027027027027027},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"多":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"优":{"docs":{},"化":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"有":{"docs":{},"广":{"docs":{},"搜":{"docs":{},"，":{"docs":{},"贪":{"docs":{},"心":{"docs":{},"，":{"docs":{},"动":{"docs":{},"规":{"docs":{},"。":{"docs":{},"这":{"docs":{},"题":{"docs":{},"显":{"docs":{},"然":{"docs":{},"贪":{"docs":{},"心":{"docs":{},"不":{"docs":{},"行":{"docs":{},"，":{"docs":{},"于":{"docs":{},"是":{"docs":{},"范":{"docs":{},"围":{"docs":{},"缩":{"docs":{},"小":{"docs":{},"到":{"docs":{},"广":{"docs":{},"搜":{"docs":{},"和":{"docs":{},"动":{"docs":{},"规":{"docs":{},"。":{"docs":{},"本":{"docs":{},"题":{"docs":{},"求":{"docs":{},"最":{"docs":{},"小":{"docs":{},"健":{"docs":{},"康":{"docs":{},"点":{"docs":{},"数":{"docs":{},"，":{"docs":{},"跟":{"docs":{},"路":{"docs":{},"径":{"docs":{},"长":{"docs":{},"度":{"docs":{},"无":{"docs":{},"关":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"广":{"docs":{},"搜":{"docs":{},"不":{"docs":{},"适":{"docs":{},"合":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"只":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"了":{"docs":{},"动":{"docs":{},"规":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"向":{"docs":{},"。":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"些":{"docs":{},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"。":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}},"题":{"docs":{},"目":{"docs":{},"描":{"docs":{},"述":{"docs":{"二分查找/287. 寻找重复数.html":{"ref":"二分查找/287. 寻找重复数.html","tf":0.006578947368421052},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L287. 寻找重复数.html":{"ref":"剑指offer/L287. 寻找重复数.html","tf":0.006578947368421052}}}}},"解":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}},"相":{"docs":{},"同":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}},"。":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}},"{":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.03076923076923077}}}},";":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.03076923076923077},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},"数":{"docs":{},"组":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}},"给":{"docs":{},"定":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943}}}}},"如":{"docs":{},"下":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},":":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}}}}},"三":{"docs":{},"角":{"docs":{},"形":{"docs":{},"：":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}}}}}},"从":{"docs":{},"根":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"路":{"docs":{},"径":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}}}}}}}}},"\"":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"\"":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"们":{"docs":{},"挑":{"docs":{},"选":{"docs":{},"非":{"docs":{},"叶":{"docs":{},"节":{"docs":{},"点":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"7":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"{":{"2":{"docs":{},",":{"3":{"docs":{},",":{"1":{"docs":{},",":{"0":{"docs":{},",":{"2":{"docs":{},",":{"5":{"docs":{},",":{"3":{"docs":{},"}":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"2":{"docs":{},"。":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"docs":{}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"到":{"docs":{},"如":{"docs":{},"下":{"docs":{},"布":{"docs":{},"局":{"docs":{},"的":{"docs":{},"地":{"docs":{},"下":{"docs":{},"城":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"遵":{"docs":{},"循":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"路":{"docs":{},"径":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}},"[":{"0":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496}}}}},"链":{"docs":{},"表":{"1":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"docs":{}}},"输":{"docs":{},"入":{"1":{"2":{"docs":{},"，":{"1":{"docs":{},"～":{"1":{"2":{"docs":{},"这":{"docs":{},"些":{"docs":{},"整":{"docs":{},"数":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"1":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}}},",":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}}},":":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}},"子":{"docs":{},"：":{"docs":{"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304}}}}},"假":{"docs":{},"设":{"docs":{},"按":{"docs":{},"照":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"在":{"docs":{},"预":{"docs":{},"先":{"docs":{},"未":{"docs":{},"知":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"点":{"docs":{},"上":{"docs":{},"进":{"docs":{},"行":{"docs":{},"了":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"。":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"和":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"在":{"docs":{},"a":{"3":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"以":{"docs":{},"上":{"docs":{},"公":{"docs":{},"式":{"docs":{},"（":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"在":{"docs":{},"与":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"前":{"docs":{},"走":{"docs":{},"过":{"docs":{},"了":{"docs":{},"k":{"docs":{},"圈":{"docs":{},"）":{"docs":{},"，":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"从":{"docs":{},"a":{"1":{"docs":{},"出":{"docs":{},"发":{"docs":{},"，":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"从":{"docs":{},"a":{"3":{"docs":{},"出":{"docs":{},"发":{"docs":{},"，":{"docs":{},"经":{"docs":{},"过":{"docs":{},"a":{"docs":{},"步":{"docs":{},"以":{"docs":{},"后":{"docs":{},"，":{"docs":{},"两":{"docs":{},"点":{"docs":{},"将":{"docs":{},"在":{"docs":{},"a":{"2":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"。":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"s":{"docs":{},"可":{"docs":{},"以":{"docs":{},"由":{"docs":{},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"串":{"docs":{},"重":{"docs":{},"复":{"docs":{},"多":{"docs":{},"次":{"docs":{},"构":{"docs":{},"成":{"docs":{},"，":{"docs":{},"设":{"docs":{},"这":{"docs":{},"个":{"docs":{},"子":{"docs":{},"串":{"docs":{},"为":{"docs":{},"t":{"docs":{},"，":{"docs":{},"重":{"docs":{},"复":{"docs":{},"次":{"docs":{},"数":{"docs":{},"为":{"docs":{},"n":{"docs":{},"（":{"docs":{},"n":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"是":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}}}},"允":{"docs":{},"许":{"docs":{},"重":{"docs":{},"复":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"吗":{"docs":{},"？":{"docs":{},"会":{"docs":{},"如":{"docs":{},"何":{"docs":{},"影":{"docs":{},"响":{"docs":{},"，":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"能":{"docs":{},"变":{"docs":{},"为":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}},"会":{"docs":{},"有":{"docs":{},"多":{"docs":{},"种":{"docs":{},"最":{"docs":{},"长":{"docs":{},"上":{"docs":{},"升":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"组":{"docs":{},"合":{"docs":{},"，":{"docs":{},"你":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"输":{"docs":{},"出":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"且":{"docs":{},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"从":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.011904761904761904},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01092896174863388},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01092896174863388}}}}}}}}}}},"以":{"docs":{},"匹":{"docs":{},"配":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}},"任":{"docs":{},"何":{"docs":{},"单":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}}}}},"意":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}},"（":{"docs":{},"包":{"docs":{},"括":{"docs":{},"空":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"）":{"docs":{},"。":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}},"空":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},",":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}}}}}},"被":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"成":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.018691588785046728}}}}}},"先":{"docs":{},"用":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"发":{"docs":{},"现":{"docs":{},"规":{"docs":{},"律":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"优":{"docs":{},"化":{"docs":{},"成":{"docs":{},"一":{"docs":{},"条":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"。":{"docs":{"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"视":{"docs":{},"为":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}},"由":{"docs":{},"子":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.030303030303030304}}}}}}}},"在":{"1":{"2":{"1":{"docs":{},"题":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"上":{"docs":{},"稍":{"docs":{},"微":{"docs":{},"修":{"docs":{},"改":{"docs":{},"即":{"docs":{},"可":{"docs":{},"：":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"或":{"docs":{},"者":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"得":{"docs":{},"来":{"docs":{},"，":{"docs":{},"从":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"，":{"docs":{},"利":{"docs":{},"润":{"docs":{},"保":{"docs":{},"持":{"docs":{},"不":{"docs":{},"变":{"docs":{},"；":{"docs":{},"从":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"，":{"docs":{},"利":{"docs":{},"润":{"docs":{},"为":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"利":{"docs":{},"润":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"减":{"docs":{},"去":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"价":{"docs":{},"格":{"docs":{},"。":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"。":{"docs":{},"定":{"docs":{},"义":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"1":{"docs":{},"和":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"1":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"代":{"docs":{},"表":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"后":{"docs":{},"和":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"买":{"docs":{},"入":{"docs":{},"后":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"利":{"docs":{},"润":{"docs":{},"，":{"docs":{},"而":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"2":{"docs":{},"和":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"2":{"docs":{},"分":{"docs":{},"别":{"docs":{},"代":{"docs":{},"表":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"后":{"docs":{},"和":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"买":{"docs":{},"入":{"docs":{},"后":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"利":{"docs":{},"润":{"docs":{},"。":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"1":{"docs":{},"与":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"1":{"docs":{},"的":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"公":{"docs":{},"式":{"docs":{},"与":{"1":{"2":{"1":{"docs":{},"题":{"docs":{},"一":{"docs":{},"致":{"docs":{},"。":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"可":{"docs":{},"以":{"docs":{},"由":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"或":{"docs":{},"者":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"得":{"docs":{},"来":{"docs":{},"。":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"可":{"docs":{},"以":{"docs":{},"由":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"或":{"docs":{},"者":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"得":{"docs":{},"来":{"docs":{},"。":{"docs":{"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"2":{"docs":{},"题":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"上":{"docs":{},"稍":{"docs":{},"作":{"docs":{},"修":{"docs":{},"改":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"在":{"docs":{},"每":{"docs":{},"一":{"docs":{},"次":{"docs":{},"买":{"docs":{},"入":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"除":{"docs":{},"了":{"docs":{},"减":{"docs":{},"去":{"docs":{},"当":{"docs":{},"前":{"docs":{},"价":{"docs":{},"格":{"docs":{},"，":{"docs":{},"还":{"docs":{},"要":{"docs":{},"额":{"docs":{},"外":{"docs":{},"减":{"docs":{},"去":{"docs":{},"手":{"docs":{},"续":{"docs":{},"费":{"docs":{},"。":{"docs":{},"（":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"减":{"docs":{},"去":{"docs":{},"手":{"docs":{},"续":{"docs":{},"费":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"会":{"docs":{},"有":{"docs":{},"整":{"docs":{},"数":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"出":{"docs":{},"现":{"docs":{},")":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"5":{"3":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"上":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"需":{"docs":{},"要":{"docs":{},"额":{"docs":{},"外":{"docs":{},"处":{"docs":{},"理":{"docs":{},"中":{"docs":{},"间":{"docs":{},"元":{"docs":{},"素":{"docs":{},"与":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"元":{"docs":{},"素":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"无":{"docs":{},"法":{"docs":{},"判":{"docs":{},"断":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"在":{"docs":{},"左":{"docs":{},"区":{"docs":{},"间":{"docs":{},"还":{"docs":{},"是":{"docs":{},"右":{"docs":{},"区":{"docs":{},"间":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{},"[":{"2":{"docs":{},",":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}},"未":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"里":{"docs":{},"直":{"docs":{},"接":{"docs":{},"用":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"实":{"docs":{},"现":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"里":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"就":{"docs":{},"是":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},",":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364}}}}}}},"个":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},",":{"docs":{"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}}}}}},"第":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.014598540145985401},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.013513513513513514},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.01652892561983471}}},"扰":{"docs":{},"乱":{"docs":{},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"挑":{"docs":{},"选":{"docs":{},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"个":{"docs":{},"非":{"docs":{},"叶":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"交":{"docs":{},"换":{"docs":{},"它":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"处":{"docs":{},"买":{"docs":{},"入":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.025}}}},"卖":{"docs":{},"出":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.025}}}}}},"上":{"docs":{},"次":{"docs":{},"打":{"docs":{},"劫":{"docs":{},"完":{"docs":{},"一":{"docs":{},"条":{"docs":{},"街":{"docs":{},"道":{"docs":{},"之":{"docs":{},"后":{"docs":{},"和":{"docs":{},"一":{"docs":{},"圈":{"docs":{},"房":{"docs":{},"屋":{"docs":{},"后":{"docs":{},"，":{"docs":{},"小":{"docs":{},"偷":{"docs":{},"又":{"docs":{},"发":{"docs":{},"现":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"可":{"docs":{},"行":{"docs":{},"窃":{"docs":{},"的":{"docs":{},"地":{"docs":{},"区":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"地":{"docs":{},"区":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"入":{"docs":{},"口":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"称":{"docs":{},"之":{"docs":{},"为":{"docs":{},"“":{"docs":{},"根":{"docs":{},"”":{"docs":{},"。":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"存":{"docs":{},"在":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"请":{"docs":{},"删":{"docs":{},"除":{"docs":{},"该":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"不":{"docs":{},"保":{"docs":{},"留":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"在":{"0":{"docs":{},"到":{"docs":{},"n":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"注":{"docs":{},"意":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"可":{"docs":{},"能":{"docs":{},"存":{"docs":{},"在":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}}}}}}}}}}}}},"：":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}},"答":{"docs":{},"案":{"docs":{},"中":{"docs":{},"不":{"docs":{},"可":{"docs":{},"以":{"docs":{},"包":{"docs":{},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"三":{"docs":{},"元":{"docs":{},"组":{"docs":{},"。":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}},"你":{"docs":{},"不":{"docs":{},"能":{"docs":{},"同":{"docs":{},"时":{"docs":{},"参":{"docs":{},"与":{"docs":{},"多":{"docs":{},"笔":{"docs":{},"交":{"docs":{},"易":{"docs":{},"（":{"docs":{},"你":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"再":{"docs":{},"次":{"docs":{},"购":{"docs":{},"买":{"docs":{},"前":{"docs":{},"出":{"docs":{},"售":{"docs":{},"掉":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"股":{"docs":{},"票":{"docs":{},"）":{"docs":{},"。":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"题":{"docs":{},"与":{"docs":{},"主":{"docs":{},"站":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}},"此":{"docs":{},"题":{"docs":{},"对":{"docs":{},"比":{"docs":{},"原":{"docs":{},"题":{"docs":{},"有":{"docs":{},"改":{"docs":{},"动":{"docs":{},"。":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}}}}}}}}},":":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}},"你":{"docs":{},"不":{"docs":{},"能":{"docs":{},"在":{"docs":{},"第":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}},"买":{"docs":{},"入":{"docs":{},"股":{"docs":{},"票":{"docs":{},"前":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"股":{"docs":{},"票":{"docs":{},"。":{"docs":{"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"重":{"docs":{},"复":{"docs":{},"使":{"docs":{},"用":{"docs":{},"字":{"docs":{},"典":{"docs":{},"中":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"。":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}}}}}}}}}}},"利":{"docs":{},"润":{"docs":{},"不":{"docs":{},"能":{"docs":{},"是":{"docs":{"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364}}}}}}},"测":{"docs":{},"试":{"docs":{},"用":{"docs":{},"例":{"2":{"docs":{},".":{"0":{"0":{"0":{"0":{"0":{"docs":{},",":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}},"请":{"docs":{},"找":{"docs":{},"出":{"docs":{},"其":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"ref":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"ref":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","tf":0.01098901098901099}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"最":{"docs":{},"多":{"docs":{},"能":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"个":{"docs":{},"信":{"docs":{},"封":{"docs":{},"能":{"docs":{},"组":{"docs":{},"成":{"docs":{},"一":{"docs":{},"组":{"docs":{},"“":{"docs":{},"俄":{"docs":{},"罗":{"docs":{},"斯":{"docs":{},"套":{"docs":{},"娃":{"docs":{},"”":{"docs":{},"信":{"docs":{},"封":{"docs":{},"（":{"docs":{},"即":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"一":{"docs":{},"个":{"docs":{},"信":{"docs":{},"封":{"docs":{},"放":{"docs":{},"到":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"信":{"docs":{},"封":{"docs":{},"里":{"docs":{},"面":{"docs":{},"）":{"docs":{},"。":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"尝":{"docs":{},"试":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}},"你":{"docs":{},"找":{"docs":{},"出":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"要":{"docs":{},"求":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"不":{"docs":{},"改":{"docs":{},"变":{"docs":{},"其":{"docs":{},"结":{"docs":{},"构":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"这":{"docs":{},"棵":{"docs":{},"树":{"docs":{},"。":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"你":{"docs":{},"的":{"docs":{},"答":{"docs":{},"案":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}}}}},"在":{"docs":{},"某":{"docs":{},"些":{"docs":{},"语":{"docs":{},"言":{"docs":{},"（":{"docs":{},"如":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"对":{"docs":{},"称":{"docs":{},"的":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"和":{"docs":{},"它":{"docs":{},"的":{"docs":{},"镜":{"docs":{},"像":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"它":{"docs":{},"是":{"docs":{},"对":{"docs":{},"称":{"docs":{},"的":{"docs":{},"。":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"是":{"docs":{},"否":{"docs":{},"表":{"docs":{},"示":{"docs":{},"数":{"docs":{},"值":{"docs":{},"（":{"docs":{},"包":{"docs":{},"括":{"docs":{},"整":{"docs":{},"数":{"docs":{},"和":{"docs":{},"小":{"docs":{},"数":{"docs":{},"）":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"\"":{"docs":{},"+":{"1":{"0":{"0":{"docs":{},"\"":{"docs":{},"、":{"docs":{},"\"":{"5":{"docs":{},"e":{"2":{"docs":{},"\"":{"docs":{},"、":{"docs":{},"\"":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}}},"docs":{}}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"按":{"docs":{},"照":{"docs":{},"之":{"docs":{},"字":{"docs":{},"形":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"即":{"docs":{},"第":{"docs":{},"一":{"docs":{},"行":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"层":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"右":{"docs":{},"到":{"docs":{},"左":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"第":{"docs":{},"三":{"docs":{},"行":{"docs":{},"再":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"行":{"docs":{},"以":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"。":{"docs":{"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"从":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"找":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"长":{"docs":{},"的":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"子":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"计":{"docs":{},"算":{"docs":{},"该":{"docs":{},"最":{"docs":{},"长":{"docs":{},"子":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"求":{"docs":{},"任":{"docs":{},"意":{"docs":{},"第":{"docs":{},"n":{"docs":{},"位":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.03225806451612903},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.01910828025477707},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.02531645569620253},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.030303030303030304},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.03968253968253968},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.018867924528301886},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.03260869565217391},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.04},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.10344827586206896},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.016853932584269662},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.02127659574468085},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.06217616580310881},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.020689655172413793},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.014925373134328358},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.031496062992125984},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.03875968992248062},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.02158273381294964},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.015151515151515152},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.014388489208633094},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.031746031746031744},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},"/":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.02040816326530612},"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.029850746268656716},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.06802721088435375},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.032},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.015957446808510637},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.009216589861751152},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.06060606060606061},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.015544041450777202},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.026785714285714284},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.011904761904761904},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.032846715328467155},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.023809523809523808},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.028985507246376812},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.05194805194805195},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.04},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.031007751937984496},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.007352941176470588},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.10256410256410256}},"判":{"docs":{},"断":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"a":{"docs":{},"是":{"docs":{},"否":{"docs":{},"模":{"docs":{},"糊":{"docs":{},"包":{"docs":{},"含":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"b":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}},"寻":{"docs":{},"找":{"docs":{},"最":{"docs":{},"长":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"字":{"docs":{},"串":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"过":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"是":{"docs":{},"比":{"docs":{},"它":{"docs":{},"长":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"比":{"docs":{},"较":{"docs":{},"器":{"docs":{},"：":{"docs":{},"根":{"docs":{},"据":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"长":{"docs":{},"度":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}}}}}}},"接":{"docs":{},"着":{"docs":{},"继":{"docs":{},"续":{"docs":{},"计":{"docs":{},"算":{"docs":{},"n":{"docs":{},"中":{"docs":{},"相":{"docs":{},"邻":{"4":{"docs":{},"位":{"docs":{},"的":{"docs":{},"和":{"docs":{},"，":{"8":{"docs":{},"位":{"docs":{},"的":{"docs":{},"和":{"docs":{},"。":{"docs":{},"。":{"docs":{},"。":{"docs":{},"直":{"docs":{},"到":{"docs":{},"相":{"docs":{},"邻":{"3":{"2":{"docs":{},"位":{"docs":{},"的":{"docs":{},"和":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}},"*":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}},"*":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.013605442176870748},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.01824817518248175},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.029411764705882353},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}},"=":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}}}},"d":{"docs":{},"p":{"0":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}},"1":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}},"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333}},"[":{"0":{"docs":{},"]":{"docs":{"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}},"[":{"0":{"docs":{},"]":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}},"docs":{}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}}}}}}}}}},"1":{"docs":{},"]":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333}}}},"2":{"docs":{},"]":{"docs":{"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333}}}},"docs":{},"i":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.013824884792626729},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01092896174863388},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01092896174863388}},"]":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.01818181818181818}},")":{"docs":{},";":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}},"[":{"docs":{},"j":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.009216589861751152}},"]":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}},"表":{"docs":{},"示":{"docs":{},"s":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"i":{"docs":{},"的":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"t":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"j":{"docs":{},"的":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}}}}}}}},"+":{"1":{"docs":{},"]":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.019230769230769232}}}},"docs":{}}},"j":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}},"]":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.012121212121212121},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}},")":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"2":{"docs":{},"]":{"docs":{},";":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}},"docs":{}}}}}}}},"docs":{}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}},"[":{"docs":{},"p":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},";":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}}}}}}},";":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}}}}}}}}}}},"n":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135}},"]":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"代":{"docs":{},"表":{"docs":{},"s":{"1":{"docs":{},"中":{"docs":{},"起":{"docs":{},"点":{"docs":{},"为":{"docs":{},"i":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"s":{"2":{"docs":{},"中":{"docs":{},"起":{"docs":{},"点":{"docs":{},"为":{"docs":{},"j":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"扰":{"docs":{},"乱":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"[":{"docs":{},"x":{"docs":{},"]":{"docs":{},"]":{"docs":{},";":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}}}}}}}}},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},";":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}}}}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}}}}}}}},"e":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}},"n":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.03731343283582089}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}},";":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.014925373134328358}}},"，":{"docs":{},"以":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"形":{"docs":{},"式":{"docs":{},"返":{"docs":{},"回":{"docs":{},"小":{"docs":{},"数":{"docs":{},"。":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"（":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"）":{"docs":{},"来":{"docs":{},"模":{"docs":{},"拟":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"是":{"docs":{},"标":{"docs":{},"准":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"操":{"docs":{},"作":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},"i":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}},"g":{"docs":{},"\"":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}},",":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}},"y":{"docs":{},",":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}},";":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}}}}},";":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.013333333333333334}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}},";":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"n":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}},")":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}},"+":{"1":{"docs":{},"，":{"docs":{},"即":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"f":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"=":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"格":{"docs":{},"子":{"docs":{},"的":{"docs":{},"值":{"docs":{},"是":{"docs":{},"非":{"docs":{},"负":{"docs":{},"数":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"f":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"=":{"1":{"docs":{},"。":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"f":{"docs":{},"[":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},",":{"docs":{},"f":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{},")":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"n":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}},"m":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.011904761904761904}}}}}}}}},"p":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}},")":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.05128205128205128}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}},":":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}},"[":{"0":{"docs":{},"]":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.02564102564102564}}}},"docs":{}}}}}}}}}}}},"f":{"docs":{},"s":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406}}}},"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},",":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.016}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}},"i":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}},"c":{"docs":{},"t":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"i":{"docs":{},"i":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}}}},"a":{"docs":{},"n":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}}}},"a":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}},"t":{"docs":{},"a":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.01639344262295082}}}},"o":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}}},"n":{"docs":{},"a":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.05}}}}},"e":{"1":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}}}}}}}}}}}},"2":{"docs":{},")":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}}}}}}}}}}},"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.015544041450777202}},"n":{"docs":{},"d":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.02127659574468085}},";":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.011320754716981131}}},")":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.026785714285714284},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}},";":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666}}},")":{"docs":{},";":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}}}}},",":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.01818181818181818}},",":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}}},"）":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"典":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"从":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},";":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}}},"y":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}},")":{"docs":{},";":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}}}},":":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.01818181818181818}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.00980392156862745}},".":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.00980392156862745}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}}}}}}}},":":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.01818181818181818}}},"u":{"docs":{},"t":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}},"n":{"docs":{},"t":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.01818181818181818}}}}}},"a":{"docs":{},"t":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135}}},"c":{"docs":{},"h":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.00980392156862745}}}},".":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}}},"j":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.01509433962264151},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.017857142857142856},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.014598540145985401},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.015544041450777202},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.026785714285714284},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.045454545454545456},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.023809523809523808},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064},"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},";":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},";":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}}}}}}}}}}}}}}}}}}}},"）":{"docs":{},"中":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"无":{"docs":{},"符":{"docs":{},"号":{"docs":{},"整":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"在":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"输":{"docs":{},"入":{"docs":{},"和":{"docs":{},"输":{"docs":{},"出":{"docs":{},"都":{"docs":{},"将":{"docs":{},"被":{"docs":{},"指":{"docs":{},"定":{"docs":{},"为":{"docs":{},"有":{"docs":{},"符":{"docs":{},"号":{"docs":{},"整":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"不":{"docs":{},"应":{"docs":{},"影":{"docs":{},"响":{"docs":{},"您":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"无":{"docs":{},"论":{"docs":{},"整":{"docs":{},"数":{"docs":{},"是":{"docs":{},"有":{"docs":{},"符":{"docs":{},"号":{"docs":{},"的":{"docs":{},"还":{"docs":{},"是":{"docs":{},"无":{"docs":{},"符":{"docs":{},"号":{"docs":{},"的":{"docs":{},"，":{"docs":{},"其":{"docs":{},"内":{"docs":{},"部":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"表":{"docs":{},"示":{"docs":{},"形":{"docs":{},"式":{"docs":{},"都":{"docs":{},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"。":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.030303030303030304},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.011904761904761904}},";":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}},",":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}},"代":{"docs":{},"表":{"docs":{},"从":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}}}}}},"位":{"docs":{},"置":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"三":{"docs":{},"角":{"docs":{},"底":{"docs":{},"部":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{},"，":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"公":{"docs":{},"式":{"docs":{},"为":{"docs":{},"：":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}},"i":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}},"e":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}},"a":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}}}},";":{"docs":{},"}":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}},"u":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}},"t":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.02531645569620253},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.015544041450777202},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.01935483870967742},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.02}},"a":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}},"i":{"docs":{},"l":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.048484848484848485},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.018292682926829267}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.012195121951219513}},";":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.012195121951219513}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}},"docs":{},"+":{"docs":{},"+":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"]":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"]":{"docs":{},")":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}},"[":{"1":{"docs":{},"]":{"docs":{},")":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}},"docs":{}}}}}}},")":{"docs":{"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943}},")":{"docs":{},";":{"docs":{"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943}}}}},";":{"docs":{"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.020202020202020204},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.015873015873015872}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}}}},")":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/14. 剪梯子.html":{"ref":"剑指offer/14. 剪梯子.html","tf":0.03333333333333333}}},"。":{"docs":{},"该":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"具":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"特":{"docs":{},"性":{"docs":{},"：":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}}}}}}}}},";":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}}},"e":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}},"u":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}}}}},"i":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"1":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}},"2":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}},"docs":{}}}}}},"x":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"1":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}},"2":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}},"docs":{}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.021739130434782608},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.02040816326530612},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.011904761904761904},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01639344262295082},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.030303030303030304},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.037383177570093455},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01639344262295082},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}},";":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}},"。":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}}}}}}}},"e":{"docs":{},"e":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.012121212121212121},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.018867924528301886},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.03184713375796178},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.038356164383561646},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.013605442176870748},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.024242424242424242},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.023809523809523808},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.04716981132075472},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.04891304347826087},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.016853932584269662},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.02857142857142857},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.046511627906976744},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.020689655172413793},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.031496062992125984},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.03597122302158273},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.030303030303030304},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.03597122302158273}},"e":{"docs":{},"(":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}},")":{"docs":{},";":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}}}},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.08139534883720931}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.023809523809523808}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}}}}}}}}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}}},")":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.010948905109489052}},".":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0072992700729927005}}}}}}}}}}}}}},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}},":":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},",":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0072992700729927005}}}}}}}},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.021897810218978103}},"(":{"docs":{},")":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0072992700729927005}}}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},"docs":{}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.010948905109489052}}}}},"docs":{}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},"2":{"docs":{},",":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},"docs":{}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},"docs":{}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"1":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}},")":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}}},"2":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}},")":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}}},"docs":{"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}}}}}}}}}}},";":{"docs":{"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}},"x":{"docs":{},"t":{"1":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}},",":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}}}}}}}},"2":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.013824884792626729}},")":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}}}}}}},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"最":{"docs":{},"长":{"docs":{},"公":{"docs":{},"共":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}},")":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}},";":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0072992700729927005}}}}},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}},")":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}}}}}}}}}}}}},"x":{"docs":{},";":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}},"y":{"docs":{},";":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"j":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}}}}}}}}},";":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}},"，":{"docs":{},"请":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}}}},"计":{"docs":{},"算":{"docs":{},"在":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.009216589861751152}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}},",":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}},"n":{"docs":{},"t":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"1":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}},"docs":{}}}}}}}}}},"y":{"docs":{},"h":{"7":{"docs":{},"/":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}},"docs":{}}},"o":{"docs":{},"p":{"docs":{"数论/264. 丑数 II.html":{"ref":"数论/264. 丑数 II.html","tf":0.01818181818181818},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.007352941176470588}},"k":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}},",":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"n":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"第":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.012121212121212121}}}}},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"都":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"“":{"docs":{},"紧":{"docs":{},"致":{"docs":{},"”":{"docs":{},"的":{"docs":{},"上":{"docs":{},"升":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{},"所":{"docs":{},"谓":{"docs":{},"最":{"docs":{},"“":{"docs":{},"紧":{"docs":{},"致":{"docs":{},"”":{"docs":{},"的":{"docs":{},"上":{"docs":{},"升":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{},"指":{"docs":{},"在":{"docs":{},"所":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"长":{"docs":{},"度":{"docs":{},"的":{"docs":{},"上":{"docs":{},"升":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"该":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"首":{"docs":{},"尾":{"docs":{},"元":{"docs":{},"素":{"docs":{},"差":{"docs":{},"最":{"docs":{},"小":{"docs":{},"（":{"docs":{},"这":{"docs":{},"是":{"docs":{},"贪":{"docs":{},"心":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"）":{"docs":{},"。":{"docs":{},"构":{"docs":{},"造":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}}},"数":{"docs":{},"字":{"docs":{},"以":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}}}}}}}}}},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}}}}}},"重":{"docs":{},"复":{"docs":{},"序":{"docs":{},"列":{"docs":{},"有":{"docs":{},"时":{"docs":{},"会":{"docs":{},"对":{"docs":{},"研":{"docs":{},"究":{"docs":{},"非":{"docs":{},"常":{"docs":{},"有":{"docs":{},"帮":{"docs":{},"助":{"docs":{},"。":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}}}}}}}}}}}}}}}}}},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"索":{"docs":{},"引":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"为":{"docs":{},"结":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"最":{"docs":{},"长":{"docs":{},"上":{"docs":{},"升":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"（":{"docs":{},"注":{"docs":{},"意":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"以":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"为":{"docs":{},"结":{"docs":{},"尾":{"docs":{},"）":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{},"三":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}}}}}}}}},"至":{"docs":{},"少":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}}}}}}}}}}}}},"间":{"docs":{},"结":{"docs":{},"果":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}}}},"寻":{"docs":{},"找":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}},"所":{"docs":{},"有":{"docs":{},"是":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}}},"不":{"docs":{},"存":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"空":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}},"存":{"docs":{},"在":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"保":{"docs":{},"证":{"docs":{},"它":{"docs":{},"是":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"答":{"docs":{},"案":{"docs":{},"。":{"docs":{"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}},"心":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"算":{"docs":{},"法":{"docs":{},"：":{"docs":{},"设":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"s":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"，":{"docs":{},"则":{"docs":{},"一":{"docs":{},"共":{"docs":{},"存":{"docs":{},"在":{"2":{"docs":{},"n":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"长":{"docs":{},"的":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"。":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"假":{"docs":{},"设":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}}}}}}}}}}}},"得":{"docs":{},"到":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613}}}},"，":{"docs":{},"共":{"docs":{},"有":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}},"一":{"docs":{},"位":{"docs":{},"为":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}},"三":{"docs":{},"位":{"docs":{},"为":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"使":{"docs":{},"用":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"补":{"docs":{},"码":{"docs":{},"记":{"docs":{},"法":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"有":{"docs":{},"符":{"docs":{},"号":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"在":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"表":{"docs":{},"示":{"docs":{},"有":{"docs":{},"符":{"docs":{},"号":{"docs":{},"整":{"docs":{},"数":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}}},"为":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}},"以":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}},"两":{"docs":{},"种":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}}}}}}}},"了":{"docs":{},"表":{"docs":{},"示":{"docs":{},"给":{"docs":{},"定":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"环":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"整":{"docs":{},"数":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}},"尽":{"docs":{},"快":{"docs":{},"到":{"docs":{},"达":{"docs":{},"公":{"docs":{},"主":{"docs":{},"，":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"决":{"docs":{},"定":{"docs":{},"每":{"docs":{},"次":{"docs":{},"只":{"docs":{},"向":{"docs":{},"右":{"docs":{},"或":{"docs":{},"向":{"docs":{},"下":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"步":{"docs":{},"。":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}}},"防":{"docs":{},"止":{"docs":{},"在":{"docs":{},"一":{"docs":{},"些":{"docs":{},"测":{"docs":{},"试":{"docs":{},"用":{"docs":{},"例":{"docs":{},"上":{"docs":{},"超":{"docs":{},"时":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"复":{"docs":{},"用":{"1":{"3":{"9":{"docs":{},"题":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"求":{"docs":{},"整":{"docs":{},"型":{"docs":{},"n":{"docs":{},"中":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"分":{"docs":{},"而":{"docs":{},"治":{"docs":{},"之":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"让":{"docs":{},"您":{"docs":{},"更":{"docs":{},"好":{"docs":{},"地":{"docs":{},"理":{"docs":{},"解":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"以":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"为":{"docs":{},"例":{"docs":{},"：":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"所":{"docs":{},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"。":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}}}}}}}}}}},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"种":{"docs":{},"？":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}},"不":{"docs":{},"同":{"docs":{},"节":{"docs":{},"点":{"docs":{},"且":{"docs":{},"均":{"docs":{},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"。":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}},"三":{"docs":{},"角":{"docs":{},"形":{"docs":{},"的":{"docs":{},"总":{"docs":{},"行":{"docs":{},"数":{"docs":{},"）":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"你":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"会":{"docs":{},"很":{"docs":{},"加":{"docs":{},"分":{"docs":{},"。":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}},"你":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"应":{"docs":{},"该":{"docs":{},"为":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}},"为":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}}}}}}}}}}}},"能":{"docs":{},"将":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"降":{"docs":{},"低":{"docs":{},"到":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}}}}}},"想":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"只":{"docs":{},"使":{"docs":{},"用":{"docs":{},"常":{"docs":{},"数":{"docs":{},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"吗":{"docs":{},"？":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"假":{"docs":{},"设":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358}}}}}}}}}}},"是":{"docs":{},"非":{"docs":{},"空":{"docs":{},"的":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"总":{"docs":{},"是":{"docs":{},"存":{"docs":{},"在":{"docs":{},"多":{"docs":{},"数":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"典":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"。":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}}}}}}}},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}},"所":{"docs":{},"有":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"是":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"（":{"docs":{},"例":{"docs":{},"如":{"docs":{},",":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}}}}}}}},"认":{"docs":{},"为":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"总":{"docs":{},"和":{"docs":{},"在":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}}}}}}}}},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"进":{"docs":{},"行":{"docs":{},"如":{"docs":{},"下":{"docs":{},"三":{"docs":{},"种":{"docs":{},"操":{"docs":{},"作":{"docs":{},"：":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}}}}}}}}}}}}},"无":{"docs":{},"限":{"docs":{},"次":{"docs":{},"地":{"docs":{},"完":{"docs":{},"成":{"docs":{},"交":{"docs":{},"易":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"你":{"docs":{},"每":{"docs":{},"次":{"docs":{},"交":{"docs":{},"易":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"付":{"docs":{},"手":{"docs":{},"续":{"docs":{},"费":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"已":{"docs":{},"经":{"docs":{},"购":{"docs":{},"买":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"股":{"docs":{},"票":{"docs":{},"，":{"docs":{},"在":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"它":{"docs":{},"之":{"docs":{},"前":{"docs":{},"你":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"再":{"docs":{},"继":{"docs":{},"续":{"docs":{},"购":{"docs":{},"买":{"docs":{},"股":{"docs":{},"票":{"docs":{},"了":{"docs":{},"。":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"使":{"docs":{},"用":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"吗":{"docs":{},"？":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"应":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"只":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"常":{"docs":{},"数":{"docs":{},"级":{"docs":{},"别":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}},"必":{"docs":{},"须":{"docs":{},"优":{"docs":{},"于":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}}}}}}}}},"只":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"常":{"docs":{},"数":{"docs":{},"的":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669}}}}}}}}}}}}}},"应":{"docs":{},"该":{"docs":{},"具":{"docs":{},"有":{"docs":{},"线":{"docs":{},"性":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"。":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304}},"你":{"docs":{},"能":{"docs":{},"否":{"docs":{},"仅":{"docs":{},"使":{"docs":{},"用":{"docs":{},"常":{"docs":{},"数":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"？":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"必":{"docs":{},"须":{"docs":{},"返":{"docs":{},"回":{"docs":{},"给":{"docs":{},"定":{"docs":{},"头":{"docs":{},"的":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"作":{"docs":{},"为":{"docs":{},"对":{"docs":{},"克":{"docs":{},"隆":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"用":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"解":{"docs":{},"决":{"docs":{},"此":{"docs":{},"题":{"docs":{},"？":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}}}}}}}}},"在":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}},"应":{"docs":{},"当":{"docs":{},"保":{"docs":{},"留":{"docs":{},"两":{"docs":{},"个":{"docs":{},"分":{"docs":{},"区":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"相":{"docs":{},"对":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"能":{"docs":{},"只":{"docs":{},"是":{"docs":{},"单":{"docs":{},"纯":{"docs":{},"的":{"docs":{},"改":{"docs":{},"变":{"docs":{},"节":{"docs":{},"点":{"docs":{},"内":{"docs":{},"部":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"际":{"docs":{},"的":{"docs":{},"进":{"docs":{},"行":{"docs":{},"节":{"docs":{},"点":{"docs":{},"交":{"docs":{},"换":{"docs":{},"。":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"时":{"docs":{},"参":{"docs":{},"与":{"docs":{},"多":{"docs":{},"笔":{"docs":{},"交":{"docs":{},"易":{"docs":{},"（":{"docs":{},"你":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"再":{"docs":{},"次":{"docs":{},"购":{"docs":{},"买":{"docs":{},"前":{"docs":{},"出":{"docs":{},"售":{"docs":{},"掉":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"股":{"docs":{},"票":{"docs":{},"）":{"docs":{},"。":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"常":{"docs":{},"量":{"docs":{},"级":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}}}}}},"标":{"docs":{},"准":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"操":{"docs":{},"作":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"操":{"docs":{},"作":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}}}},"们":{"docs":{},"是":{"docs":{},"聪":{"docs":{},"明":{"docs":{},"人":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"步":{"docs":{},"都":{"docs":{},"是":{"docs":{},"最":{"docs":{},"优":{"docs":{},"解":{"docs":{},"。":{"docs":{"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}},"和":{"docs":{},"你":{"docs":{},"的":{"docs":{},"朋":{"docs":{},"友":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"人":{"docs":{},"一":{"docs":{},"起":{"docs":{},"玩":{"docs":{"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857}}}}}}}}}}}}}},"所":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"语":{"docs":{},"言":{"docs":{},"也":{"docs":{},"许":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}}}}}}}},"借":{"docs":{},"助":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"类":{"docs":{},"库":{"docs":{},"做":{"docs":{},"二":{"docs":{},"分":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"：":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}}}}},"桶":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"，":{"docs":{},"将":{"docs":{},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"放":{"docs":{},"在":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"（":{"docs":{},"该":{"docs":{},"正":{"docs":{},"数":{"docs":{},"减":{"docs":{},"去":{"1":{"docs":{},"）":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"正":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"了":{"docs":{},"数":{"docs":{},"组":{"docs":{},"索":{"docs":{},"引":{"docs":{},"范":{"docs":{},"围":{"docs":{},"，":{"docs":{},"则":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"从":{"docs":{},"头":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"若":{"docs":{},"当":{"docs":{},"前":{"docs":{},"索":{"docs":{},"引":{"docs":{},"位":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"与":{"docs":{},"索":{"docs":{},"引":{"docs":{},"位":{"docs":{},"不":{"docs":{},"对":{"docs":{},"应":{"docs":{},"，":{"docs":{},"则":{"docs":{},"当":{"docs":{},"前":{"docs":{},"索":{"docs":{},"引":{"docs":{},"位":{"docs":{},"加":{"1":{"docs":{},"就":{"docs":{},"是":{"docs":{},"确":{"docs":{},"实":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"正":{"docs":{},"数":{"docs":{},"。":{"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"吗":{"docs":{},"?":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}},"定":{"docs":{},"义":{"docs":{},"状":{"docs":{},"态":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}},"两":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"和":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"代":{"docs":{},"表":{"docs":{},"模":{"docs":{},"式":{"docs":{},"串":{"docs":{},"p":{"docs":{},"中":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"*":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"代":{"docs":{},"表":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"在":{"docs":{},"s":{"docs":{},"中":{"docs":{},"所":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"。":{"docs":{},"当":{"docs":{},"在":{"docs":{},"p":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"*":{"docs":{},"时":{"docs":{},"，":{"docs":{},"将":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"i":{"docs":{},"，":{"docs":{},"代":{"docs":{},"表":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"只":{"docs":{},"匹":{"docs":{},"配":{"0":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"窗":{"docs":{},"口":{"docs":{},"左":{"docs":{},"右":{"docs":{},"边":{"docs":{},"界":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"（":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"）":{"docs":{},"和":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"）":{"docs":{},"。":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"时":{"docs":{},"，":{"docs":{},"设":{"docs":{},"置":{"docs":{},"一":{"docs":{},"个":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"上":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"（":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"则":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"）":{"docs":{},"。":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"左":{"docs":{},"边":{"docs":{},"界":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"上":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"位":{"docs":{},"置":{"docs":{},"或":{"docs":{},"之":{"docs":{},"后":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"才":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"每":{"docs":{},"一":{"docs":{},"步":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"时":{"docs":{},"将":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"更":{"docs":{},"新":{"docs":{},"成":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"上":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"但":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"本":{"docs":{},"身":{"docs":{},"就":{"docs":{},"已":{"docs":{},"经":{"docs":{},"在":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"上":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"之":{"docs":{},"后":{"docs":{},"了":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"此":{"docs":{},"时":{"docs":{},"就":{"docs":{},"无":{"docs":{},"需":{"docs":{},"再":{"docs":{},"更":{"docs":{},"新":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"。":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"三":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},",":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}}}}}}}}},"一":{"docs":{},"对":{"docs":{},"值":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"输":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"反":{"docs":{},"转":{"docs":{},"该":{"docs":{},"链":{"docs":{},"表":{"docs":{},"并":{"docs":{},"输":{"docs":{},"出":{"docs":{},"反":{"docs":{},"转":{"docs":{},"后":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"请":{"docs":{},"在":{"docs":{},"该":{"docs":{},"类":{"docs":{},"型":{"docs":{},"中":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"能":{"docs":{},"够":{"docs":{},"得":{"docs":{},"到":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"放":{"docs":{},"在":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}},"更":{"docs":{},"高":{"docs":{},"效":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"：":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"则":{"docs":{},"为":{"docs":{},"：":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}},"公":{"docs":{},"式":{"docs":{},"：":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}},"变":{"docs":{},"迁":{"docs":{},"公":{"docs":{},"式":{"docs":{},"为":{"docs":{},"d":{"docs":{},"p":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}}}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}}}}}},"该":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}}}}}}}}}},"题":{"docs":{},"的":{"docs":{},"难":{"docs":{},"点":{"docs":{},"在":{"docs":{},"于":{"docs":{},"如":{"docs":{},"何":{"docs":{},"在":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"内":{"docs":{},"将":{"docs":{},"各":{"docs":{},"个":{"docs":{},"正":{"docs":{},"数":{"docs":{},"归":{"docs":{},"位":{"docs":{},"。":{"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"对":{"1":{"2":{"1":{"docs":{},"，":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005}}}},"docs":{}},"docs":{}},"docs":{}}}}},"进":{"docs":{},"阶":{"docs":{},":":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"：":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"分":{"docs":{},"割":{"docs":{},"就":{"docs":{},"可":{"docs":{},"将":{"docs":{"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}}}}}}}}}}},"，":{"1":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}}},"docs":{"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"二分查找/300. 最长上升子序列.html":{"ref":"二分查找/300. 最长上升子序列.html","tf":0.006060606060606061}}}}}},"且":{"docs":{},"整":{"docs":{},"数":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}}},"使":{"docs":{},"得":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}}},"找":{"docs":{},"出":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"满":{"docs":{},"足":{"docs":{},"其":{"docs":{},"和":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"乘":{"docs":{},"积":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"（":{"docs":{},"该":{"docs":{},"序":{"docs":{},"列":{"docs":{},"至":{"docs":{},"少":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"）":{"docs":{},"。":{"docs":{"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"支":{"docs":{},"持":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}}}}},"交":{"docs":{},"换":{"docs":{},"它":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"将":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"扰":{"docs":{},"乱":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}},"即":{"docs":{},"计":{"docs":{},"算":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}},"求":{"1":{"docs":{},"～":{"docs":{},"n":{"docs":{},"这":{"docs":{},"n":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"十":{"docs":{},"进":{"docs":{},"制":{"docs":{},"表":{"docs":{},"示":{"docs":{},"中":{"1":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}},"*":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.05921052631578947},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.014925373134328358},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.06666666666666667},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.08280254777070063},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.09022556390977443},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.05825242718446602},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.06666666666666667},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.0625},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.03296703296703297},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.057534246575342465},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.04242424242424243},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.05555555555555555},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.0660377358490566},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.07608695652173914},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.05},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.040697674418604654},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.04827586206896552},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.021897810218978103},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.022388059701492536},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.05511811023622047},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.05426356589147287},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.08163265306122448},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.050359712230215826},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.05303030303030303},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.05357142857142857},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.029411764705882353},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.050359712230215826}},"/":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.013605442176870748},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.01824817518248175},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.029411764705882353},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}}}},"。":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}},"*":{"docs":{},"/":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}},"=":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}}}}}},"下":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}},"面":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"很":{"docs":{},"有":{"docs":{},"效":{"docs":{},"地":{"docs":{},"求":{"docs":{},"出":{"docs":{},"根":{"docs":{},"号":{"docs":{},"a":{"docs":{},"的":{"docs":{},"近":{"docs":{},"似":{"docs":{},"值":{"docs":{},"：":{"docs":{},"首":{"docs":{},"先":{"docs":{},"随":{"docs":{},"便":{"docs":{},"猜":{"docs":{},"一":{"docs":{},"个":{"docs":{},"近":{"docs":{},"似":{"docs":{},"值":{"docs":{},"x":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"不":{"docs":{},"断":{"docs":{},"令":{"docs":{},"x":{"docs":{},"等":{"docs":{},"于":{"docs":{},"x":{"docs":{},"和":{"docs":{},"a":{"docs":{},"/":{"docs":{},"x":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"数":{"docs":{},"，":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"个":{"docs":{},"六":{"docs":{},"七":{"docs":{},"次":{"docs":{},"后":{"docs":{},"x":{"docs":{},"的":{"docs":{},"值":{"docs":{},"就":{"docs":{},"已":{"docs":{},"经":{"docs":{},"相":{"docs":{},"当":{"docs":{},"精":{"docs":{},"确":{"docs":{},"了":{"docs":{},"。":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"是":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}},"展":{"docs":{},"示":{"docs":{},"了":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"转":{"docs":{},"化":{"docs":{},"成":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"“":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"”":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"则":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"健":{"docs":{},"康":{"docs":{},"点":{"docs":{},"数":{"docs":{},"至":{"docs":{},"少":{"docs":{},"为":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}},"牛":{"docs":{},"顿":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"法":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}}}}}}}}}}}}}},"二":{"docs":{},"分":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"缩":{"docs":{},"减":{"docs":{},"到":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"二分查找/153. 寻找旋转排序数组中的最小值.html":{"ref":"二分查找/153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"ref":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","tf":0.014925373134328358}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"一":{"docs":{},"下":{"docs":{},"排":{"docs":{},"除":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"。":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"法":{"docs":{},"。":{"docs":{},"在":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"向":{"docs":{},"右":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"左":{"docs":{},"指":{"docs":{},"针":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"在":{"docs":{},"区":{"docs":{},"间":{"docs":{},"和":{"docs":{},"大":{"docs":{},"于":{"docs":{},"s":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"不":{"docs":{},"断":{"docs":{},"地":{"docs":{},"向":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"靠":{"docs":{},"近":{"docs":{},"，":{"docs":{},"每":{"docs":{},"更":{"docs":{},"新":{"docs":{},"一":{"docs":{},"次":{"docs":{},"区":{"docs":{},"间":{"docs":{},"长":{"docs":{},"度":{"docs":{},"就":{"docs":{},"比":{"docs":{},"较":{"docs":{},"一":{"docs":{},"下":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"最":{"docs":{},"短":{"docs":{},"区":{"docs":{},"间":{"docs":{},"。":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"找":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"中":{"docs":{},"点":{"docs":{},"。":{"docs":{},"中":{"docs":{},"点":{"docs":{},"节":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"左":{"docs":{},"链":{"docs":{},"表":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"的":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"右":{"docs":{},"链":{"docs":{},"表":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"的":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"将":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"初":{"docs":{},"始":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"方":{"docs":{},"便":{"docs":{},"跟":{"docs":{},"踪":{"docs":{},"其":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"。":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}}}}},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"题":{"docs":{},"也":{"docs":{},"符":{"docs":{},"合":{"docs":{},"要":{"docs":{},"求":{"docs":{},"，":{"docs":{},"本":{"docs":{},"题":{"docs":{},"中":{"docs":{},"递":{"docs":{},"归":{"docs":{},"程":{"docs":{},"序":{"docs":{},"占":{"docs":{},"用":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"空":{"docs":{},"间":{"docs":{},"不":{"docs":{},"算":{"docs":{},"做":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"。":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"下":{"docs":{},"列":{"docs":{},"操":{"docs":{},"作":{"docs":{},"：":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"实":{"docs":{},"现":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"下":{"docs":{},"列":{"docs":{},"操":{"docs":{},"作":{"docs":{},"：":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}},"下":{"docs":{},"进":{"docs":{},"行":{"docs":{},"修":{"docs":{},"改":{"docs":{},"。":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}}}},"与":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"将":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}}}}}},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"次":{"docs":{},"数":{"docs":{},"是":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"分":{"docs":{},"布":{"docs":{},"的":{"docs":{},"。":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}}}}}}}}}},"？":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}},"，":{"docs":{},"复":{"docs":{},"制":{"docs":{},"一":{"docs":{},"个":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"在":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"除":{"docs":{},"了":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"该":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"，":{"docs":{},"调":{"docs":{},"用":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}}}}}}}}},"另":{"docs":{},"外":{"docs":{},"为":{"docs":{},"了":{"docs":{},"排":{"docs":{},"除":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"本":{"docs":{},"题":{"docs":{},"中":{"docs":{},"需":{"docs":{},"要":{"docs":{},"选":{"docs":{},"择":{"docs":{},"右":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"。":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}},"防":{"docs":{},"止":{"docs":{},"整":{"docs":{},"型":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"出":{"docs":{},"现":{"docs":{},"，":{"docs":{},"循":{"docs":{},"环":{"docs":{},"终":{"docs":{},"止":{"docs":{},"条":{"docs":{},"件":{"docs":{},"判":{"docs":{},"定":{"docs":{},"代":{"docs":{},"码":{"docs":{},"与":{"docs":{},"二":{"docs":{},"分":{"docs":{},"法":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"（":{"docs":{},"r":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"题":{"docs":{},"中":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"k":{"docs":{},"值":{"docs":{},"特":{"docs":{},"别":{"docs":{},"大":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"做":{"docs":{},"一":{"docs":{},"定":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{},"当":{"docs":{},"k":{"docs":{},"值":{"docs":{},"大":{"docs":{},"于":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"一":{"docs":{},"半":{"docs":{},"长":{"docs":{},"度":{"docs":{},"时":{"docs":{},"，":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"不":{"docs":{},"再":{"docs":{},"对":{"docs":{},"交":{"docs":{},"易":{"docs":{},"次":{"docs":{},"数":{"docs":{},"进":{"docs":{},"行":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"1":{"2":{"2":{"docs":{},"题":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}},"非":{"docs":{},"负":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}}}},"空":{"docs":{},"的":{"docs":{},"，":{"docs":{},"且":{"docs":{},"二":{"docs":{},"者":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}},"求":{"docs":{},"和":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"这":{"docs":{},"道":{"docs":{},"题":{"docs":{},"基":{"docs":{},"础":{"docs":{},"上":{"docs":{},"的":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"组":{"docs":{},"前":{"docs":{},"i":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"和":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"[":{"docs":{},"i":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}}},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"值":{"docs":{},"小":{"docs":{},"于":{"docs":{},"或":{"docs":{},"等":{"docs":{},"于":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"不":{"docs":{},"是":{"docs":{},"子":{"docs":{},"串":{"docs":{},"。":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}}}}}}}}},"该":{"docs":{},"条":{"docs":{},"件":{"docs":{},"下":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}},"压":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"但":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}},"树":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"。":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}}}},"指":{"docs":{},"这":{"docs":{},"样":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"：":{"docs":{},"它":{"docs":{},"是":{"docs":{},"由":{"docs":{},"原":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"在":{"docs":{},"不":{"docs":{},"改":{"docs":{},"变":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"相":{"docs":{},"对":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"删":{"docs":{},"除":{"docs":{},"某":{"docs":{},"些":{"docs":{},"字":{"docs":{},"符":{"docs":{},"（":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"删":{"docs":{},"除":{"docs":{},"任":{"docs":{},"何":{"docs":{},"字":{"docs":{},"符":{"docs":{},"）":{"docs":{},"后":{"docs":{},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{},"新":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"否":{"docs":{},"是":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}},"由":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105}}}},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"空":{"docs":{},"格":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"在":{"docs":{},"字":{"docs":{},"典":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"。":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"。":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}}}}},"任":{"docs":{},"何":{"docs":{},"给":{"docs":{},"定":{"docs":{"数论/313. 超级丑数.html":{"ref":"数论/313. 超级丑数.html","tf":0.013888888888888888}}}}}},"对":{"docs":{},"称":{"docs":{},"的":{"docs":{},"。":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496}}}}}},"丑":{"docs":{},"数":{"docs":{},"。":{"docs":{"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}}}}},"前":{"docs":{"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}}},"某":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"压":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"序":{"docs":{},"列":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}}}}}}}}}},"由":{"docs":{},"于":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"小":{"docs":{},"数":{"docs":{},"部":{"docs":{},"分":{"docs":{},"将":{"docs":{},"被":{"docs":{},"舍":{"docs":{},"去":{"docs":{},"。":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"只":{"docs":{},"保":{"docs":{},"留":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"小":{"docs":{},"数":{"docs":{},"部":{"docs":{},"分":{"docs":{},"将":{"docs":{},"被":{"docs":{},"舍":{"docs":{},"去":{"docs":{},"。":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}}},"docs":{}}}},"(":{"2":{"docs":{},"n":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}}},"docs":{}}}},"计":{"docs":{},"算":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}}},"从":{"docs":{},"根":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"之":{"docs":{},"和":{"docs":{},"。":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"中":{"docs":{},"最":{"docs":{},"长":{"docs":{},"单":{"docs":{},"词":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}},"在":{"docs":{},"不":{"docs":{},"触":{"docs":{},"动":{"docs":{},"警":{"docs":{},"报":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"小":{"docs":{},"偷":{"docs":{},"一":{"docs":{},"晚":{"docs":{},"能":{"docs":{},"够":{"docs":{},"盗":{"docs":{},"取":{"docs":{},"的":{"docs":{},"最":{"docs":{},"高":{"docs":{},"金":{"docs":{},"额":{"docs":{},"。":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"最":{"docs":{},"靠":{"docs":{},"右":{"docs":{},"的":{"1":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}},"docs":{}}}}}}}},"当":{"docs":{},"前":{"docs":{},"行":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"放":{"docs":{},"置":{"docs":{},"皇":{"docs":{},"后":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"本":{"docs":{},"题":{"docs":{},"中":{"docs":{},"排":{"docs":{},"除":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"平":{"docs":{},"方":{"docs":{},"大":{"docs":{},"于":{"docs":{},"输":{"docs":{},"入":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"那":{"docs":{},"它":{"docs":{},"一":{"docs":{},"定":{"docs":{},"不":{"docs":{},"是":{"docs":{},"结":{"docs":{},"果":{"docs":{},"值":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"排":{"docs":{},"除":{"docs":{},"。":{"docs":{"二分查找/69. X的平方根.html":{"ref":"二分查找/69. X的平方根.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"结":{"docs":{},"构":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}},"?":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}},"b":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.05084745762711865},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.020100502512562814},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.021739130434782608},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.02877697841726619}},"[":{"0":{"docs":{},"]":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}},")":{"docs":{},")":{"docs":{},";":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}}}},"1":{"docs":{},"]":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}},"docs":{},"j":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.01020408163265306}},"]":{"docs":{},")":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}},";":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.011904761904761904},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.014492753623188406},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.015748031496062992},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.014388489208633094},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.024691358024691357},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.00980392156862745},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.031746031746031744}},"[":{"docs":{},"]":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}},"[":{"docs":{},"]":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.024096385542168676},"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"]":{"docs":{},";":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}}}}}}}}},"s":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105}}}}}}}}}}}},"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}},"]":{"docs":{},"[":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},";":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}},";":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}}}}}}}}},"docs":{}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.017857142857142856}}}}}}}}},")":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.02877697841726619}},";":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}},"(":{"docs":{},")":{"docs":{},")":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}}}}}}}}},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}}}}},"/":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}},"i":{"docs":{},"g":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.012121212121212121},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.018867924528301886},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}},"t":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}},"a":{"docs":{},"o":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},";":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}}}}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}},"e":{"docs":{},";":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755}}},";":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.011320754716981131}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.014545454545454545}},",":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}}}}}}}}}}},";":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755}}}}}}}}}}}}}}},"y":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}}}},"s":{"docs":{},"t":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.013605442176870748}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}},")":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}},"[":{"docs":{},"i":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.009216589861751152}}},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"y":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}},";":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"存":{"docs":{},"储":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"路":{"docs":{},"径":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}}}}},",":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}},"b":{"docs":{},"g":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.03225806451612903}}}}}}}},"。":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}}},"）":{"docs":{},"记":{"docs":{},"录":{"docs":{},"了":{"docs":{},"两":{"docs":{},"人":{"docs":{},"各":{"docs":{},"自":{"docs":{},"的":{"docs":{},"棋":{"docs":{},"子":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}}}}}},"，":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{},"该":{"docs":{},"游":{"docs":{},"戏":{"docs":{},"的":{"docs":{},"获":{"docs":{},"胜":{"docs":{},"者":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"游":{"docs":{},"戏":{"docs":{},"以":{"docs":{},"平":{"docs":{},"局":{"docs":{},"结":{"docs":{},"束":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"a":{"docs":{},"的":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}}}}}}},"：":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}},"h":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}},")":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},"{":{"docs":{},"{":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285}}}},";":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.014545454545454545},"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.02531645569620253},"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.016},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0072992700729927005},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}}},">":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.02}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.013605442176870748}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338}},",":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.019417475728155338}}}}}}}}}}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}}}}}}},"n":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495}},")":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.013157894736842105},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.01098901098901099},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.012195121951219513},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.014652014652014652},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.022556390977443608},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.03296703296703297},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.02},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748}},";":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}},",":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374}},";":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}}}}}}}}}}},",":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.007518796992481203},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}}}},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}}}}}}}},"s":{"docs":{},",":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.017857142857142856}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943}}}}}},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},",":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}},"2":{"docs":{},",":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}},"docs":{},"u":{"docs":{},"e":{"docs":{},">":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}},"s":{"docs":{},",":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338}}},"t":{"docs":{},"r":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}},",":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}}}}},"r":{"docs":{},"e":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}},".":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}},"l":{"docs":{},"d":{"1":{"docs":{"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}},"2":{"docs":{"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}},"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"代":{"docs":{},"表":{"docs":{},"当":{"docs":{},"前":{"docs":{},"处":{"docs":{},"于":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"利":{"docs":{},"润":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"处":{"docs":{},"于":{"docs":{},"休":{"docs":{},"息":{"docs":{},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{},"的":{"docs":{},"利":{"docs":{},"润":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"处":{"docs":{},"于":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"利":{"docs":{},"润":{"docs":{},"。":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"只":{"docs":{},"能":{"docs":{},"从":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"得":{"docs":{},"来":{"docs":{},"。":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"或":{"docs":{},"者":{"docs":{},"休":{"docs":{},"息":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"得":{"docs":{},"来":{"docs":{},"。":{"docs":{},"休":{"docs":{},"息":{"docs":{},"状":{"docs":{},"态":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"休":{"docs":{},"息":{"docs":{},"状":{"docs":{},"态":{"docs":{},"或":{"docs":{},"者":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"得":{"docs":{},"来":{"docs":{},"。":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"和":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"都":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"为":{"docs":{},"负":{"docs":{},"无":{"docs":{},"穷":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"和":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.023255813953488372}}}}}},"出":{"docs":{},"现":{"docs":{},"。":{"docs":{},"当":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"信":{"docs":{},"封":{"docs":{},"的":{"docs":{},"宽":{"docs":{},"度":{"docs":{},"和":{"docs":{},"高":{"docs":{},"度":{"docs":{},"都":{"docs":{},"比":{"docs":{},"这":{"docs":{},"个":{"docs":{},"信":{"docs":{},"封":{"docs":{},"大":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"信":{"docs":{},"封":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"放":{"docs":{},"进":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"信":{"docs":{},"封":{"docs":{},"里":{"docs":{},"，":{"docs":{},"如":{"docs":{},"同":{"docs":{},"俄":{"docs":{},"罗":{"docs":{},"斯":{"docs":{},"套":{"docs":{},"娃":{"docs":{},"一":{"docs":{},"样":{"docs":{},"。":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}}}}}},"组":{"docs":{},"合":{"docs":{},"为":{"docs":{},":":{"docs":{"二分查找/354. 俄罗斯套娃信封问题.html":{"ref":"二分查找/354. 俄罗斯套娃信封问题.html","tf":0.012195121951219513}}}}}},",":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}},"与":{"docs":{"线性表/560. 和为K的子数组.html":{"ref":"线性表/560. 和为K的子数组.html","tf":0.014285714285714285},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}},"&":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.05194805194805195},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}},"&":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.005479452054794521},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.02185792349726776},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0072992700729927005},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.015748031496062992},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.02185792349726776},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.007352941176470588},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}}},"]":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428},"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.011904761904761904},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}},",":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}}},"主":{"docs":{},"要":{"docs":{},"思":{"docs":{},"路":{"docs":{},"就":{"docs":{},"是":{"docs":{},"将":{"3":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"转":{"docs":{},"化":{"docs":{},"成":{"2":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"：":{"docs":{},"首":{"docs":{},"先":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"按":{"docs":{},"照":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"固":{"docs":{},"定":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"数":{"docs":{},"去":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"前":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"重":{"docs":{},"复":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}},"还":{"docs":{},"是":{"docs":{},"借":{"docs":{},"助":{"docs":{},"快":{"docs":{},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"重":{"docs":{},"点":{"docs":{},"说":{"docs":{},"下":{"docs":{},"快":{"docs":{},"排":{"docs":{},"中":{"docs":{},"划":{"docs":{},"分":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"满":{"docs":{},"足":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"三":{"docs":{},"元":{"docs":{},"组":{"docs":{},"集":{"docs":{},"合":{"docs":{},"为":{"docs":{},"：":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}}}}}}}}}}}}},"？":{"docs":{},"找":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"满":{"docs":{},"足":{"docs":{},"条":{"docs":{},"件":{"docs":{},"且":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"三":{"docs":{},"元":{"docs":{},"组":{"docs":{},"。":{"docs":{"线性表/15. 三数之和.html":{"ref":"线性表/15. 三数之和.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}},"%":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304},"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}},"=":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{"线性表/523 连续子数组和.html":{"ref":"线性表/523 连续子数组和.html","tf":0.010869565217391304}}}}},"有":{"docs":{},"效":{"docs":{},"答":{"docs":{},"案":{"docs":{},"。":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}},"的":{"docs":{},"格":{"docs":{},"雷":{"docs":{},"编":{"docs":{},"码":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}}}}}}}}}},"正":{"docs":{},"确":{"docs":{},"答":{"docs":{},"案":{"docs":{},"。":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}}}}}},"可":{"docs":{},"能":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"数":{"docs":{},"对":{"docs":{},"都":{"docs":{},"被":{"docs":{},"返":{"docs":{},"回":{"docs":{},":":{"docs":{},"[":{"1":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}},"只":{"docs":{},"有":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}},"≤":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.0196078431372549},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.03333333333333333},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.019230769230769232}}},"划":{"docs":{},"分":{"docs":{},"算":{"docs":{},"法":{"docs":{},"有":{"docs":{},"三":{"docs":{},"步":{"docs":{},"：":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}}}}},"总":{"docs":{},"是":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"，":{"1":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}},"docs":{},"且":{"docs":{"线性表/215. 数组中的第K个最大元素.html":{"ref":"线性表/215. 数组中的第K个最大元素.html","tf":0.00980392156862745}}}}}}},"合":{"docs":{},"理":{"docs":{},"的":{"docs":{},"，":{"docs":{},"且":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}}}},"用":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.010050251256281407}}}},"利":{"docs":{},"润":{"docs":{},":":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}}}}}},"≥":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333}}},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{"线性表/209. 长度最小的子数组.html":{"ref":"线性表/209. 长度最小的子数组.html","tf":0.008333333333333333},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806}}}},"序":{"docs":{},"列":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"删":{"docs":{},"去":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"的":{"docs":{},"某":{"docs":{},"些":{"docs":{},"字":{"docs":{},"符":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"能":{"docs":{},"改":{"docs":{},"变":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"相":{"docs":{},"对":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{},"空":{"docs":{},"序":{"docs":{},"列":{"docs":{},"为":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"任":{"docs":{},"何":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"为":{"docs":{},"其":{"docs":{},"自":{"docs":{},"身":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"串":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}},"g":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.015544041450777202},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}},"e":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}}}}}}}}}}}}}}}},"w":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},":":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}}},"docs":{},"i":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}},"n":{"docs":{},"t":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.012121212121212121}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}},"a":{"docs":{},"p":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.016}},",":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}}},"m":{"docs":{},"e":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952},"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857}}}}},"u":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757}}},"r":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}},"a":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.013333333333333334}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}}}},"l":{"docs":{},"=":{"docs":{},"c":{"docs":{},"l":{"docs":{},";":{"docs":{},"j":{"docs":{"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385}}}}}}}}},"i":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.024691358024691357}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"1":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.03636363636363636}},",":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}},"2":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.02727272727272727}},")":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}},"，":{"docs":{},"计":{"docs":{},"算":{"docs":{},"出":{"docs":{},"将":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}}}}},"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}},":":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}},")":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.014545454545454545}}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}},"i":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.016483516483516484},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.028037383177570093}},")":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.02197802197802198},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.018691588785046728}},")":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}},"，":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"增":{"docs":{},"加":{"docs":{},"空":{"docs":{},"格":{"docs":{},"来":{"docs":{},"构":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"句":{"docs":{},"子":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"句":{"docs":{},"子":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"都":{"docs":{},"在":{"docs":{},"词":{"docs":{},"典":{"docs":{},"中":{"docs":{},"。":{"docs":{},"返":{"docs":{},"回":{"docs":{},"所":{"docs":{},"有":{"docs":{},"这":{"docs":{},"些":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"句":{"docs":{},"子":{"docs":{},"。":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"判":{"docs":{},"定":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}},"z":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.011904761904761904},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01092896174863388},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01092896174863388}},"h":{"docs":{},"a":{"docs":{},"o":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}}},"n":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.01639344262295082}}}}},"i":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}},"u":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.00510204081632653}},"i":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}},"i":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.023809523809523808}}}}}},"则":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"是":{"docs":{"线性表/4. 寻找两个有序数组的中位数.html":{"ref":"线性表/4. 寻找两个有序数组的中位数.html","tf":0.01020408163265306}}}}}},"返":{"docs":{},"回":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}}},"不":{"docs":{},"是":{"docs":{},"镜":{"docs":{},"像":{"docs":{},"对":{"docs":{},"称":{"docs":{},"的":{"docs":{},":":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496}}}}}}}}}}},"来":{"docs":{},"源":{"docs":{},"：":{"docs":{},"力":{"docs":{},"扣":{"docs":{},"（":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"）":{"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"链":{"docs":{},"表":{"docs":{},"尾":{"docs":{},"连":{"docs":{},"接":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"（":{"docs":{},"索":{"docs":{},"引":{"docs":{},"从":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"找":{"docs":{},"其":{"docs":{},"中":{"docs":{},"第":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}}},"著":{"docs":{},"作":{"docs":{},"权":{"docs":{},"归":{"docs":{},"领":{"docs":{},"扣":{"docs":{},"网":{"docs":{},"络":{"docs":{},"所":{"docs":{},"有":{"docs":{},"。":{"docs":{},"商":{"docs":{},"业":{"docs":{},"转":{"docs":{},"载":{"docs":{},"请":{"docs":{},"联":{"docs":{},"系":{"docs":{},"官":{"docs":{},"方":{"docs":{},"授":{"docs":{},"权":{"docs":{},"，":{"docs":{},"非":{"docs":{},"商":{"docs":{},"业":{"docs":{},"转":{"docs":{},"载":{"docs":{},"请":{"docs":{},"注":{"docs":{},"明":{"docs":{},"出":{"docs":{},"处":{"docs":{},"。":{"docs":{"线性表/41. 缺失的第一个正数.html":{"ref":"线性表/41. 缺失的第一个正数.html","tf":0.02},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502},"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182},"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943},"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904},"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857},"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667},"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.016},"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.007936507936507936},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282},"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},")":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},",":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326}}}}}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}},")":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},",":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}}}}}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.012195121951219513},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102}}},")":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},")":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326}}},";":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}},";":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}},")":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}},";":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.012195121951219513},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.010101010101010102},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}},";":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756},"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052},"链表/86. 分隔链表.html":{"ref":"链表/86. 分隔链表.html","tf":0.011111111111111112},"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.012738853503184714},"链表/206. 反转链表.html":{"ref":"链表/206. 反转链表.html","tf":0.015037593984962405},"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.009708737864077669},"链表/92. 反转链表 II.html":{"ref":"链表/92. 反转链表 II.html","tf":0.011111111111111112},"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.00821917808219178},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.010869565217391304},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.012195121951219513},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.005376344086021506},"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.013605442176870748},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.013333333333333334},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.023255813953488372}}},"u":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}},"e":{"docs":{},")":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179}}},",":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179}}},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179}}},":":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}}}},")":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/8.二叉树的下一个节点.html":{"ref":"剑指offer/8.二叉树的下一个节点.html","tf":0.011627906976744186}}},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"对":{"docs":{},"数":{"docs":{},"列":{"docs":{},"进":{"docs":{},"行":{"docs":{},"修":{"docs":{},"改":{"docs":{},"。":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895},"链表/143. 重排链表.html":{"ref":"链表/143. 重排链表.html","tf":0.005494505494505495},"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.009433962264150943},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.016304347826086956},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008},"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0072992700729927005},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.01639344262295082}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}},"e":{"docs":{},"d":{"1":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}},",":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.01090909090909091}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},",":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},",":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}},"2":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}},",":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.01090909090909091}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},",":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}},"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.016}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}}}},"您":{"docs":{},"将":{"docs":{},"获":{"docs":{},"得":{"docs":{},"一":{"docs":{},"个":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"除":{"docs":{},"了":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"和":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"它":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"指":{"docs":{},"向":{"docs":{},"单":{"docs":{},"独":{"docs":{},"的":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"子":{"docs":{},"列":{"docs":{},"表":{"docs":{},"可":{"docs":{},"能":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"子":{"docs":{},"项":{"docs":{},"，":{"docs":{},"依":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"，":{"docs":{},"生":{"docs":{},"成":{"docs":{},"多":{"docs":{},"级":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"示":{"docs":{},"例":{"docs":{},"所":{"docs":{},"示":{"docs":{},"。":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.022388059701492536},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.061224489795918366},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.015873015873015872},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.018691588785046728},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.036585365853658534},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.007352941176470588}},"扁":{"docs":{},"平":{"docs":{},"化":{"docs":{},"后":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"链表/430. 扁平化多级双向链表.html":{"ref":"链表/430. 扁平化多级双向链表.html","tf":0.006097560975609756}}}}}}}}}}}}}}},":":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008}}},"它":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}},"符":{"docs":{},"合":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"最":{"docs":{},"少":{"docs":{},"分":{"docs":{},"割":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818}}}}}}}}}}}}}},"获":{"docs":{},"得":{"docs":{},"利":{"docs":{},"润":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"前":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.011363636363636364}}}}}}},"其":{"docs":{},"层":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"果":{"docs":{},"：":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}}}}}},"链":{"docs":{},"表":{"docs":{"剑指offer/22. 链表中倒数第k个节点.html":{"ref":"剑指offer/22. 链表中倒数第k个节点.html","tf":0.008928571428571428}}}},"栈":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"空":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}},"队":{"docs":{},"列":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"空":{"docs":{},"。":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}},"首":{"docs":{},"部":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}},"目":{"docs":{},"前":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"。":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}}}}}}}}}}},"事":{"docs":{},"件":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}}}}}}}}}}}}}}}}}}}}}},"提":{"docs":{},"示":{"docs":{},"：":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663},"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756},"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704},"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888},"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112},"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667},"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547},"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}},":":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549}}}}},"节":{"docs":{},"点":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.007326007326007326},"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186}},"总":{"docs":{},"数":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.007194244604316547}}}}}},"要":{"docs":{},"求":{"docs":{},"返":{"docs":{},"回":{"docs":{},"这":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"深":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"。":{"docs":{"链表/138. 复制带随机指针的链表.html":{"ref":"链表/138. 复制带随机指针的链表.html","tf":0.003663003663003663}}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"交":{"docs":{},"？":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"）":{"docs":{},"。":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}},"头":{"docs":{},"。":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.013333333333333334}}}}},"扩":{"docs":{},"展":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"链表/142. 环形链表 II.html":{"ref":"链表/142. 环形链表 II.html","tf":0.006578947368421052}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755},"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}},"e":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}},"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}},"e":{"docs":{},")":{"docs":{},":":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}},"i":{"docs":{},",":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}},")":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}},"s":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725},"剑指offer/3. 数组中的重复数字.html":{"ref":"剑指offer/3. 数组中的重复数字.html","tf":0.01282051282051282}},"e":{"docs":{},"r":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.010948905109489052}},"'":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}},",":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"：":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"完":{"docs":{},"全":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"才":{"docs":{},"算":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"成":{"docs":{},"功":{"docs":{},"。":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}},"点":{"docs":{},"。":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}},"笔":{"docs":{"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}},"作":{"docs":{},"者":{"docs":{},"：":{"docs":{},"k":{"docs":{},"a":{"docs":{},"o":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}},"为":{"docs":{},"棋":{"docs":{},"子":{"docs":{},"。":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}},"，":{"docs":{},"而":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"玩":{"docs":{},"家":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}}}},"去":{"docs":{},"除":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.007462686567164179}}}},"否":{"docs":{},"则":{"docs":{},"得":{"docs":{},"到":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}}}},"首":{"docs":{},"先":{"docs":{},"得":{"docs":{},"到":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"那":{"docs":{},"一":{"docs":{},"串":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"找":{"docs":{},"出":{"docs":{},"和":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"频":{"docs":{},"率":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"其":{"docs":{},"他":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"这":{"docs":{},"一":{"docs":{},"串":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"里":{"docs":{},"去":{"docs":{},"掉":{"docs":{},"这":{"docs":{},"个":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"频":{"docs":{},"率":{"docs":{},"变":{"docs":{},"了":{"docs":{},"，":{"docs":{},"+":{"1":{"docs":{},"了":{"docs":{},"。":{"docs":{"链表/460. LFU缓存.html":{"ref":"链表/460. LFU缓存.html","tf":0.0037313432835820895}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"如":{"docs":{},"何":{"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"交":{"docs":{},"换":{"docs":{},"两":{"docs":{},"个":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"设":{"docs":{},"置":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"指":{"docs":{},"向":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"指":{"docs":{},"向":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"小":{"docs":{},"于":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"此":{"docs":{},"时":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"是":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"这":{"docs":{},"取":{"docs":{},"决":{"docs":{},"于":{"docs":{},"后":{"docs":{},"续":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"会":{"docs":{},"不":{"docs":{},"会":{"docs":{},"再":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"小":{"docs":{},"于":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"部":{"docs":{},"分":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"表":{"docs":{},"（":{"docs":{},"p":{"docs":{},"m":{"docs":{},"t":{"docs":{},"）":{"docs":{},"的":{"docs":{},"含":{"docs":{},"义":{"docs":{},"。":{"docs":{},"p":{"docs":{},"m":{"docs":{},"t":{"docs":{},"表":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"位":{"docs":{},"代":{"docs":{},"表":{"docs":{},"模":{"docs":{},"式":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"从":{"docs":{},"开":{"docs":{},"头":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"位":{"docs":{},"这":{"docs":{},"一":{"docs":{},"段":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"公":{"docs":{},"共":{"docs":{},"前":{"docs":{},"后":{"docs":{},"缀":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"计":{"docs":{},"算":{"docs":{},"方":{"docs":{},"便":{"docs":{},"，":{"docs":{},"将":{"docs":{},"p":{"docs":{},"m":{"docs":{},"t":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"位":{"docs":{},"后":{"docs":{},"移":{"docs":{},"一":{"docs":{},"位":{"docs":{},"（":{"docs":{},"每":{"docs":{},"一":{"docs":{},"位":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"失":{"docs":{},"败":{"docs":{},"后":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"到":{"docs":{},"前":{"docs":{},"面":{"docs":{},"一":{"docs":{},"位":{"docs":{},"的":{"docs":{},"p":{"docs":{},"m":{"docs":{},"t":{"docs":{},"值":{"docs":{},"）":{"docs":{},"，":{"docs":{},"前":{"docs":{},"面":{"docs":{},"填":{"docs":{},"上":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"\\":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357},"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.02531645569620253},"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.030303030303030304},"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.03968253968253968},"二叉树/114. 二叉树展开为链表.html":{"ref":"二叉树/114. 二叉树展开为链表.html","tf":0.07547169811320754},"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.021739130434782608},"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.032},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.05747126436781609},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.016853932584269662},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.06217616580310881},"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.041379310344827586},"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.047244094488188976},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.014388489208633094},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.015151515151515152},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"ref":"剑指offer/32 - III. 从上到下打印二叉树 III.html","tf":0.014388489208633094},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.031746031746031744}}},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"答":{"docs":{},"案":{"docs":{},"是":{"docs":{},"：":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}},"docs":{}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"二叉树/110. 平衡二叉树.html":{"ref":"二叉树/110. 平衡二叉树.html","tf":0.007936507936507936}}}}}}}}},"最":{"docs":{},"短":{"docs":{},"转":{"docs":{},"换":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{},"指":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"删":{"docs":{},"除":{"docs":{},"一":{"docs":{},"些":{"docs":{},"（":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"删":{"docs":{},"除":{"docs":{},"）":{"docs":{},"字":{"docs":{},"符":{"docs":{},"且":{"docs":{},"不":{"docs":{},"干":{"docs":{},"扰":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"字":{"docs":{},"符":{"docs":{},"相":{"docs":{},"对":{"docs":{},"位":{"docs":{},"置":{"docs":{},"所":{"docs":{},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{},"新":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{},"（":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"\"":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"“":{"docs":{},"快":{"docs":{},"乐":{"docs":{},"数":{"docs":{},"”":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"次":{"docs":{},"将":{"docs":{},"该":{"docs":{},"数":{"docs":{},"替":{"docs":{},"换":{"docs":{},"为":{"docs":{},"它":{"docs":{},"每":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"平":{"docs":{},"方":{"docs":{},"和":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"重":{"docs":{},"复":{"docs":{},"这":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"直":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"变":{"docs":{},"为":{"docs":{"数论/202. 快乐数.html":{"ref":"数论/202. 快乐数.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"共":{"docs":{},"有":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}}}},"些":{"docs":{},"恶":{"docs":{},"魔":{"docs":{},"抓":{"docs":{},"住":{"docs":{},"了":{"docs":{},"公":{"docs":{},"主":{"docs":{},"（":{"docs":{},"p":{"docs":{},"）":{"docs":{},"并":{"docs":{},"将":{"docs":{},"她":{"docs":{},"关":{"docs":{},"在":{"docs":{},"了":{"docs":{},"地":{"docs":{},"下":{"docs":{},"城":{"docs":{},"的":{"docs":{},"右":{"docs":{},"下":{"docs":{},"角":{"docs":{},"。":{"docs":{},"地":{"docs":{},"下":{"docs":{},"城":{"docs":{},"是":{"docs":{},"由":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"条":{"docs":{},"包":{"docs":{},"含":{"docs":{},"字":{"docs":{},"母":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}}}}}},"道":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"树":{"docs":{},"状":{"docs":{},"d":{"docs":{},"p":{"docs":{},"的":{"docs":{},"题":{"docs":{},"。":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}}}}}}}}}},"定":{"docs":{},"要":{"docs":{},"在":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"新":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}}}}}}}},"直":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"表":{"docs":{},"示":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"个":{"docs":{},"高":{"docs":{},"度":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"：":{"docs":{"链表/109. 有序链表转换二叉搜索树.html":{"ref":"链表/109. 有序链表转换二叉搜索树.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}},"解":{"docs":{},"码":{"docs":{},"为":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.02666666666666667}}}}}}},"是":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.03355704697986577}}}},"当":{"docs":{"链表/25. K 个一组翻转链表难度困难.html":{"ref":"链表/25. K 个一组翻转链表难度困难.html","tf":0.019417475728155338}},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"临":{"docs":{},"时":{"docs":{},"节":{"docs":{},"点":{"docs":{},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"。":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}}}}}}}}}}}}}}},"价":{"docs":{},"格":{"docs":{},"。":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"为":{"docs":{},"负":{"docs":{},"无":{"docs":{},"穷":{"docs":{},"，":{"docs":{},"代":{"docs":{},"表":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"处":{"docs":{},"于":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{},"。":{"docs":{"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"i":{"docs":{},"和":{"docs":{},"j":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"失":{"docs":{},"败":{"docs":{},"时":{"docs":{},"，":{"docs":{},"进":{"docs":{},"行":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"，":{"docs":{},"即":{"docs":{},"重":{"docs":{},"置":{"docs":{},"j":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"增":{"1":{"docs":{},"（":{"docs":{},"代":{"docs":{},"表":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"又":{"docs":{},"多":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"）":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"将":{"docs":{},"i":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"。":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"位":{"docs":{},"数":{"docs":{},"为":{"3":{"docs":{},"时":{"docs":{},"，":{"docs":{},"在":{"docs":{},"所":{"docs":{},"有":{"docs":{},"位":{"docs":{},"数":{"docs":{},"为":{"2":{"docs":{},"的":{"docs":{},"格":{"docs":{},"雷":{"docs":{},"码":{"docs":{},"前":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"0":{"docs":{},"并":{"docs":{},"不":{"docs":{},"会":{"docs":{},"破":{"docs":{},"坏":{"docs":{},"两":{"docs":{},"个":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"仅":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"数":{"docs":{},"的":{"docs":{},"差":{"docs":{},"异":{"docs":{},"这":{"docs":{},"条":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"其":{"docs":{},"值":{"docs":{},"保":{"docs":{},"持":{"docs":{},"不":{"docs":{},"变":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}},"先":{"docs":{},"分":{"docs":{},"治":{"docs":{},"，":{"docs":{},"再":{"docs":{},"合":{"docs":{},"并":{"docs":{},"。":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{"链表/23. 合并K个排序链表.html":{"ref":"链表/23. 合并K个排序链表.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"f":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"进":{"docs":{},"入":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{},"j":{"docs":{},")":{"docs":{},"这":{"docs":{},"个":{"docs":{},"格":{"docs":{},"子":{"docs":{},"前":{"docs":{},"所":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"健":{"docs":{},"康":{"docs":{},"点":{"docs":{},"数":{"docs":{},"。":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"依":{"docs":{},"旧":{"docs":{},"是":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"法":{"docs":{},"。":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}}}}}}}}}}}}},"然":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"上":{"docs":{},"题":{"docs":{},"代":{"docs":{},"码":{"docs":{},"作":{"docs":{},"稍":{"docs":{},"加":{"docs":{},"改":{"docs":{},"动":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"只":{"docs":{},"不":{"docs":{},"过":{"docs":{},"这":{"docs":{},"次":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"循":{"docs":{},"环":{"docs":{},"是":{"docs":{},"在":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"不":{"docs":{},"符":{"docs":{},"合":{"docs":{},"要":{"docs":{},"求":{"docs":{},"时":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"，":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"直":{"docs":{},"到":{"docs":{},"符":{"docs":{},"合":{"docs":{},"要":{"docs":{},"求":{"docs":{},"后":{"docs":{},"成":{"docs":{},"为":{"docs":{},"候":{"docs":{},"选":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}},"序":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"是":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"算":{"docs":{},"法":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"算":{"docs":{},"法":{"docs":{},"完":{"docs":{},"成":{"docs":{},"吗":{"docs":{},"？":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{"二叉树/145. 二叉树的后序遍历.html":{"ref":"二叉树/145. 二叉树的后序遍历.html","tf":0.0027397260273972603},"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"定":{"docs":{},"义":{"docs":{},"两":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"和":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"。":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"代":{"docs":{},"表":{"docs":{},"当":{"docs":{},"前":{"docs":{},"处":{"docs":{},"于":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{},"，":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"代":{"docs":{},"表":{"docs":{},"当":{"docs":{},"前":{"docs":{},"处":{"docs":{},"于":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{},"。":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"或":{"docs":{},"者":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"得":{"docs":{},"来":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"从":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"，":{"docs":{},"则":{"docs":{},"利":{"docs":{},"润":{"docs":{},"保":{"docs":{},"持":{"docs":{},"不":{"docs":{},"变":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"从":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"，":{"docs":{},"利":{"docs":{},"润":{"docs":{},"增":{"docs":{},"加":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"价":{"docs":{},"格":{"docs":{},"。":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"或":{"docs":{},"者":{"docs":{},"初":{"docs":{},"始":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"得":{"docs":{},"来":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"从":{"docs":{},"买":{"docs":{},"入":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"，":{"docs":{},"则":{"docs":{},"利":{"docs":{},"润":{"docs":{},"保":{"docs":{},"持":{"docs":{},"不":{"docs":{},"变":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"从":{"docs":{},"初":{"docs":{},"始":{"docs":{},"状":{"docs":{},"态":{"docs":{},"变":{"docs":{},"迁":{"docs":{},"，":{"docs":{},"则":{"docs":{},"利":{"docs":{},"润":{"docs":{},"为":{"0":{"docs":{"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"变":{"docs":{},"量":{"docs":{},"存":{"docs":{},"储":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"为":{"docs":{},"止":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"价":{"docs":{},"格":{"docs":{},"。":{"docs":{},"计":{"docs":{},"算":{"docs":{},"当":{"docs":{},"前":{"docs":{},"价":{"docs":{},"格":{"docs":{},"和":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"差":{"docs":{},"，":{"docs":{},"并":{"docs":{},"与":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"。":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{},"初":{"docs":{},"始":{"docs":{},"为":{"0":{"docs":{},"。":{"docs":{"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"\"":{"0":{"docs":{},"\"":{"docs":{},";":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}},".":{"5":{"docs":{},"\"":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}},"docs":{},"(":{"6":{"docs":{},")":{"docs":{},"\"":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}},"docs":{}}}},"1":{"0":{"2":{"docs":{},"\"":{"docs":{"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549}}}},"docs":{}},"2":{"docs":{},"\"":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}}},"docs":{}},"2":{"2":{"6":{"docs":{},"\"":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}}},"docs":{}},"docs":{},"\"":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}},"3":{"0":{"3":{"3":{"4":{"5":{"9":{"docs":{},"\"":{"docs":{"剑指offer/45. 把数组排成最小的数.html":{"ref":"剑指offer/45. 把数组排成最小的数.html","tf":0.0196078431372549}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.011320754716981131},"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.24623115577889448}},",":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.007547169811320755}}},";":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}},"c":{"docs":{},"o":{"docs":{},"g":{"docs":{},"\"":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}},",":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}}}}},"d":{"docs":{},"e":{"docs":{},"\"":{"docs":{},"]":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}},"b":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"d":{"docs":{},"\"":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}}}}}}}}},"\"":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}},"b":{"docs":{},"d":{"docs":{},"\"":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}}},"*":{"docs":{},"a":{"docs":{},"*":{"docs":{},"b":{"docs":{},"\"":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}},"d":{"docs":{},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}},"a":{"docs":{},"e":{"docs":{},"b":{"docs":{},"d":{"docs":{},"\"":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}},"t":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099}},"\"":{"docs":{},"]":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},"\"":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}}},"o":{"docs":{},"g":{"docs":{},"\"":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}},",":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}}}}}}},"\"":{"docs":{},",":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"]":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},"\"":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}},",":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}},"]":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}},"t":{"docs":{},"\"":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}},"c":{"docs":{},"e":{"docs":{},"\"":{"docs":{},".":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}}},"e":{"docs":{},"f":{"docs":{},"\"":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}},"b":{"docs":{},"b":{"docs":{},"c":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.02631578947368421}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"\"":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"仍":{"docs":{},"会":{"docs":{},"有":{"docs":{},"行":{"docs":{},"动":{"docs":{},"（":{"docs":{},"游":{"docs":{},"戏":{"docs":{},"未":{"docs":{},"结":{"docs":{},"束":{"docs":{},"）":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"\"":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273}},",":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}},"o":{"docs":{},"t":{"docs":{},"\"":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"\"":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.026845637583892617},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}},",":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.013422818791946308},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.019230769230769232}}},"（":{"1":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}},"docs":{}}},"a":{"docs":{},"b":{"docs":{},"\"":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}}},"\"":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}},",":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}},"。":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}}},"c":{"docs":{},"\"":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.020134228187919462},"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266},"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}},",":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.009216589861751152}}},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}},"所":{"docs":{},"以":{"docs":{},"其":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}}}}},"。":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}},"d":{"docs":{},"e":{"docs":{},"\"":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.009216589861751152},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}},",":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"\"":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"\"":{"docs":{"字符串/459. 重复的子字符串.html":{"ref":"字符串/459. 重复的子字符串.html","tf":0.015151515151515152}}}}}}}}},"b":{"docs":{},"b":{"docs":{},"\"":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"b":{"docs":{},"\"":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}}}},"\"":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.011904761904761904},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01092896174863388},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01092896174863388}},",":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.028846153846153848}}}},"*":{"docs":{},"c":{"docs":{},"?":{"docs":{},"b":{"docs":{},"\"":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}}},"\"":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}},"a":{"docs":{},"\"":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.017857142857142856},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.02185792349726776},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.019230769230769232},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.02185792349726776}}},"b":{"docs":{},"\"":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338},"动态规划/132. 分割回文串 II.html":{"ref":"动态规划/132. 分割回文串 II.html","tf":0.01818181818181818},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}},"。":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}},"c":{"docs":{},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.02631578947368421}}}}}}},"d":{"docs":{},"b":{"docs":{},"b":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"\"":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105}}}}}}}},"c":{"docs":{},"b":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"\"":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105}}}}}}}}}}},"a":{"docs":{},"\"":{"docs":{},"。":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}},"a":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"g":{"docs":{},"t":{"docs":{},"t":{"docs":{},"t":{"docs":{},"\"":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"d":{"docs":{},"c":{"docs":{},"b":{"docs":{},"\"":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}}},"e":{"docs":{},"\"":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}}}}},"\"":{"docs":{},",":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}}},"e":{"docs":{},"c":{"docs":{},"\"":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576},"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}}},"t":{"docs":{},"\"":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}},"n":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"\"":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}},",":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154},"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}}},"n":{"docs":{},"c":{"docs":{},"\"":{"docs":{"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}},"b":{"docs":{},"\"":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}},"a":{"docs":{},"d":{"docs":{},"\"":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}},"g":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{},"\"":{"docs":{},",":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}}}}}}},"g":{"docs":{},"\"":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613}}}}},"b":{"docs":{},"\"":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}},"b":{"docs":{},"b":{"docs":{},"b":{"docs":{},"\"":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}},"f":{"docs":{},"\"":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}}}},"\"":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"其":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}}}}},",":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.019230769230769232}}}},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}},"z":{"docs":{},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}}}}}}},"z":{"docs":{},"\"":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}}},"w":{"docs":{},"f":{"docs":{},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}}}}}}}},"\"":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099}},"。":{"docs":{"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}},";":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}},"*":{"docs":{},"\"":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}},"a":{"docs":{},"*":{"docs":{},"b":{"docs":{},"\"":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}}}},"?":{"docs":{},"a":{"docs":{},"\"":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}},".":{"docs":{},"*":{"docs":{},"\"":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01092896174863388},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01092896174863388}}}},".":{"docs":{},".":{"docs":{},"q":{"docs":{},"\"":{"docs":{},",":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.028985507246376812},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.008658008658008658}}}}}},"q":{"docs":{},".":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}},"q":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{},"]":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"*":{"docs":{},"i":{"docs":{},"s":{"docs":{},"*":{"docs":{},"p":{"docs":{},"*":{"docs":{},".":{"docs":{},"\"":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"\"":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}}}}},"c":{"docs":{},"f":{"docs":{},"i":{"docs":{},"\"":{"docs":{},"和":{"docs":{},"\"":{"docs":{},"m":{"docs":{},"z":{"docs":{},"i":{"docs":{},"\"":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"e":{"docs":{},"\"":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}},"t":{"docs":{},"\"":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"\"":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}},"g":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"\"":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135}}},"”":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}},"t":{"docs":{},"a":{"docs":{},"e":{"docs":{},"\"":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}},"”":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}},"a":{"docs":{},"b":{"docs":{},"b":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}}}}},"i":{"docs":{},"t":{"docs":{},"\"":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613}}}}}}}}},"p":{"docs":{},"w":{"docs":{},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"w":{"docs":{},"\"":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}}}},"e":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}},"]":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{},"。":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099}},"\"":{"docs":{},",":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}},"e":{"docs":{},"\"":{"docs":{},"]":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"\"":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"其":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.008},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.011111111111111112}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"\"":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"\"":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.015544041450777202}},",":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}}}},")":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.005494505494505495},"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"动态规划/140. 单词拆分 II.html":{"ref":"动态规划/140. 单词拆分 II.html","tf":0.01098901098901099},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"\"":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}},",":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}}}}}},"\"":{"docs":{},"（":{"1":{"2":{"docs":{},"）":{"docs":{},"。":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}}}},"docs":{}},"docs":{}}}},"v":{"docs":{},"f":{"docs":{},"\"":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}}}},"(":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"数论/166. 分数到小数.html":{"ref":"数论/166. 分数到小数.html","tf":0.007462686567164179}}}}}},"q":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.028985507246376812},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.008658008658008658}}}}}}}},"o":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.01507537688442211}},"\"":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.010050251256281407}}},"o":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}},"x":{"docs":{},"\"":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.010050251256281407}}}}}},"x":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.04020100502512563}},"\"":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.010050251256281407}}},"o":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.010050251256281407}},"x":{"docs":{},"\"":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}},"x":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}},"o":{"docs":{},"\"":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.020100502512562814}}}}}}},"q":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186}},"u":{"docs":{},"e":{"1":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"2":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}}}}}}},"docs":{}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}},",":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}},"2":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}}}}}}},"docs":{}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}}}}},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}},"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576}},"r":{"docs":{},"i":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}},",":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.007272727272727273},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576}}}}}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"ref":"剑指offer/32 - II. 从上到下打印二叉树 II.html","tf":0.007575757575757576},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.014705882352941176}},">":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.01090909090909091}}},".":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}},"docs":{}}}}}}}}},"e":{"docs":{},"n":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}},")":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186}},";":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.011627906976744186}}}}},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"总":{"docs":{},"和":{"docs":{},"，":{"docs":{},"包":{"docs":{},"含":{"docs":{"二叉树/307. 区域和检索 - 数组可修改.html":{"ref":"二叉树/307. 区域和检索 - 数组可修改.html","tf":0.0037735849056603774}}}}}}}}}}}}},"@":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.013605442176870748}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}}}},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}}}}}},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"。":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}},"）":{"docs":{},"。":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.004901960784313725}}}}}},"调":{"docs":{},"用":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}},"总":{"docs":{},"是":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"当":{"docs":{},"调":{"docs":{},"用":{"docs":{"二叉树/173. 二叉搜索树迭代器.html":{"ref":"二叉树/173. 二叉搜索树迭代器.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}},"小":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"你":{"docs":{},"将":{"docs":{},"如":{"docs":{},"何":{"docs":{},"优":{"docs":{},"化":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}}}}}},"偷":{"docs":{},"一":{"docs":{},"晚":{"docs":{},"能":{"docs":{},"够":{"docs":{},"盗":{"docs":{},"取":{"docs":{},"的":{"docs":{},"最":{"docs":{},"高":{"docs":{},"金":{"docs":{},"额":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.013793103448275862}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.006329113924050633}}}}}}}}}}}}}}}},"若":{"docs":{"二叉树/230. 二叉搜索树中第K小的元素.html":{"ref":"二叉树/230. 二叉搜索树中第K小的元素.html","tf":0.012658227848101266},"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"没":{"docs":{},"有":{"docs":{},"公":{"docs":{},"共":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}},"百":{"docs":{},"位":{"docs":{},"上":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"百":{"docs":{},"位":{"docs":{},"上":{"docs":{},"出":{"docs":{},"现":{"1":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"共":{"docs":{},"有":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}}}}}}},"docs":{}}}}}}}},"docs":{}},"大":{"docs":{},"于":{"1":{"docs":{},",":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}}},"docs":{}}}}}}},".":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}},".":{"docs":{},".":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061},"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}},"以":{"docs":{},"上":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"对":{"docs":{},"应":{"docs":{},"以":{"docs":{},"下":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}}}}}}}}},"及":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.028846153846153848}},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{"数论/373. 查找和最小的K对数字.html":{"ref":"数论/373. 查找和最小的K对数字.html","tf":0.005681818181818182}}}}}}},"百":{"docs":{},"位":{"docs":{},"上":{"1":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"为":{"docs":{},"例":{"docs":{},"，":{"docs":{},"分":{"docs":{},"三":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"（":{"docs":{},"高":{"docs":{},"位":{"docs":{},"为":{"docs":{},"百":{"docs":{},"位":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"种":{"docs":{},"不":{"docs":{},"同":{"docs":{},"结":{"docs":{},"构":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"：":{"docs":{"二叉树/95. 不同的二叉搜索树 II.html":{"ref":"二叉树/95. 不同的二叉搜索树 II.html","tf":0.006060606060606061}}},":":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613}}}}}},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"二叉树/99. 恢复二叉搜索树.html":{"ref":"二叉树/99. 恢复二叉搜索树.html","tf":0.005434782608695652}}}}}}}}}}}}}}}},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"指":{"docs":{},"没":{"docs":{},"有":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"二叉树/113. 路径总和 II.html":{"ref":"二叉树/113. 路径总和 II.html","tf":0.008},"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}},"卡":{"docs":{},"塔":{"docs":{},"兰":{"docs":{},"公":{"docs":{},"式":{"docs":{},"为":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}}}}}}}},"那":{"docs":{},"么":{"docs":{},"c":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{"二叉树/96. 不同的二叉搜索树.html":{"ref":"二叉树/96. 不同的二叉搜索树.html","tf":0.011494252873563218}}},"docs":{}}}}}},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"数":{"docs":{},"字":{"docs":{},"总":{"docs":{},"和":{"docs":{"二叉树/129. 求根到叶子节点数字之和.html":{"ref":"二叉树/129. 求根到叶子节点数字之和.html","tf":0.011235955056179775}}}}}},"当":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}},"为":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01092896174863388},"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806},"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.018691588785046728},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01092896174863388}},"无":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"最":{"docs":{},"长":{"docs":{},"子":{"docs":{},"串":{"docs":{},"是":{"docs":{"字符串/3. 无重复字符的最长子串.html":{"ref":"字符串/3. 无重复字符的最长子串.html","tf":0.024},"剑指offer/48. 最长不含重复字符的子字符串.html":{"ref":"剑指offer/48. 最长不含重复字符的子字符串.html","tf":0.03333333333333333}}}}}}}}}}}},"论":{"docs":{},"你":{"docs":{},"拿":{"docs":{},"走":{"docs":{"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857}}}}}}},"这":{"docs":{},"样":{"docs":{},"属":{"docs":{},"于":{"docs":{},"同":{"docs":{},"时":{"docs":{},"参":{"docs":{},"与":{"docs":{},"了":{"docs":{},"多":{"docs":{},"笔":{"docs":{},"交":{"docs":{},"易":{"docs":{},"，":{"docs":{},"你":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"再":{"docs":{},"次":{"docs":{},"购":{"docs":{},"买":{"docs":{},"前":{"docs":{},"出":{"docs":{},"售":{"docs":{},"掉":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"股":{"docs":{},"票":{"docs":{},"。":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"卖":{"docs":{},"出":{"docs":{},"价":{"docs":{},"格":{"docs":{},"需":{"docs":{},"要":{"docs":{},"大":{"docs":{},"于":{"docs":{},"买":{"docs":{},"入":{"docs":{},"价":{"docs":{},"格":{"docs":{},"。":{"docs":{"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364}}}}}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"可":{"docs":{},"能":{"docs":{},"很":{"docs":{},"大":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"返":{"docs":{},"回":{"docs":{},"答":{"docs":{},"案":{"docs":{},"模":{"docs":{"动态规划/940. 不同的子序列 II.html":{"ref":"动态规划/940. 不同的子序列 II.html","tf":0.009615384615384616}}}}}}}}}}}}}}}},"用":{"docs":{},"户":{"1":{"docs":{},"已":{"docs":{},"经":{"docs":{},"不":{"docs":{},"再":{"docs":{},"关":{"docs":{},"注":{"docs":{},"用":{"docs":{},"户":{"2":{"docs":{},".":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}},"docs":{}}}}}}}}}},"docs":{}}}}},"步":{"docs":{},"骤":{"docs":{},"：":{"docs":{"二叉树/144. 二叉树的前序遍历.html":{"ref":"二叉树/144. 二叉树的前序遍历.html","tf":0.007142857142857143}}}}},"初":{"docs":{},"始":{"docs":{},"状":{"docs":{},"态":{"docs":{},"下":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}}}}}},"所":{"docs":{},"示":{"docs":{},"。":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}},"，":{"docs":{},"你":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"应":{"docs":{},"该":{"docs":{},"填":{"docs":{},"充":{"docs":{},"它":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}}}}}}}}}}}},"有":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"都":{"docs":{},"是":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"。":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}}}}}}}}},"单":{"docs":{},"词":{"docs":{},"具":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}},"只":{"docs":{},"由":{"docs":{},"小":{"docs":{},"写":{"docs":{},"字":{"docs":{},"母":{"docs":{},"组":{"docs":{},"成":{"docs":{},"。":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}},"字":{"docs":{},"母":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"子":{"docs":{},"串":{"docs":{},"。":{"docs":{"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}}}}}}},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"长":{"docs":{},"度":{"docs":{},"不":{"docs":{},"会":{"docs":{},"超":{"docs":{},"过":{"docs":{"字符串/522. 最长特殊序列 II.html":{"ref":"字符串/522. 最长特殊序列 II.html","tf":0.007246376811594203}}}}}}}}}}}}}},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"分":{"docs":{},"割":{"docs":{},"方":{"docs":{},"案":{"docs":{},"。":{"docs":{"动态规划/131. 分割回文串.html":{"ref":"动态规划/131. 分割回文串.html","tf":0.012048192771084338}}}}}}}}}},"行":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"皇":{"docs":{},"后":{"docs":{},"，":{"docs":{},"解":{"docs":{},"法":{"docs":{},"增":{"1":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}},"docs":{}}}}}}}}}}}}}}}},"谓":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"是":{"docs":{},"要":{"docs":{},"涵":{"docs":{},"盖":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"最":{"docs":{},"少":{"docs":{},"操":{"docs":{},"作":{"docs":{},"数":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}}}}}}},"以":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{},"为":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}}}}}}},"指":{"docs":{},"针":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}},"都":{"docs":{},"被":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}}},"，":{"docs":{},"以":{"docs":{},"指":{"docs":{},"向":{"docs":{},"其":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"右":{"docs":{},"侧":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"如":{"docs":{},"图":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}}}}}}}}}}}},"让":{"docs":{},"这":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"其":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"右":{"docs":{},"侧":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"找":{"docs":{},"不":{"docs":{},"到":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"右":{"docs":{},"侧":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"ref":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"向":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"节":{"docs":{},"点":{"docs":{},"或":{"docs":{},"者":{"docs":{"剑指offer/35. 复杂链表的复制.html":{"ref":"剑指offer/35. 复杂链表的复制.html","tf":0.006666666666666667}}}}}}}}}}}}}}}},"百":{"docs":{},"度":{"docs":{},"百":{"docs":{},"科":{"docs":{},"中":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"：":{"docs":{},"“":{"docs":{},"对":{"docs":{},"于":{"docs":{},"有":{"docs":{},"根":{"docs":{},"树":{"docs":{"二叉树/236. 二叉树的最近公共祖先.html":{"ref":"二叉树/236. 二叉树的最近公共祖先.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}},"位":{"docs":{},"上":{"docs":{},"出":{"docs":{},"现":{"1":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"共":{"docs":{},"有":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}}}}}}},"docs":{}}}}}},"每":{"docs":{},"列":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"从":{"docs":{},"上":{"docs":{},"到":{"docs":{},"下":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}}}}}}}}}}},"行":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{},"前":{"docs":{},"一":{"docs":{},"行":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"按":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}}}}}}}}}}}}},"次":{"docs":{},"转":{"docs":{},"换":{"docs":{},"只":{"docs":{},"能":{"docs":{},"改":{"docs":{},"变":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"母":{"docs":{},"。":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}}},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"是":{"docs":{},"以":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{},"所":{"docs":{},"能":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"分":{"docs":{},"为":{"docs":{},"包":{"docs":{},"含":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"这":{"docs":{},"两":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"种":{"docs":{},"解":{"docs":{},"法":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"明":{"docs":{},"确":{"docs":{},"的":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}}}}},"现":{"docs":{},"有":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}},"矩":{"docs":{},"阵":{"docs":{"搜索/240. 搜索二维矩阵 II.html":{"ref":"搜索/240. 搜索二维矩阵 II.html","tf":0.010101010101010102},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}},"中":{"docs":{},"，":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{},"。":{"docs":{},"该":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"具":{"docs":{},"有":{"docs":{},"如":{"docs":{},"下":{"docs":{},"特":{"docs":{},"性":{"docs":{},"：":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"换":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"的":{"docs":{},"中":{"docs":{},"间":{"docs":{},"单":{"docs":{},"词":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"字":{"docs":{},"典":{"docs":{},"中":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"。":{"docs":{"搜索/127. 单词接龙.html":{"ref":"搜索/127. 单词接龙.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}}}}},"成":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}},"'":{"0":{"docs":{},"'":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}},")":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}}}},"1":{"docs":{},"'":{"docs":{},")":{"docs":{"动态规划/85. 最大矩形.html":{"ref":"动态规划/85. 最大矩形.html","tf":0.008928571428571428}}},"。":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.008064516129032258}}}}},"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}},"o":{"docs":{},"'":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.032}},"（":{"docs":{},"字":{"docs":{},"母":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}}}},"x":{"docs":{},"'":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.024}},"。":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"在":{"docs":{},"水":{"docs":{},"平":{"docs":{},"或":{"docs":{},"垂":{"docs":{},"直":{"docs":{},"方":{"docs":{},"向":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"，":{"docs":{},"则":{"docs":{},"称":{"docs":{},"它":{"docs":{},"们":{"docs":{},"是":{"docs":{},"“":{"docs":{},"相":{"docs":{},"连":{"docs":{},"”":{"docs":{},"的":{"docs":{},"。":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}},"*":{"docs":{},"'":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.02976190476190476},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.02185792349726776},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.02185792349726776}}}},"?":{"docs":{},"'":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.017857142857142856}}}},"a":{"docs":{},"'":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01092896174863388},"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01092896174863388}},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"'":{"docs":{},",":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.03389830508474576}}},"，":{"docs":{},"在":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"次":{"docs":{},"之":{"docs":{},"后":{"docs":{},"结":{"docs":{},"果":{"docs":{},"就":{"docs":{},"是":{"docs":{},"'":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"'":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"'":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}}}}}}}},"b":{"docs":{},"'":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}},"。":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}},"c":{"docs":{},"'":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}},",":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}},")":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"b":{"docs":{},"'":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}}}}}}}},".":{"docs":{},"'":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01092896174863388},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01092896174863388}},")":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.01092896174863388},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.01092896174863388}}}}},"e":{"docs":{},"'":{"docs":{},")":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.01818181818181818}}}}},"h":{"docs":{},"'":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}},"i":{"docs":{},"'":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}},"n":{"docs":{},"'":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.01818181818181818}}}},"r":{"docs":{},"'":{"docs":{},")":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.01818181818181818}}}}},"t":{"docs":{},"'":{"docs":{},")":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}},"u":{"docs":{},"'":{"docs":{},")":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}},"z":{"docs":{},"'":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334}}}},"q":{"docs":{},"'":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}},")":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}},"+":{"docs":{},"'":{"docs":{"剑指offer/20.表示数值的字符串.html":{"ref":"剑指offer/20.表示数值的字符串.html","tf":0.012345679012345678}}}}},"任":{"docs":{},"何":{"docs":{},"不":{"docs":{},"在":{"docs":{},"边":{"docs":{},"界":{"docs":{},"上":{"docs":{},"，":{"docs":{},"或":{"docs":{},"不":{"docs":{},"与":{"docs":{},"边":{"docs":{},"界":{"docs":{},"上":{"docs":{},"的":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}}}}}}}}}}}},"房":{"docs":{},"间":{"docs":{},"都":{"docs":{},"可":{"docs":{},"能":{"docs":{},"对":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"的":{"docs":{},"健":{"docs":{},"康":{"docs":{},"点":{"docs":{},"数":{"docs":{},"造":{"docs":{},"成":{"docs":{},"威":{"docs":{},"胁":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"增":{"docs":{},"加":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"的":{"docs":{},"健":{"docs":{},"康":{"docs":{},"点":{"docs":{},"数":{"docs":{},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"进":{"docs":{},"入":{"docs":{},"的":{"docs":{},"左":{"docs":{},"上":{"docs":{},"角":{"docs":{},"房":{"docs":{},"间":{"docs":{},"以":{"docs":{},"及":{"docs":{},"公":{"docs":{},"主":{"docs":{},"被":{"docs":{},"监":{"docs":{},"禁":{"docs":{},"的":{"docs":{},"右":{"docs":{},"下":{"docs":{},"角":{"docs":{},"房":{"docs":{},"间":{"docs":{},"。":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"于":{"0":{"docs":{},"异":{"docs":{},"或":{"docs":{},"为":{"docs":{},"任":{"docs":{},"何":{"docs":{},"数":{"docs":{"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304}}}}}}}}},"docs":{}}}}},"围":{"docs":{},"绕":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"这":{"docs":{},"些":{"docs":{},"区":{"docs":{},"域":{"docs":{},"里":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}}}}}}}}}}}}}}},"相":{"docs":{},"连":{"docs":{},"的":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}},"同":{"docs":{},"的":{"docs":{},"数":{"docs":{},"异":{"docs":{},"或":{"docs":{},"为":{"0":{"docs":{},":":{"docs":{"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304}}}},"docs":{}}}}}}}},"运":{"docs":{},"行":{"docs":{},"你":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"后":{"docs":{},"，":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"变":{"docs":{},"为":{"docs":{},"：":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}}}}}}}}}}}},"都":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"填":{"docs":{},"充":{"docs":{},"为":{"docs":{"搜索/130. 被围绕的区域.html":{"ref":"搜索/130. 被围绕的区域.html","tf":0.008}}}}}}}},"由":{"docs":{},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"缩":{"docs":{},"写":{"docs":{},"为":{"docs":{"位运算/187. 重复的DNA序列.html":{"ref":"位运算/187. 重复的DNA序列.html","tf":0.01}}}}}}}}}},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"通":{"docs":{},"用":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.006711409395973154}}}}}}}}}}}},"起":{"docs":{},"始":{"docs":{},"索":{"docs":{},"引":{"docs":{},"等":{"docs":{},"于":{"docs":{"字符串/438. 找到字符串中所有字母异位词.html":{"ref":"字符串/438. 找到字符串中所有字母异位词.html","tf":0.03355704697986577}}}}}}}},"里":{"docs":{},"面":{"docs":{},"找":{"docs":{},"出":{"docs":{},"：":{"docs":{},"包":{"docs":{},"含":{"docs":{"字符串/76. 最小覆盖子串.html":{"ref":"字符串/76. 最小覆盖子串.html","tf":0.012658227848101266}}}}}}}}},"但":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}},"是":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"个":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496}}}}}}}},"整":{"docs":{},"个":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952},"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}},"玩":{"docs":{},"家":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}},"行":{"docs":{},"首":{"docs":{},"先":{"docs":{},"计":{"docs":{},"算":{"docs":{},"n":{"docs":{},"中":{"docs":{},"相":{"docs":{},"邻":{"2":{"docs":{},"位":{"docs":{},"的":{"docs":{},"和":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"两":{"docs":{},"位":{"docs":{},"的":{"docs":{},"和":{"docs":{},"最":{"docs":{},"大":{"docs":{},"也":{"docs":{},"只":{"docs":{},"为":{"2":{"docs":{},"（":{"docs":{},"即":{"docs":{},"只":{"docs":{},"占":{"docs":{},"用":{"2":{"docs":{},"个":{"docs":{},"比":{"docs":{},"特":{"docs":{},"位":{"docs":{},"）":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"两":{"docs":{},"位":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"结":{"docs":{},"果":{"docs":{},"可":{"docs":{},"以":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"本":{"docs":{},"地":{"docs":{},"（":{"docs":{},"即":{"docs":{},"当":{"docs":{},"前":{"docs":{},"两":{"docs":{},"个":{"docs":{},"比":{"docs":{},"特":{"docs":{},"位":{"docs":{},"中":{"docs":{},"）":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"其":{"docs":{},"他":{"docs":{},"比":{"docs":{},"特":{"docs":{},"位":{"docs":{},"。":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"二":{"docs":{},"个":{"docs":{"字符串/44. 通配符匹配.html":{"ref":"字符串/44. 通配符匹配.html","tf":0.005952380952380952}}}}},"然":{"docs":{},"后":{"docs":{},"是":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"用":{"docs":{},"法":{"docs":{},"，":{"docs":{},"举":{"docs":{},"例":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"模":{"docs":{},"式":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"在":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"位":{"docs":{},"的":{"docs":{},"a":{"docs":{},"上":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"[":{"4":{"docs":{},"]":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"在":{"docs":{},"原":{"docs":{},"有":{"docs":{},"位":{"docs":{},"数":{"docs":{},"为":{"2":{"docs":{},"的":{"docs":{},"格":{"docs":{},"雷":{"docs":{},"码":{"docs":{},"前":{"docs":{},"添":{"docs":{},"加":{"1":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"到":{"docs":{},"按":{"docs":{},"照":{"docs":{},"原":{"docs":{},"有":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"添":{"docs":{},"加":{"1":{"docs":{},"后":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"1":{"0":{"0":{"docs":{},"与":{"docs":{},"添":{"docs":{},"加":{"0":{"docs":{},"后":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"0":{"1":{"0":{"docs":{},"之":{"docs":{},"间":{"docs":{},"并":{"docs":{},"不":{"docs":{},"连":{"docs":{},"续":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"注":{"docs":{},"意":{"docs":{},"到":{"docs":{},"格":{"docs":{},"雷":{"docs":{},"码":{"docs":{},"反":{"docs":{},"转":{"docs":{},"后":{"docs":{},"其":{"docs":{},"两":{"docs":{},"个":{"docs":{},"连":{"docs":{},"续":{"docs":{},"数":{"docs":{},"值":{"docs":{},"依":{"docs":{},"然":{"docs":{},"仅":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"数":{"docs":{},"的":{"docs":{},"差":{"docs":{},"异":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"在":{"1":{"0":{"docs":{},"前":{"docs":{},"添":{"docs":{},"加":{"1":{"docs":{},"后":{"docs":{},"的":{"1":{"1":{"0":{"docs":{},"与":{"0":{"1":{"0":{"docs":{},"是":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"原":{"docs":{},"有":{"docs":{},"位":{"docs":{},"数":{"docs":{},"为":{"2":{"docs":{},"的":{"docs":{},"格":{"docs":{},"雷":{"docs":{},"码":{"docs":{},"反":{"docs":{},"转":{"docs":{},"后":{"docs":{},"在":{"docs":{},"前":{"docs":{},"面":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"1":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"到":{"docs":{},"之":{"docs":{},"前":{"docs":{},"添":{"docs":{},"加":{"0":{"docs":{},"后":{"docs":{},"的":{"docs":{},"格":{"docs":{},"雷":{"docs":{},"码":{"docs":{},"后":{"docs":{},"面":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"位":{"docs":{},"数":{"docs":{},"为":{"3":{"docs":{},"的":{"docs":{},"格":{"docs":{},"雷":{"docs":{},"码":{"docs":{},"就":{"docs":{},"形":{"docs":{},"成":{"docs":{},"了":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"前":{"1":{"docs":{},"/":{"2":{"docs":{},"个":{"docs":{},"格":{"docs":{},"雷":{"docs":{},"码":{"docs":{},"与":{"docs":{},"位":{"docs":{},"数":{"docs":{},"为":{"2":{"docs":{},"的":{"docs":{},"格":{"docs":{},"雷":{"docs":{},"码":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}},"至":{"docs":{},"于":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"方":{"docs":{},"法":{"docs":{},"类":{"docs":{},"似":{"docs":{},"：":{"docs":{},"把":{"docs":{},"原":{"docs":{},"来":{"docs":{},"模":{"docs":{},"式":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"作":{"docs":{},"为":{"docs":{},"新":{"docs":{},"的":{"docs":{},"模":{"docs":{},"式":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"来":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"模":{"docs":{},"式":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"方":{"docs":{},"法":{"docs":{},"同":{"docs":{},"上":{"docs":{},"。":{"docs":{"字符串/28. 实现 strStr.html":{"ref":"字符串/28. 实现 strStr.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"尝":{"docs":{},"试":{"docs":{},"更":{"docs":{},"新":{"docs":{},"m":{"docs":{},"x":{"docs":{},"与":{"docs":{},"i":{"docs":{},"d":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}}}},"结":{"docs":{},"果":{"docs":{"字符串/5. 最长回文子串.html":{"ref":"字符串/5. 最长回文子串.html","tf":0.005319148936170213}}}}}}}},"y":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.013824884792626729}},")":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.004608294930875576}}},";":{"docs":{"字符串/1143. 最长公共子序列.html":{"ref":"字符串/1143. 最长公共子序列.html","tf":0.009216589861751152}}},"i":{"docs":{},"n":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}},"u":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}},"匹":{"docs":{},"配":{"docs":{},"任":{"docs":{},"意":{"docs":{},"单":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}},"零":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"那":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"可":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"零":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"（":{"docs":{},"'":{"docs":{},"*":{"docs":{},"'":{"docs":{},"）":{"docs":{},"任":{"docs":{},"意":{"docs":{},"字":{"docs":{},"符":{"docs":{},"（":{"docs":{},"'":{"docs":{},".":{"docs":{},"'":{"docs":{},"）":{"docs":{},"。":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}},"零":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{"字符串/10. 正则表达式匹配.html":{"ref":"字符串/10. 正则表达式匹配.html","tf":0.00546448087431694},"剑指offer/19. 正则表达式匹配.html":{"ref":"剑指offer/19. 正则表达式匹配.html","tf":0.00546448087431694}}}}}}}}}},"选":{"docs":{},"取":{"docs":{},"的":{"docs":{},"字":{"docs":{},"母":{"docs":{},")":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613}}}}}}}},"指":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"有":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}}},"能":{"docs":{},"变":{"docs":{},"成":{"docs":{},"b":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"。":{"docs":{"字符串/796. 旋转字符串.html":{"ref":"字符串/796. 旋转字符串.html","tf":0.01694915254237288}}}}}}}}}}}}}}},"够":{"docs":{},"达":{"docs":{},"到":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{},":":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}}}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}}},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}}}}}}}},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}}}}},"替":{"docs":{},"换":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.00909090909090909}}}}}},"为":{"docs":{"字符串/72. 编辑距离.html":{"ref":"字符串/72. 编辑距离.html","tf":0.03636363636363636}}}}},"验":{"docs":{},"证":{"docs":{"动态规划/97. 交错字符串.html":{"ref":"动态规划/97. 交错字符串.html","tf":0.013157894736842105}}}},"天":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.043795620437956206},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.01652892561983471}},"的":{"docs":{},"价":{"docs":{},"格":{"docs":{},"。":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}}},"股":{"docs":{},"票":{"docs":{},"价":{"docs":{},"格":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}}}}},"和":{"docs":{},"第":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}},"接":{"docs":{},"连":{"docs":{},"购":{"docs":{},"买":{"docs":{},"股":{"docs":{},"票":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"再":{"docs":{},"将":{"docs":{},"它":{"docs":{},"们":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"。":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}},"（":{"docs":{},"股":{"docs":{},"票":{"docs":{},"价":{"docs":{},"格":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.033783783783783786},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.022727272727272728},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.03305785123966942}}}}}}},")":{"docs":{},"。":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}}},"笔":{"docs":{},"交":{"docs":{},"易":{"docs":{},"。":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005}}}}}},"随":{"docs":{},"后":{"docs":{},"，":{"docs":{},"在":{"docs":{},"第":{"docs":{"动态规划/188. 买卖股票的最佳时机 IV.html":{"ref":"动态规划/188. 买卖股票的最佳时机 IV.html","tf":0.0072992700729927005},"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}}}}},"没":{"docs":{},"有":{"docs":{},"交":{"docs":{},"易":{"docs":{},"完":{"docs":{},"成":{"docs":{},",":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/121. 买卖股票的最佳时机.html":{"ref":"动态规划/121. 买卖股票的最佳时机.html","tf":0.011363636363636364},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}}}}}}},"（":{"docs":{},"股":{"docs":{},"票":{"docs":{},"价":{"docs":{},"格":{"docs":{"动态规划/122. 买卖股票的最佳时机 II.html":{"ref":"动态规划/122. 买卖股票的最佳时机 II.html","tf":0.006756756756756757},"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.01652892561983471}}}}}},"优":{"docs":{},"化":{"docs":{},"为":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"）":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.0064516129032258064}}}}}}}}}},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"的":{"docs":{},"队":{"docs":{},"列":{"docs":{},"不":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}}}}}}}}}},"基":{"docs":{},"本":{"docs":{},"思":{"docs":{},"路":{"docs":{},"与":{"docs":{},"最":{"docs":{},"大":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"串":{"docs":{},"和":{"docs":{},"一":{"docs":{},"样":{"docs":{},"。":{"docs":{},"不":{"docs":{},"过":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"负":{"docs":{},"数":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"乘":{"docs":{},"积":{"docs":{},"为":{"docs":{},"正":{"docs":{},"数":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"需":{"docs":{},"要":{"docs":{},"同":{"docs":{},"时":{"docs":{},"计":{"docs":{},"算":{"docs":{},"最":{"docs":{},"小":{"docs":{},"子":{"docs":{},"串":{"docs":{},"乘":{"docs":{},"积":{"docs":{},"。":{"docs":{"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"不":{"docs":{},"能":{"docs":{},"为":{"docs":{"动态规划/152. 乘积最大子序列.html":{"ref":"动态规划/152. 乘积最大子序列.html","tf":0.017543859649122806}}}}},"尾":{"docs":{},"数":{"docs":{},"中":{"docs":{},"零":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"。":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}}}}}}}}}},"输":{"docs":{},"出":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"并":{"docs":{},"不":{"docs":{},"重":{"docs":{},"要":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"，":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}},"优":{"docs":{},"化":{"docs":{},"，":{"2":{"docs":{},"m":{"docs":{},"s":{"docs":{},"）":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}},"docs":{}}}},"同":{"docs":{},"样":{"docs":{},"地":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"们":{"docs":{},"继":{"docs":{},"续":{"docs":{},"交":{"docs":{},"换":{"docs":{},"节":{"docs":{},"点":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135}}},"定":{"docs":{},"义":{"docs":{},"格":{"docs":{},"雷":{"docs":{},"编":{"docs":{},"码":{"docs":{},"序":{"docs":{},"列":{"docs":{},"必":{"docs":{},"须":{"docs":{},"以":{"docs":{"位运算/89. 格雷编码.html":{"ref":"位运算/89. 格雷编码.html","tf":0.006666666666666667}}}}}}}}}}}}},"希":{"docs":{},"望":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"双":{"docs":{},"向":{"docs":{},"循":{"docs":{},"环":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"和":{"docs":{},"后":{"docs":{},"继":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"双":{"docs":{},"向":{"docs":{},"循":{"docs":{},"环":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"是":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"后":{"docs":{},"继":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"把":{"docs":{},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"因":{"docs":{},"子":{"docs":{"剑指offer/49. 丑数.html":{"ref":"剑指offer/49. 丑数.html","tf":0.01282051282051282}}}}}}}}}},"称":{"docs":{},"作":{"docs":{"动态规划/87. 扰乱字符串.html":{"ref":"动态规划/87. 扰乱字符串.html","tf":0.010362694300518135}}}},"；":{"docs":{},"非":{"docs":{},"负":{"docs":{},"整":{"docs":{},"数":{"docs":{"动态规划/714. 买卖股票的最佳时机含手续费.html":{"ref":"动态规划/714. 买卖股票的最佳时机含手续费.html","tf":0.0125}}}}}}},"自":{"docs":{},"顶":{"docs":{},"向":{"docs":{},"下":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{},"为":{"docs":{"动态规划/120. 三角形最小路径和.html":{"ref":"动态规划/120. 三角形最小路径和.html","tf":0.015151515151515152}}}}}}}}}}}}},"再":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"发":{"docs":{},"现":{"docs":{},"右":{"docs":{},"下":{"docs":{},"角":{"docs":{},"那":{"docs":{},"个":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"才":{"docs":{},"是":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"，":{"docs":{},"起":{"docs":{},"点":{"docs":{},"f":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"反":{"docs":{},"而":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"，":{"docs":{},"于":{"docs":{},"是":{"docs":{},"大":{"docs":{},"致":{"docs":{},"可":{"docs":{},"以":{"docs":{},"知":{"docs":{},"道":{"docs":{},"，":{"docs":{},"这":{"docs":{},"题":{"docs":{},"是":{"docs":{},"从":{"docs":{},"右":{"docs":{},"下":{"docs":{},"角":{"docs":{},"向":{"docs":{},"左":{"docs":{},"上":{"docs":{},"角":{"docs":{},"来":{"docs":{},"填":{"docs":{},"表":{"docs":{},"。":{"docs":{},"右":{"docs":{},"下":{"docs":{},"角":{"docs":{},"格":{"docs":{},"子":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"该":{"docs":{},"格":{"docs":{},"子":{"docs":{},"的":{"docs":{},"值":{"docs":{},"为":{"docs":{},"负":{"docs":{},"数":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"进":{"docs":{},"入":{"docs":{},"这":{"docs":{},"个":{"docs":{},"格":{"docs":{},"子":{"docs":{},"前":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"健":{"docs":{},"康":{"docs":{},"点":{"docs":{},"数":{"docs":{},"是":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"右":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.011904761904761904}}},"或":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}},"以":{"docs":{},"下":{"docs":{},"，":{"docs":{},"他":{"docs":{},"会":{"docs":{},"立":{"docs":{},"即":{"docs":{},"死":{"docs":{},"亡":{"docs":{},"。":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}},"者":{"docs":{"动态规划/91. 解码方法.html":{"ref":"动态规划/91. 解码方法.html","tf":0.013333333333333334},"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.00980392156862745},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666}}}},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"。":{"docs":{},"从":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"推":{"docs":{},"测":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"是":{"docs":{},"从":{"docs":{},"右":{"docs":{},"下":{"docs":{},"角":{"docs":{},"反":{"docs":{},"向":{"docs":{},"的":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"骑":{"docs":{},"士":{"docs":{},"的":{"docs":{},"健":{"docs":{},"康":{"docs":{},"点":{"docs":{},"数":{"docs":{},"没":{"docs":{},"有":{"docs":{},"上":{"docs":{},"限":{"docs":{},"。":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"健":{"docs":{},"康":{"docs":{},"点":{"docs":{},"数":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"他":{"docs":{},"的":{"docs":{},"健":{"docs":{},"康":{"docs":{},"点":{"docs":{},"数":{"docs":{},"在":{"docs":{},"某":{"docs":{},"一":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"降":{"docs":{},"至":{"docs":{"动态规划/174. 地下城游戏.html":{"ref":"动态规划/174. 地下城游戏.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"#":{"docs":{},"#":{"docs":{"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.01652892561983471},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}},"`":{"docs":{},"`":{"docs":{},"`":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356},"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}},"给":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"第":{"docs":{"动态规划/123. 买卖股票的最佳时机 III.html":{"ref":"动态规划/123. 买卖股票的最佳时机 III.html","tf":0.008264462809917356}}}}}}}}}}}},"编":{"docs":{},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"高":{"docs":{},"效":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}}}}}}}}}}}}},"拆":{"docs":{},"分":{"docs":{},"时":{"docs":{},"可":{"docs":{},"以":{"docs":{},"重":{"docs":{},"复":{"docs":{},"使":{"docs":{},"用":{"docs":{},"字":{"docs":{},"典":{"docs":{},"中":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"。":{"docs":{"动态规划/139. 单词拆分.html":{"ref":"动态规划/139. 单词拆分.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}},"冷":{"docs":{},"冻":{"docs":{},"期":{"docs":{},",":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}}}},"卖":{"docs":{},"出":{"docs":{},",":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}},"]":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}},"股":{"docs":{},"票":{"docs":{},"后":{"docs":{},"，":{"docs":{},"你":{"docs":{},"无":{"docs":{},"法":{"docs":{},"在":{"docs":{},"第":{"docs":{},"二":{"docs":{},"天":{"docs":{},"买":{"docs":{},"入":{"docs":{},"股":{"docs":{},"票":{"docs":{"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"ref":"动态规划/309. 最佳买卖股票时机含冷冻期.html","tf":0.02}}}}}}}}}}}}}}}}}}},"^":{"3":{"docs":{"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.010869565217391304}}},"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.03870967741935484},"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008},"位运算/136. 只出现一次的数字.html":{"ref":"位运算/136. 只出现一次的数字.html","tf":0.16304347826086957}},"^":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.03870967741935484}},"^":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.01935483870967742}},"^":{"docs":{"动态规划/115. 不同的子序列.html":{"ref":"动态规划/115. 不同的子序列.html","tf":0.012903225806451613}}}}},"=":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}},"除":{"docs":{},"了":{"docs":{},"“":{"docs":{},"根":{"docs":{},"”":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"每":{"docs":{},"栋":{"docs":{},"房":{"docs":{},"子":{"docs":{},"有":{"docs":{},"且":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"“":{"docs":{},"父":{"docs":{},"“":{"docs":{},"房":{"docs":{},"子":{"docs":{},"与":{"docs":{},"之":{"docs":{},"相":{"docs":{},"连":{"docs":{},"。":{"docs":{},"一":{"docs":{},"番":{"docs":{},"侦":{"docs":{},"察":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"聪":{"docs":{},"明":{"docs":{},"的":{"docs":{},"小":{"docs":{},"偷":{"docs":{},"意":{"docs":{},"识":{"docs":{},"到":{"docs":{},"“":{"docs":{},"这":{"docs":{},"个":{"docs":{},"地":{"docs":{},"方":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"房":{"docs":{},"屋":{"docs":{},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{},"类":{"docs":{},"似":{"docs":{},"于":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"”":{"docs":{},"。":{"docs":{"动态规划/337. 打家劫舍 III.html":{"ref":"动态规划/337. 打家劫舍 III.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"高":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"数论/347. 前 K 个高频元素.html":{"ref":"数论/347. 前 K 个高频元素.html","tf":0.009615384615384616}}}}}},"位":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.015503875968992248}}}},"关":{"docs":{},"注":{"docs":{},"一":{"docs":{},"个":{"docs":{},"用":{"docs":{},"户":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"条":{"docs":{},"新":{"docs":{},"的":{"docs":{},"推":{"docs":{},"文":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}},"取":{"docs":{},"消":{"docs":{},"关":{"docs":{},"注":{"docs":{},"一":{"docs":{},"个":{"docs":{},"用":{"docs":{},"户":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}},"推":{"docs":{},"文":{"docs":{},"i":{"docs":{},"d":{"6":{"docs":{},"应":{"docs":{},"当":{"docs":{},"在":{"docs":{},"推":{"docs":{},"文":{"docs":{},"i":{"docs":{},"d":{"5":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"是":{"docs":{},"在":{"5":{"docs":{},"之":{"docs":{},"后":{"docs":{},"发":{"docs":{},"送":{"docs":{},"的":{"docs":{},".":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}},"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}},"检":{"docs":{},"索":{"docs":{},"最":{"docs":{},"近":{"docs":{},"的":{"docs":{},"十":{"docs":{},"条":{"docs":{},"推":{"docs":{},"文":{"docs":{},"。":{"docs":{},"每":{"docs":{},"个":{"docs":{},"推":{"docs":{},"文":{"docs":{},"都":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"由":{"docs":{},"此":{"docs":{},"用":{"docs":{},"户":{"docs":{},"关":{"docs":{},"注":{"docs":{},"的":{"docs":{},"人":{"docs":{},"或":{"docs":{},"者":{"docs":{},"是":{"docs":{},"用":{"docs":{},"户":{"docs":{},"自":{"docs":{},"己":{"docs":{},"发":{"docs":{},"出":{"docs":{},"的":{"docs":{},"。":{"docs":{},"推":{"docs":{},"文":{"docs":{},"必":{"docs":{},"须":{"docs":{},"按":{"docs":{},"照":{"docs":{},"时":{"docs":{},"间":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"由":{"docs":{},"最":{"docs":{},"近":{"docs":{},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"数论/355. 设计推特.html":{"ref":"数论/355. 设计推特.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"尾":{"docs":{},"数":{"docs":{},"中":{"docs":{},"有":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}}},"没":{"docs":{},"有":{"docs":{},"零":{"docs":{},"。":{"docs":{"数论/172. 阶乘后的零.html":{"ref":"数论/172. 阶乘后的零.html","tf":0.011904761904761904}}}}}}}}},"块":{"docs":{"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857}},"、":{"2":{"docs":{"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857}}},"docs":{}},"石":{"docs":{},"头":{"docs":{},"。":{"docs":{"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857}}},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"块":{"docs":{},"石":{"docs":{},"头":{"docs":{},"总":{"docs":{},"是":{"docs":{},"会":{"docs":{},"被":{"docs":{},"你":{"docs":{},"的":{"docs":{},"朋":{"docs":{},"友":{"docs":{},"拿":{"docs":{},"走":{"docs":{},"。":{"docs":{"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"你":{"docs":{},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"会":{"docs":{},"赢":{"docs":{},"得":{"docs":{},"比":{"docs":{},"赛":{"docs":{},"；":{"docs":{"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}},"拿":{"docs":{},"掉":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"块":{"docs":{},"石":{"docs":{},"头":{"docs":{},"的":{"docs":{},"人":{"docs":{},"就":{"docs":{},"是":{"docs":{},"获":{"docs":{},"胜":{"docs":{},"者":{"docs":{},"。":{"docs":{},"你":{"docs":{},"作":{"docs":{},"为":{"docs":{},"先":{"docs":{},"手":{"docs":{},"。":{"docs":{"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"是":{"docs":{"数论/292. Nim 游戏.html":{"ref":"数论/292. Nim 游戏.html","tf":0.02857142857142857}}}},"上":{"docs":{},"图":{"docs":{},"为":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}},"。":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}},"皇":{"docs":{},"后":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"。":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406}}}}}}}}}}}}},"问":{"docs":{},"题":{"docs":{},"存":{"docs":{},"在":{"docs":{},"如":{"docs":{},"下":{"docs":{},"两":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"。":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"。":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}}},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"解":{"docs":{},"法":{"docs":{},"。":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}},"棋":{"docs":{},"子":{"docs":{},"放":{"docs":{},"置":{"docs":{},"方":{"docs":{},"案":{"docs":{},"，":{"docs":{},"该":{"docs":{},"方":{"docs":{},"案":{"docs":{},"中":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"。":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}},"研":{"docs":{},"究":{"docs":{},"的":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"将":{"docs":{"位运算/52. N皇后 II.html":{"ref":"位运算/52. N皇后 II.html","tf":0.014492753623188406},"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}}}}}}}},"~":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"位运算/51. N皇后.html":{"ref":"位运算/51. N皇后.html","tf":0.004329004329004329}}}}}}},"井":{"docs":{},"字":{"docs":{},"棋":{"docs":{},"游":{"docs":{},"戏":{"docs":{},"的":{"docs":{},"规":{"docs":{},"则":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}}}},"玩":{"docs":{},"家":{"docs":{},"轮":{"docs":{},"流":{"docs":{},"将":{"docs":{},"棋":{"docs":{},"子":{"docs":{},"放":{"docs":{},"在":{"docs":{},"空":{"docs":{},"方":{"docs":{},"格":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}}}}}},"获":{"docs":{},"胜":{"docs":{},"。":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}},"，":{"docs":{},"他":{"docs":{},"总":{"docs":{},"是":{"docs":{},"先":{"docs":{},"走":{"docs":{},"。":{"docs":{"位运算/1275. 找出井字棋的获胜者.html":{"ref":"位运算/1275. 找出井字棋的获胜者.html","tf":0.005025125628140704}}}}}}}}}},"取":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}},"利":{"docs":{},"用":{"docs":{},"k":{"docs":{},"排":{"docs":{},"除":{"docs":{},"掉":{"docs":{},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"找":{"docs":{},"出":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{"位运算/137. 只出现一次的数字 II.html":{"ref":"位运算/137. 只出现一次的数字 II.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}},"“":{"docs":{},"a":{"docs":{},"”":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}}}},"b":{"docs":{},"”":{"docs":{},"，":{"docs":{},"…":{"docs":{},"…":{"docs":{},"，":{"1":{"1":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}}},"docs":{}},"docs":{}}}}}}},"l":{"docs":{},"”":{"docs":{},"，":{"docs":{},"…":{"docs":{},"…":{"docs":{},"，":{"2":{"5":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}}},"docs":{}},"docs":{}}}}}}},"z":{"docs":{},"”":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"可":{"docs":{},"能":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"。":{"docs":{},"请":{"docs":{},"编":{"docs":{},"程":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"计":{"docs":{},"算":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"种":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"翻":{"docs":{},"译":{"docs":{},"成":{"docs":{"剑指offer/46. 把数字翻译成字符串.html":{"ref":"剑指offer/46. 把数字翻译成字符串.html","tf":0.05555555555555555}}}}},"限":{"docs":{},"制":{"docs":{},"：":{"docs":{"剑指offer/28. 对称的二叉树.html":{"ref":"剑指offer/28. 对称的二叉树.html","tf":0.007874015748031496},"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124},"剑指offer/29. 顺时针打印矩阵.html":{"ref":"剑指offer/29. 顺时针打印矩阵.html","tf":0.015384615384615385},"剑指offer/24.反转链表.html":{"ref":"剑指offer/24.反转链表.html","tf":0.006802721088435374},"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"ref":"剑指offer/39. 数组中出现次数超过一半的数字.html","tf":0.010416666666666666},"剑指offer/44. 数字序列中某一位的数字.html":{"ref":"剑指offer/44. 数字序列中某一位的数字.html","tf":0.03571428571428571},"剑指offer/40. 最小的k个数.html":{"ref":"剑指offer/40. 最小的k个数.html","tf":0.016666666666666666},"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}},"观":{"docs":{},"察":{"docs":{},"例":{"docs":{},"子":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"与":{"docs":{},"右":{"docs":{},"上":{"docs":{},"角":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"同":{"docs":{},"一":{"docs":{},"行":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"不":{"docs":{},"大":{"docs":{},"于":{"docs":{},"它":{"docs":{},"，":{"docs":{},"而":{"docs":{},"同":{"docs":{},"一":{"docs":{},"列":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"不":{"docs":{},"小":{"docs":{},"于":{"docs":{},"它":{"docs":{"剑指offer/4.二维数组中的查找.html":{"ref":"剑指offer/4.二维数组中的查找.html","tf":0.003968253968253968}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"‘":{"1":{"docs":{},"’":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}},"docs":{}},"处":{"docs":{},"理":{"docs":{},"后":{"docs":{},"为":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}},"次":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}},"幂":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}}}},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{"剑指offer/41. 数据流中的中位数.html":{"ref":"剑指offer/41. 数据流中的中位数.html","tf":0.00819672131147541}}}}}},"面":{"docs":{},"试":{"docs":{},"题":{"1":{"7":{"docs":{},".":{"docs":{"剑指offer/L191. 位1的个数.html":{"ref":"剑指offer/L191. 位1的个数.html","tf":0.002688172043010753}}}},"docs":{}},"docs":{}}}},"低":{"docs":{},"位":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}},"为":{"docs":{},"百":{"docs":{},"位":{"docs":{},"右":{"docs":{},"边":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"）":{"docs":{"剑指offer/43. 1～n整数中1出现的次数.html":{"ref":"剑指offer/43. 1～n整数中1出现的次数.html","tf":0.007751937984496124}}}}}}}}}}}}},"特":{"docs":{},"别":{"docs":{},"地":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"希":{"docs":{},"望":{"docs":{},"可":{"docs":{},"以":{"docs":{},"就":{"docs":{},"地":{"docs":{},"完":{"docs":{},"成":{"docs":{},"转":{"docs":{},"换":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"当":{"docs":{},"转":{"docs":{},"化":{"docs":{},"完":{"docs":{},"成":{"docs":{},"以":{"docs":{},"后":{"docs":{},"，":{"docs":{},"树":{"docs":{},"中":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"指":{"docs":{},"针":{"docs":{},"需":{"docs":{},"要":{"docs":{},"指":{"docs":{},"向":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"，":{"docs":{},"树":{"docs":{},"中":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"需":{"docs":{},"要":{"docs":{},"指":{"docs":{},"向":{"docs":{},"后":{"docs":{},"继":{"docs":{},"。":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"返":{"docs":{},"回":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"剑指offer/36. 二叉搜索树与双向链表.html":{"ref":"剑指offer/36. 二叉搜索树与双向链表.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"及":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}},"各":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"总":{"docs":{},"次":{"docs":{},"数":{"docs":{},"不":{"docs":{},"超":{"docs":{},"过":{"docs":{"剑指offer/30. 包含min函数的栈.html":{"ref":"剑指offer/30. 包含min函数的栈.html","tf":0.012195121951219513}}}}}}}}}}}}}},"即":{"docs":{"剑指offer/26. 树的子结构.html":{"ref":"剑指offer/26. 树的子结构.html","tf":0.007194244604316547}}},"元":{"docs":{},"素":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}},"入":{"docs":{},"栈":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}},"移":{"docs":{},"除":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{"剑指offer/9. 用两个栈实现队列.html":{"ref":"剑指offer/9. 用两个栈实现队列.html","tf":0.0024509803921568627}}}}}}}},"就":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"该":{"docs":{},"压":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{"剑指offer/31. 栈的压入、弹出序列.html":{"ref":"剑指offer/31. 栈的压入、弹出序列.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}},"参":{"docs":{},"考":{"docs":{},"以":{"docs":{},"下":{"docs":{},"这":{"docs":{},"颗":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"：":{"docs":{"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"ref":"剑指offer/33. 二叉搜索树的后序遍历序列.html","tf":0.015873015873015872}}}}}}}}}}}}}}},"length":9519},"corpusTokens":["!=","!que2.isempty())","!st2.empty())","!stack.isempty();","\"","\"\"","\"\";","\"\"。","\"(\");","\")","\"*\"","\"*a*b\"","\",","\".*\"","\"...q\",","\"..q.\"],","\".q..\"]","\"0\";","\"0.(6)\"","\"0.5\"","\"102\"","\"12\"","\"2\"","\"226\"","\"3033459\"","\";","\"?a\"","\"a\"","\"a\",","\"a*\"","\"a*c?b\"","\"aa\"","\"aaa\"。","\"aaaaacccccaaaaaccccccaaaaagggttt\"","\"aab\"","\"aab\"。","\"aabcc\",","\"aadbbbaccc\"","\"aadbbcbcac\"","\"ab\"","\"ab\",","\"ab\"（1","\"aba\"","\"aba\",","\"aba\"。","\"abab\"","\"abc\"","\"abc\",","\"abc\"。","\"abc\"，它的长度为","\"abc\"，所以其长度为","\"abcabc\"","\"abcabcabcabc\"","\"abcabcbb\"","\"abcde\"","\"abcde\",","\"ac\",","\"acdcb\"","\"ace\"","\"ace\"，它的长度为","\"adceb\"","\"adobecodebanc\",","\"aec\"","\"and\",","\"appl","\"applepen\",","\"applepenapple\"","\"applepenapple\",","\"at\"","\"b\",","\"b\"，所以其长度为","\"ba\",","\"bab\"","\"babad\"","\"babgbag\",","\"bac\",","\"bag\"","\"banc\"","\"bb\"","\"bbbbb\"","\"bbf\"","\"bc\",","\"bczi\",","\"bwfi\",","\"bz\"","\"c\",","\"c*a*b\"","\"caebd\"","\"cat","\"cat\"]","\"cats\",","\"catsanddog\"","\"catsandog\"","\"catsandog\",","\"cb\"","\"cba\",","\"cbaebabacd\"","\"cbbd\"","\"cccccaaaaa\"]","\"cdc\",","\"code\"]","\"cog\"","\"cog\",","\"dbbca\",","\"dce\".","\"def\"","\"dog\"","\"dog\",","\"dog\"]","\"dot\"","\"draw\"；如果仍会有行动（游戏未结束），则返回","\"eae\"","\"eat\"","\"execution\"","\"gr\"","\"great\"","\"great\",","\"hit\"","\"hit\",","\"horse\",","\"hot\"","\"intention\",","\"l\"（12）。","\"leet","\"leetcode\"","\"leetcode\",","\"mcfi\"和\"mzi\"","\"mis*is*p*.\"","\"mississippi\"","\"o","\"o\"","\"oo","\"oox\"","\"pen\",","\"pen\"]","\"pending\"。","\"pine","\"pine\",","\"pineappl","\"pineapple\"]","\"pineapplepenapple\"","\"pwwkew\"","\"q...\",","\"rabbbit\",","\"rabbit\"","\"rgeat\"","\"rgeat”","\"rgtae\"","\"rgtae”","\"ros\"","\"sand\",","\"vf\"","\"wke\"，所以其长度为","\"x","\"x\"","\"xo","\"xox\"","\"xx","\"xxo\"","##","%","%=","&","&&","'","')","'*'","'+'","'.'","'.')","'0'","'0')","'1')","'1'。","'?'","'a'","'a'。因此，字符串","'abcde',","'abcde'，在移动一次之后结果就是'bcdea'","'abced'","'b'","'b'。","'c'","'c')","'c',","'cdeab'","'e')","'h'","'i'","'n'","'o'","'o'（字母","'q'","'r')","'t')","'u')","'x'","'x')","'x'。","'x'。如果两个元素在水平或垂直方向相邻，则称它们是“相连”的。","'z'","(","(!cachemap.containskey(key))","(!freqmap.containskey(node.freq))","(!pq.isempty()","(!que.isempty())","(!que1.isempty()","(!s.empty()","(!st1.empty()","(!st1.empty())","(!st2.empty())","(!stack.empty())","(!stack1.empty())","(!stack2.empty())","(!tweet.containskey(userid))","(!wordbreaki(s,","(!wordlist.contains(endword))","(\"","((8","((9","((curindex","((n","((pivotindex","());","();","(1","(2","(22","(4n","(a","(a.length()","(a.val","(a[0]","(adjacentword,","(ans1","(ans2","(arrays.aslist(nums[i++],","(b","(back[x][y].x","(board.length","(cachemap.size()","(cap","(charact","(cur","(cur.child","(cur.left","(cur.next","(cur.random","(cur.right","(cur.val","(cur1","(cur2","(curlevel","(curpr","(curprev","(dp[k][i][j","(dp[k][i][j]","(dp[n]","(end","(envelopes.length","(fast","(first","(followerid","(followset.containskey(followerid)","(followset.containskey(userid))","(freqmap.get(node.freq).isempty()","(gap","(head","(head.next","(head.val","(high","(i","(index","(int","(int)1e9","(ite.hasnext())","(j","(k","(k)","(l","(ld","(left","(len","(lenarr[i]","(length","(list","(list1","(list1.val","(lists.length","(long)n;","(lrow","(m","(map.containskey(reminder))","(map.entri","(matrix.length","(maxheap.isempty()","(maxleft","(mid","(minheap.isempty()","(n","(needle.length()","(node","(node.left","(node.right","(node1","(node1.v","(node2.next","(num","(numer","(nums.length","(nums1.length","(nums[mid]","(output)","(p","(p)","(par","(par.left","(parindex","(pnode","(pnode.right","(po","(postorder[i]","(pre.right","(prev","(prev.left","(prev.right","(prices.length","(pushed.length","(que1.size()","(que2.size()","(r","(rd","(re","(resid","(ret);","(retcur","(right","(root","(root.begin","(root.left","(row","(rrow","(s","(s)","(s.charat(i","(s.length()","(s1","(s1.equals(s2))","(s1.length()","(s3.length()","(sb.charat(i","(slow","(st2.empty()","(start","(str","(string","(sum","(sum[mid]","(tail[mid]","(tail[mid][1]","(target","(treenod","(true)","(tweet.containskey(followeeid))","(tweet.containskey(userid))","(u,v)，其中第一个元素来自","(u1,v1),","(u2,v2)","(uk,vk)。","(w,","(x","(x^2","(~po","(上箭头符号","(从0开始)。如果不存在，则返回","(删除","(即冷冻期为","(将","(或者子字符串","(推文id","(插入","(未找到","(未找到key","(用户id","(缓存容量)","(股票价格","(高位",")",");","){",")。","*","**/","*/","*=","*duplic","*left;","*next;","*right;","*。","+","+=",",",".","...","/","/*","/**","//","//判断字符串a是否模糊包含字符串b","//寻找最长特殊字串","//已经check过的str","//当前字符串是比它长的字符串的子串","//接着继续计算n中相邻4位的和，8位的和。。。直到相邻32位的和","//自定义比较器：根据字符串长度","/=","0","0)","0);","0,","0.","0.0;","0.25","0.25000","00","000","00000000000000000000000000001011","00000000000000000000000010000000","0001","001","0011","01","010","0100","0101","011","0111","02","0;","0x0000ffff)","0x0000ffff);","0x00ff00ff)","0x00ff00ff);","0x0f0f0f0f)","0x0f0f0f0f);","0x33333333)","0x33333333);","0x55555555)","0x55555555);","0x55555555的二进制为：01010101010101010101010101010101，也即01互相间隔。n和0x55555555的与结果加上n右移一位后和0x55555555的与结果正是n中相邻两位的和","0};","0。","0。可以考虑将计算前缀和改成计算前缀和余k的结果。如果长度为i的前缀和余k等于长度为j的前缀和余k（i","0）的时候买入，在第","0），要么包含增加骑士健康点数的魔法球（若房间里的值为正整数，则表示骑士将增加健康点数）。","1","1)","1))","1));","1))。在本题中采用自底向上遍历的顺序，直接使用triangle数组存储结果，无需额外空间。","1),","1).contains(s);","1);","1)。由于直接求阶乘会导致溢出，所以考虑将其转换为迭代公式。","1,","1,1]","1,so","1.","1/22","1/4","10","10)","10);","10,","10.","100","100.0","1000,","10000","1000]","1000。","100。","1024.00000","1026","1026.","109.","10;","10^9","11","11,","110.","111","11111111111111111111111111111101","113.","114.","1143.","115.","117.","11（即，2","11）。","11：旋转数组的最小数字","12","12,","12.","120,","120.","121.","122.","12258","12258有5种不同的翻译，分别是\"bccfi\",","122，","123\"、\"3.1416\"、\"0123\"及\"","123.","123。","123题的泛化。定义二维数组dp，dp[k][0]表示在最多可以完成k笔交易的情况下，当前处于卖出状态时所能获得的最大利润；dp[k][1]表示在最多可以完成k笔交易的情况下，当前处于买入状态时所能获得的最大利润。初始时对于任意k，dp[k][0]都等于0，而dp[k][1]都等于负无穷，代表初始时不可能处于卖出状态。状态变迁关系参考代码。","127.","1275.","129.","13","13,","13.","130.","131.","132.","136.","137.","138.","139.","14,","14.","140.","142.","143.","144.","145.","146,","15","15.","152.","153.","154.","15],","16\"都表示数值，但\"12e\"、\"1a3.14\"、\"1.2.3\"、\"+","16)","16,","16.","166.","17,","172.","173.","174.","18.","187.","188.","19","19.","19],","1:","1;","1;i>=rl+1;i","1]","1])","1]);","1]+1);","1],","1];","1][2];","1][j","1][j+1]);","1][j]","1][j]);","1][j];","1][n","1][p.length()","1][s2.length()","1][size2","1][t.length()","1][word2.length()","1]小k（i","1]比前j个数的和sum[j","1dao","1e","1e7,","1e7]。","1→l2→ln","1→ln","1、2、3","1、两个链表皆无环：判断两个末尾结点是否相同。","1、使tail数组初始为空","1、在区间范围内随机选择一个pivot，并与区间末尾的元素进行交换（这里的随机选择的方式可以尽量避免算法退化到o(n^2)。至于为什么选择末尾元素是因为这里的遍历方式是从前往后遍历的，同样的，若选择从后往前遍历就需要选择区间首部元素来进行交换了）。","1、时间复杂度为o(n)，空间复杂度为o(1)","1。","1。如果可以变为","1个中心。定义一个expandaroundcenter函数，left和right分别代表当前中心的左右边界（边界不包含在回文串内，所以最后返回回文串长度时是right","1的范围内。","1）。","1）的时候买入，在第","1，","1，也可能是无限循环但始终变不到","1，则在该链表中没有环。","1，它的下一个指针和随机指针都指向节点","1，构成next数组。","1，那么这个数就是快乐数。","1：","1～n整数中1出现的次数","2","2)","2)/2>0，也即字符串2","2);","2)。","2)个子串t构成。","2)，","2,","2,0,","2,4]","2.","2.0","2.00000,","2.0;","2.10000,","2.5","2.82842...,","20","20,000]。","20.表示数值的字符串","20000","201.","20100。","202.","206.","209.","20],","20，返回","21","21,","2147483648","215.","22","22.","22],","22，","23","23,","23.","230.","236.","24.反转链表","240.","24],","25","25.","26","26),","26,","26.","260.","264","264.","273,","28.","287.","29.","292,","292.","295","2:","2;","2]","2]与[2,","2]，因此只能通过减少right来缩小区间进行进一步的搜索。该算法在最坏情况下的时间复杂度为o(n)。","2d","2n","2n)","2n。当","2→…","2、3","2、不破坏二叉树的形状","2、两个链表皆有环：找到其中一个链表环的开始结点，判断这个结点是否在另一个链表中。","2、在遍历数组","2、设置一个partition索引，初始指向区间首部。在遍历区间的过程中如果发现当前索引位元素小于pivot，就将其与partition索引上的元素进行交换，同时partition增1。（将pivot放在末尾可以避免partition出界）","2。若百位上为0，百位上出现1的数字共有","2。那么2","2就是由(2n","2至少会包含一个字符串s。","2）或者","2，它的下一个指针指向","2，总和为","2，说明a之前的两位（后缀）与模式字符串的前两位（前缀）是一致的，这样就只需要把前缀移动到后缀的位置上来就可以了（j","2：","3","3!","3)","3)/2","3);","3,","3.","30","30,","30.","300.","307.","309.","30]","31","31.","313.","32","33","33.","337.","34,","347.","35.","354.","355.","36.","373.","39.","3:","3;","3]","3、其中一个链表有环：不存在这种情况。","3、在有序数组","3、最后需要将pivot放在partition索引上。","3。","3）的时候买入，在第","3）的时候卖出，这笔交易所能获得利润","3，则打印出","3：","4","4)","4);","4,","4.","4.二维数组中的查找","40","40.","41.","426","42。","43.","430.","438.","44.","45.","459.","46.","460.","48.","49.","491","491.","495","495.","4:","4]","4],","4]，","4、最后构造出来的","4。","4）的时候卖出，这笔交易所能获得利润","4：","5","5!","5\"及\"12e+5.4\"都不是。","5).","5);","5,","5.","50","50000","50]","51.","52.","522.","523","56,","560.","5:","5;","5]","5],","5].","5。","5。因为根据定义最近公共祖先节点可以为节点本身。","5）的时候卖出,","5，返回","6","6)","6),","6).","6);","6,","6000","62","65","67","68","69.","6]","6。","6）的时候卖出,","6）的时候卖出，最大利润","7","7,","7.","71","714.","72.","73,","76.","796.","7;","7],","7。","8","8)","8,","8.","8.二叉树的下一个节点","82","84","84};","85.","86.","87.","89.","9","9,","9.","9.26100","91.","92","92.","940.","95.","96.","97.","99","99.","999。","9],",":",";","=","==","=>",">",">0",">1",">2",">2,",">3",">3.",">4",">4,",">5",">5,",">5.",">9",">=",">>",">>=",">>>",">null",">null,","?","@overrid","@return","[","[\"..q.\",","[\".q..\",","[\"1\",\"0\",\"0\",\"1\",\"0\"]","[\"1\",\"0\",\"1\",\"0\",\"0\"],","[\"1\",\"0\",\"1\",\"1\",\"1\"],","[\"1\",\"1\",\"1\",\"1\",\"1\"],","[\"a\",\"a\",\"b\"]","[\"aa\",\"b\"]","[\"aa\",\"b\"],","[\"apple\",","[\"cat\",","[\"cats\",","[\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]","[\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]","[\"leet\",","[\"medianfinder\",\"addnum\",\"addnum\",\"findmedian\",\"addnum\",\"findmedian\"]","[\"medianfinder\",\"addnum\",\"findmedian\",\"addnum\",\"findmedian\"]","[0,","[0,1,0,1,0,1,99]","[0,1,2,1],","[0,1,2,4,5,6,7]","[0,1,3,2]","[0]","[0]。","[1,","[1,1,1,2,2,3],","[1,1,1],","[1,1,2],","[1,1]","[1,1],[1,1]","[1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]","[1,2,0]","[1,2,1,3,2,5]","[1,2,2,3,3,null,null,4,4]","[1,2,2,3,4,4,3]","[1,2,2,null,3,null,3]","[1,2,3,0,2]","[1,2,3,4,5,6,7,8,9]","[1,2,3,4,5,null,7]","[1,2,3,4,5]","[1,2,3,4,5],","[1,2,3]","[1,2,3],","[1,2]","[1,2],","[1,2],[1,4],[1,6]","[1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]","[1,3,2,6,5]","[1,3,4,2,2]","[1,3,5]","[1,3,null,null,2]","[1,3],[2,3]","[1,6,3,2,5]","[1,7,11],","[1,null,2,3]","[1,null,2,null,3]","[1,null,3,2],","[10,","[10,2]","[10,9,2,5,3,7,101,18]","[15,7]","[18,","[1]","[1],","[2,","[2,1,3],","[2,1,4,null,null,3]","[2,1]","[2,2,1]","[2,2,2,0,1]","[2,2,3,2]","[2,3,","[2,3,1,2,4,3]","[2,3,2,4,4]","[2,3,4]","[2,3,7,101]，它的长度是","[2,3]","[2,4,1],","[2,4,6],","[2,4]","[2,7,13,19]","[2,7,13,19]，前","[20,9],","[23,","[23,2,4,6,7],","[23,2,6,4,7],","[23,2,6,4,7]是大小为","[2]","[2],","[3,","[3,1,3,4,2]","[3,1,4,null,2],","[3,1,4,null,null,2]","[3,1,null,null,2]","[3,1,null,null,2],","[3,1]","[3,2,0,","[3,2,1,5,6,4]","[3,2,1]","[3,2,1],","[3,2,3,1,2,4,5,5,6]","[3,2,3,null,3,null,1]","[3,2,6,5,0,3],","[3,2,null,1],","[3,3,5,0,0,3,1,4]","[3,30,34,5,9]","[3,4,","[3,4,5,1,2]","[3,4,5,1,2],","[3,4,5,1,3,null,1]","[3,4],","[3,5,1,6,2,0,8,null,null,7,4]","[3,5,1,6,2,0,8,null,null,7,4],","[3,5]","[3,9,20,null,null,15,7]","[3,9,20,null,null,15,7],","[3],","[4,1,2,1,2]","[4,1,8,3]","[4,1]","[4,3,5,1,2]","[4,3]","[4,5,3,2,1]","[4,5,6,7,0,1,2]","[4,9,0,5,1]","[5,","[5,3,6,2,4,null,null,1],","[5,4,11,2],","[5,4]","[5,8,4,5]","[6,","[6,5,7],","[6,7]。","[7,1,5,3,6,4]","[7,6,4,3,1]","[7,8,9,11,12]","[9,20],","[[0,0],[1,1],[0,1],[0,2],[1,0],[2,0]]","[[0,0],[1,1],[2,0],[1,0],[1,2],[2,1],[0,1],[0,2],[2,2]]","[[0,0],[1,1]]","[[0,0],[2,0],[1,1],[2,1],[2,2]]","[[1,1],[2,1]]","[[1,2,3,4],[5,6,7,8],[9,10,11,12]]","[[1,2,3],[4,5,6],[7,8,9]]","[[3,null],[3,0],[3,null]]","[[5,4],[6,4],[6,7],[2,3]]","[[7,null],[13,0],[11,4],[10,2],[1,0]]","[[],[1],[2],[],[3],[]]","[[],[2],[],[3],[]]","[]","[a,","[m,","[买入,","\\","]","],","^","^3","^=","^^","^^^","^^^^","_child)","_child;","_left,","_left,nod","_left;","_next)","_next,nod","_next;","_prev,nod","_prev;","_random)","_random;","_right)","_right,","_right;","_val)","_val,","_val,nod","_val;","```java","```给定一个数组，它的第","```编写一个高效的算法来判断","a)","a).contains(b);","a)/(2x)，也就是(x+a/x)/2。","a,","a.length;","a:","a=0的一个正实根，这个函数的导数是2x。也就是说，函数上任一点(x,f(x))处的切线斜率是2x。那么，x","a=0的根。根号a实际上就是x^2","a[0]","a[1]","a[i","a[i]);","a[i]){","a[i];","abstractmap.simpleentry(beginword,","abstractmap.simpleentry(endword,","addnum(int","addnum、findmedia进行","adjacentwordsmap","adjacentwordsmap)","adjacentwordsmap);","adjacentwordsmap.get(temp).add(word);","after;","afterhead","ancestor","ans1","ans1;","ans2","ans2;","answer;","answer=new","answer[cur++]=matrix[i][cl];","answer[cur++]=matrix[rh][j];","appl","apple\"","apple\",","apple\"。","applepen","area","arr","arr)","arr,","arr.length","arr.set(countones(row),","arr.size()));","array","arraylist","arraylist(arr));","arraylist<>();","arraylist<>(cur));","arrays.fill(dp,","arrays.fill(last,","arrays.fill(right,","arrays.sort(nums);","arrays/solution/xun","arraytoint(cur);","author","a中有出现和b相同的结构和节点值。","a得到x","a，b，c","a，c，g","b","b)","b);","b.left)","b.length())","b.length;","b.right);","b.val)","b/","b;","b[0]","b[0]));","b[1]","b[j","b[j])","b[j];","babgbag","back","back,","back[i","back[x][y].i","back[x][y];","back数组存储回溯路径","befor","before;","beforehead","begin,","begin;","beginword","beginword,","biao","big","binari","bit","board)","board.length,","board[0].length","board[0].length;","boolean","boolean[]","boolean[][]","boolean[row][col];","boolean[s.length()","boolean[s.length()][s.length()];","boolean[s1.length()","boundari","break;","bst","bst)","bstiter","bstiterator(root);","bstiterator(treenod","buildtree(int[]","buildtree(nums,","buy","b。","b是a的子结构，","b）记录了两人各自的棋子位置。","b），就返回该游戏的获胜者；如果游戏以平局结束，则返回","b：","c","c(n","c(n,","c/c++","c/c++,","c:","cach","cache.get(1);","cache.get(2);","cache.get(3);","cache.get(4);","cache.put(1,","cache.put(2,","cache.put(3,","cache.put(4,","cache/solution/java","cachemap","cachemap.put(key,","cachemap.remove(removekey);","cachemap:","cachemap;","calculateminimumhp(int[][]","call","cap","cap)","cap;","capac","capacity)","capacity;","ch","cha","char[]","checksubarraysum(int[]","child","child;","childlast","childlast.next","childlast.next;","childlast;","chuan","cl++;","cl=0,ch=matrix[0].length","class","cn","cn.com/problems/","cn.com/problems/bao","cn.com/problems/best","cn.com/problems/biao","cn.com/problems/ch","cn.com/problems/convert","cn.com/problems/da","cn.com/problems/design","cn.com/problems/find","cn.com/problems/first","cn.com/problems/flatten","cn.com/problems/fract","cn.com/problems/gray","cn.com/problems/happi","cn.com/problems/impl","cn.com/problems/kth","cn.com/problems/lfu","cn.com/problems/lian","cn.com/problems/longest","cn.com/problems/lowest","cn.com/problems/maxim","cn.com/problems/median","cn.com/problems/n","cn.com/problems/nim","cn.com/problems/numb","cn.com/problems/path","cn.com/problems/rang","cn.com/problems/rep","cn.com/problems/search","cn.com/problems/shu","cn.com/problems/singl","cn.com/problems/sum","cn.com/problems/surround","cn.com/problems/top","cn.com/problems/ugli","cn.com/problems/uniqu","cn.com/problems/valid","cn.com/problems/word","code","code\"。","col","col;","collections.binarysearch(tail,","collections.reverse(nums);","common","compar","comparator()","compare(str","complexity:","compos","computetreeheight(node.left);","computetreeheight(node.right);","computetreeheight(root)","computetreeheight(treenod","cong","connect","connect(nod","contains(str","content","copyrandomlist","copyrandomlist(nod","count","count++;","count;","countdigitone(int","counter","countones(int","cur","cur)","cur,","cur.add(root.val);","cur.child","cur.child.prev","cur.child;","cur.left","cur.left;","cur.next","cur.next.next;","cur.next.prev","cur.next.random","cur.next.val)","cur.next;","cur.random.next;","cur.random;","cur.remove(cur.size()","cur.right;","cur.val","cur.val;","cur1","cur1.next","cur1.next.next;","cur1.next;","cur2","cur2.next;","cur2;","cur;","cur=0;","cur_right","cur_right);","curindex","curindex;","curlevel","curpr","curpre.right","curpre;","curprev,","currenttim","currenttime++));","currenttime++);","currenttime;","cutrope(int","cycl","da","dao","data","de","decim","definit","deleteduplication(listnod","denomin","denominator);","denominator;","denominator，以字符串形式返回小数。","deque（双端队列）来模拟一个栈，只要是标准的栈操作即可。","deque（双端队列）来模拟一个队列","detectcycle(listnod","dfs(0,","dfs(board,","dfs(row","di","dian","dict","distinctsubseqii(str","divisor","dna","dog\"","dog\",","doubl","doubli","dp","dp(root);","dp(root.left);","dp(root.right);","dp(treenod","dp0","dp1","dp[0]","dp[0].add(\"\");","dp[0][0]","dp[1]","dp[2]","dp[i","dp[i+1]","dp[i]","dp[i]);","dp[i].add(str","dp[i][j","dp[i][j]","dp[i][j]表示s长度为i的前缀的子序列中t的长度为j的前缀出现的次数","dp[j","dp[j]","dp[j])","dp[last[x]];","dp[n","dp[n]","dp[n][i][j]代表s1中起点为i的长度为n的字符串是否为s2中起点为j的长度为n的字符串的扰乱字符串","dp[s.length()]","dp[s.length()];","dp[s.length()][p.length()];","dp[size1][size2];","dp[t.length()];","dummi","dummy,","dummy.left","dummy.next","dummy.next;","dummy;","dummycur","dummycur.next","dummycur.next;","dungeon","dungeon)","dungeon.length;","dungeon[0].length;","dungeon[i][j]","dungeon[i][j]+1，即初始值f[i][j]=","dungeon[i][j]+1，如果格子的值是非负数，那么初始值f[i][j]=1。","dungeon[i][j]+min(f[i+1][j],f[i][j+1])","dungeon[i][n","dungeon[m","duplic","duplicate(int","duplication)","duplication:","duplication[0]","dupnum","dupnum)","e","e1.getvalue();","e2)","e2.getvalue()","each","eat","ele.length());","ele:","element","element.","empti","empty()","empty.","end","end)","end));","end);","end,","end;","endword","endword,","endword）和一个字典，找到从","enent","ensur","entri","entry.getkey();","entry.getvalue()","entry.getvalue());","entry:","envelop","envelopes)","envelopes[0];","envelopes[i];","equal","exect","execut","exent","expandaroundcenter(str","f","f(i","f(x)/(2x)就是一个比x更接近的近似值。代入f(x)=x^2","f[0][0];","f[i+1][n","f[i][j+1]));","f[i][j]","f[i][j]=max(1,","f[i][n","f[m","fa","factori","fals","false;","false。","false。假设输入的数组的任意两个数字都互不相同。","fast","fast)","fast.next","fast.next.next;","fee","fee)","feed","feed.","final","findanagrams(str","findduplicate(int[]","findkthlargest(int[]","findluslength(string[]","findmedian()","findmediansortedarrays(int[]","findmin(int[]","findnthdigit(int","findrepeateddnasequences(str","first","first.left","first;","firstmissingpositive(int[]","flatten(nod","flatten(treenod","follow","follow(followerid,","followee.","followeeid","followeeid)","followeeid):","followerid,","followset","followset.get(followerid).add(followeeid);","followset.get(followerid).contains(followeeid))","followset.get(followerid).remove(followeeid);","followset.get(userid).iterator();","followset;","for(int","for(str","fractiontodecimal(int","freq","freq)","freq;","freqmap","freqmap.get(1).add(newnode);","freqmap.get(minfreq).iterator().next().key;","freqmap.get(minfreq).remove(freqmap.get(minfreq).iterator().next());","freqmap.get(node.freq).add(node);","freqmap.get(node.freq).remove(node);","freqmap.put(node.freq,","freqmap;","frequent","front","front,","fu","g","game","gap","gap,","ge","generatetrees(1,","generatetrees(i","generatetrees(int","generatetrees(start,","get(int","get(key)","getkthfromend(listnod","getleastnumbers(arr,","getleastnumbers(int[]","getnewsfeed(int","getnewsfeed(userid):","getnext(needle);","getnext(treelinknod","given","gr","graycode(int","great","gu","h","h)","hammingweight(int","han","hashmap","hashmap<>();","hashmap<>(){{","hashmap>","hashset<>();","hasnext()","haystack","haystack,","haystack.length(),","head","head)","head,","head.next","head.next,","head.next.next","head.next.next;","head.next;","head;","height","helper(a,","helper(a.left,","helper(a.right,","helper(arraylist","helper(cur.child);","helper(head);","helper(int[]","helper(listnode[]","helper(lists,","helper(nod","helper(node.left,","helper(node.right,","helper(postorder,","helper(que1,","helper(que2,","helper(queue>","helper(ret,","helper(root,","helper(s,","helper(str","helper(treenod","here","here.","herself.","high","hold","hold1","hold2","hold，分别代表当前处于卖出状态时获得的利润，当前处于休息状态时的利润，当前处于买入状态时获得的利润。卖出状态只能从买入状态变迁得来。买入状态可以从买入状态或者休息状态变迁得来。休息状态可以从休息状态或者卖出状态变迁得来。初始时sold和rest都为0，hold为负无穷。最后返回sold和rest中的最大值。","hors","https://leetcod","i)","i));","i).toarray();","i);","i)的子串的最少分割次数。i=0时由于只有一个字符，所以其最小分割次数为0。","i++;","i,","i1);","i2","i2)","i;","i=rh","i]);","id","if(contains(str2,","if(index","if(islus)","if(matrix.length","if(matrix==null||matrix.length==0||matrix[0].length==0){","if(matrix[i][j]","if(n","if(s1.length()","if(s[index]","if(sortedmap.get(str)","ii","ii.","ii/","ii/solution/java","ii/solution/mai","iii","iii.","ii的解法：","imax","imin","implementation;","import","index","index)","index++;","index1","index1,","index1;","index2","index2,","index2;","index;","inent","initi","inordertraversal(root);","inordertraversal(root.left);","inordertraversal(treenod","input","instanti","int","int[0];","int[26];","int[]","int[][]","int[]{0,","int[]{448,","int[]{math.max(left[0],","int[envelopes.length][2];","int[k","int[k];","int[m][n];","int[matrix.length","int[n","int[n+1];","int[n];","int[nums.length];","int[nums.size()","int[primes.length];","int[s.length()","int[s.length()];","int[size1","int[t.length()","int[target","int[word1.length()","integ","integer.max_value)","integer.max_value,","integer.max_value;","integer.min_value,","integer.min_value;","intent","introduct","invalid,","isbalanced(treenod","ishappy(int","isinterleave(str","islu","ismatch(str","isnumber(str","isscramble(str","issubstructure(a.left,","issubstructure(a.right,","issubstructure(treenod","issymmetric(node1.left,","issymmetric(node1.right,","issymmetric(root,","issymmetric(treenod","it","ite.next();","item","iter","iterator.hasnext();","iterator.next();","iv","j","j)","j),","j);","j)代表从(i,","j)位置移动到三角底部的最小路径和，状态变迁公式为：f(i,","j,","j;}","java","java.util.abstractmap;","java.util.random;","java）中，没有无符号整数类型。在这种情况下，输入和输出都将被指定为有符号整数类型，并且不应影响您的实现，因为无论整数是有符号的还是无符号的，其内部的二进制表示形式都是相同的。","ji","jia","jie","ju","k","k)","k);","k,","k;","k]","k])","k][i","k][j","k][j]),","ka/","key","key)","key,","key;","key是出现频率，value是对应出现同样频率的所有node结点（频率一样使用最近最少使用lru原则）。这个表不涉及put/get数据，涉及update，负责处理频率相关操作。","kge","kmp(needle);","ksmallestpairs(int[]","kth","kthsmallest","kthsmallest(treenod","k。","k，你需要找到该数组中和为","k，编写一个函数来判断该数组是否含有连续的子数组，其大小至少为","l","l,","l0→ln→l1→ln","l153.","l154.","l191.","l225.","l232.","l240.","l287.","l50.","l74.","l:","l;","la","labuladong/","ladder","ladderlength(str","last","last.right","last;","last[x]","lastnum","lcof","lcol","ld);","leaf","leetcode/","left","left)","left++;","left,","left;","left[0]","left[1])","leftmost","len","len++;","len;","lenarr[2","lenarr[i]","lenarr[i])","lenarr[i]))","lenarr[i]++;","lenarr[i];","length","length,int","length:","lengthoflis(int[]","lengthoflongestsubstring(str","levelorder(treenod","lfucach","lfucache(","lfucache(capacity);","lfucache(int","lfu缓存","lian","liang","link","linkedhashset","linkedhashset<>());","linkedlist","linkedlist());","linkedlist():","linkedlist();","linkedlist<>();","list","list.","list.add(0,","list.add(node.val);","list/","list1,","list2","list2)","list:","list>","list[]","list[s.length()","listnod","listnode(","listnode(0);","listnode(int","lists)","lists,","lists.length","lists[start];","liu","log","logk)。","long","long.valueof(a);","long.valueof(b);","longestcommonsubsequence(str","longestpalindrome(str","low","lowestcommonancestor(root.left,","lowestcommonancestor(root.right,","lowestcommonancestor(treenod","lrow","l：l0→l1→…→ln","m","m)","m,","mai","majorityelement(int[]","majorityelement(nums,","manacher算法：http://www.cnblogs.com/grandyang/p/4475985.html","map","map.entri","map.entryset())","map.get(retcur.random);","map.get(s.charat(left))","map.get(sum)","map.put(0,","map.put(cur,","map.put(numerator,","map.put(reminder,","map.put(s.charat(left),","map.put(sum,","map>","match","math.abs(right","math.max(1,","math.max(a[i","math.max(dp[i],","math.max(left,","math.max(len,","math.max(maxlength,","math.max(res,","math.max(res[0],","math.max(right[0],","math.min(b[j],","math.min(f(i","math.min(f[i+1][j],","math.min(len,","math.min(mx","math.min(right[j],","matrix","matrix)","matrix,","matrix.length","matrix.length;","matrix67)","matrix[0].length","matrix[0].length;","matrix[0].length];","matrix[lrow][lcol]","matrix[lrow][mid])","matrix[row][col])","max","max;","maxarea","maxenvelopes(int[][]","maxheap","maxheap,","maxheap.offer(num);","maxheap.peek())","maximalrectangle(char[][]","maxleft","maxleft;","maxlength","maxproduct(int[]","maxprofit(int","maxprofit(int[]","maxprofit(prices);","maxval","max{1","median","medianfind","medianfinder()","merge2lists(helper(lists,","merge2lists(listnod","mergeklists(listnode[]","mid","mid)","mid),","mid);","mid;","min","min(dp(j)","mincut(str","mindistance(str","minfreq","minfreq)","minfreq;","minfreq=1","minhan","minheap","minheap.offer(maxheap.poll());","minheap.offer(num);","minheap;","minimumtotal(list>","minlen","minnumber(int[]","minright","minright)","minstack","minstack()","minstack();","minstack.min();","minstack.pop();","minstack.push(","minstack.push(0);","minstack.top();","minsubarraylen(int","minval","minwindow(str","min、push","miss","mod","mod;","morris方法可以做到：","move","moves)","moves，其中每个元素是大小为","mutabl","mx","mx)","mypow(doubl","myqueu","myqueue()","myqueue();","mysqrt(int","mystack","mystack()","mystack();","n","n!","n!中有多少个0，取决于n!中一共有多少个质因数2和5，由于2的个数一定大于5，所以最终取决于有多少个5。","n)","n))。","n);","n*k，其中","n,","n1.num1","n1.num2","n1.time;","n2)","n2.num1","n2.num2;","n2.time","n;","n]，其中","need","needl","needle)","needle.length();","new","newnode);","next","next()","next(int","next(next(fast));","next(slow);","next;","next[j])。","nextlevel","nextlevel++;","nextlevel;","nim","node","node(","node()","node();","node(0,","node(cur.val);","node(int","node(tweetid,","node)","node);","node,","node.","node.freq","node.freq+1","node.left","node.left;","node.leftcnt,","node.next","node.random","node.right","node.right;","node.val;","node1","node1,","node1.next;","node1.v","node1.val;","node1;","node2","node2)","node2,","node2.left);","node2.next;","node2.right)","node2.v","node2.val)","node2.val;","node2;","node;","nthsuperuglynumber(int","nthuglynumber(int","null","null)","null);","null,","null;","null;;","nulllist","nulllist.add(null);","nulllist;","null。","null，随机指针指向它自己。","num","num)","num1,","num1;","num2)","num2;","num;","num[0]","numarr","numarray","number","number,length","number/","numbers:","numbers[],int","number）。求按从小到大的顺序的第","numdecodings(str","numdistinct(str","numer","nums)","nums,","nums.add(num","nums.length","nums.length;","nums1","nums1,","nums1[0],","nums1，第二个元素来自","nums2","nums2,","nums2.length","nums2[0]));","nums2。","nums[0]","nums[0],","nums[0];","nums[i","nums[i]","nums[i]))","nums[i]);","nums[i];","nums[j","nums[j])","nums[k])));","nums[l]);","nums[left];","nums[nums[fast]];","nums[parindex];","nums[res];","nums[right])","nums[slow];","nums[start];","nums，其中恰好有两个元素只出现一次，其余所有元素均出现两次。","nums，其数字都在","nums，判断","nums，求出数组从索引","num，如果这个数严格大于有序数组","nwei","n×n","n皇后","n），可知至少存在一个重复的整数。假设只有一个重复的整数，找出这个重复的数。","n，其格雷编码序列并不唯一。","n，打印其格雷编码序列。格雷编码序列必须以","n，按顺序打印出从","n，求以","n，生成所有由","n，返回","n，返回所有不同的","o","o(1)","o(1)。","o(1)，并使用","o(h)","o(k),","o(log","o(log(m","o(logn),","o(mxn)","o(mxn),","o(n","o(n)","o(n2)","o1shi","obj","obj.empty();","obj.follow(followerid,followeeid);","obj.get(key);","obj.getnewsfeed(userid);","obj.peek();","obj.pop();","obj.posttweet(userid,tweetid);","obj.push(x);","obj.put(key,value);","obj.top();","obj.unfollow(followerid,followeeid);","object","offset","offset++;","on","onto","op.","oper","order","otherwis","o）。","p","p)","p);","p,","p.charat(j","p.concat(\"$\");","p.left;","p.right;","p.val;","p:","p;","pair","par","par.next;","par;","param_1","param_2","param_3","param_4","parameters:","parindex","partition(int[]","partition(listnod","partition(nums,","partition(str","partition_index","path","pathsum(root,","pathsum(root.left,","pathsum(root.right,","pathsum(treenod","peek","peek()","peek();","peek/pop","pen","perfect","phead)","phead;","piao","pindex","pivot_index","pivot_index,","pivotindex","pivotindex,","pnode","pnode)","pnode.next;","pnode.right;","po","pointor","pop","pop()","popped)","popped.length)","posit","possibl","post","postorder)","postorder,","postorder.length","postorder[end])","postordertraversal(treenod","posttweet(int","posttweet(userid,","pow(x,","pq","pq.add(entry);","pq.add(long.valueof(1));","pq.add(new","pq.add(tweet.get(followeeid));","pq.add(tweet.get(userid));","pre","pre,","pre.next","pre.next;","pre.right","pre.right;","pre;","preordertraversal(treenod","prev","prev)","prev));","prev.left","prev.left;","prev.right","prev.right;","prev;","price","prices)","prices,","prices.length","prices[0]","prices[0],","prices[3]","prices[4]","prices[5]","prices[i","prices[i]","prices，其中第","prime","primes)","printnumbers(int","priorityqueu","priorityqueue<>((e1,","priorityqueue<>((i1,","priorityqueue<>((n1,","priorityqueue<>();","privat","public","push","push(1),","push(2),","push(3),","push(4),","push(5),","push(int","push(x)","pushed,","put(int","put(key,","put(key,value):","put。","pythonyxi","p、q","p、q，最近公共祖先表示为一个结点","p，找到","p，请你来实现一个支持","q","q)","q);","que","que,","que.add(new","que.offer(node.left);","que.offer(node.right);","que.offer(root);","que.poll();","que1","que1,","que1.add(new","que1.add(que2.poll());","que1.add(ret);","que1.add(x);","que1.poll();","que1.size()","que2","que2.add(new","que2.add(que1.poll());","que2.add(ret);","que2.add(x);","que2.poll();","que2.size()","que2;","queen","queri","queue","queue.","queue.empty();","queue.peek();","queue.pop();","queue.push(1);","queue.push(2);","queue>","r","r)","r);","r,","r:","r;","rabbbit","random","random().nextint(end","random;","rangebitwiseand(int","rcol","rd","re","recent","recent.","recovertree(treenod","rectangle/solution/zui","recur","region","remind","reminder;","remov","removekey","reorderlist(listnod","repeatedsubstringpattern(str","requir","require.getordefault(c,","required.getordefault(c,","required.put(c,","res.add(cur.val);","res.add(list);","res.add(new","res.add(pq.poll().getkey());","res.addall(helper(cur.left,","res.addfirst(cur.val);","res.append(\")\");","res.append((numer","res.append(string.valueof(divisor));","res.insert(map.get(reminder),","res.length());","res.tostring();","res1","res;","res[1]);","resid","reslen","reslen)","rest","rest,","result","result)","result);","result.add(new","result;","ret","ret)","ret,","ret.add(0);","ret.add(arraytoint(cur));","ret.add(list);","ret.add(ret.get(j)","ret.add(root);","ret.addfirst(cur.val);","ret.addfirst(prev.val);","ret.next;","ret.size()","ret.stream().maptoint(i","ret;","retcur","retcur);","retcur.next","retcur.next.next;","retcur.next;","retcur.random","retcur.v","retriev","return","return;","reversebetween(listnod","reversekgroup(listnod","reverselist(cur2);","reverselist(head.next);","reverselist(listnod","rg","rgeat","rgtae","rh","right","right)","right++;","right;","right[0]};","right[1]),","right[j]","rightmost","rl++;","rl=0,rh=matrix.length","ro","rob(treenod","root","root)","root);","root,","root.begin","root.end","root.end)","root.end);","root.left","root.left.sum","root.left;","root.leftcnt+1,","root.right","root.right.sum;","root.sum","root.sum;","root.val","root.val)","root.val);","root.val,","root.val;","root;","root=root.right","rors","rose","rotatestring(str","row","row,","row;","rowstr(int","rowstr(p,","rrow","rrow)","r）而不是（r","s","s)","s).substring(1,","s){","s,","s.charat(0)","s.concat(\"$\");","s.length","s.length()","s.length())","s.length());","s.length();","s.length){","s.pop();","s.push(p);","s.substring((resid","s.substring(j,","s.substring(start,","s.tochararray();","s1","s1);","s1,","s1.length()","s1，我们可以把它递归地分割成两个非空子字符串，从而将其表示为二叉树。","s2","s2)","s2).compareto(s2","s2,","s2.length())","s2，判断","s3","s3)","s3,","s:","s;","s[index]","sand","sarr","sb","sb.append(text1.charat(x","sb.charat(i","sb.tostring();","scannum(char[]","scanunsignednum(s);","search","searchmatrix(int[][]","segmenttre","segmenttree(int","segmenttree(l,","sell","sequenc","set","set)","set.add(str);","shi","shu","shuang","singlenumber(int[]","singli","size,","size1","size1,","size2","size2;","slow","slow)","slow.next;","slow;","small","smallest","sold","sold1","sold2","solut","solve(char[][]","solvenqueens(int","sort","sortedlisttobst(head);","sortedlisttobst(listnod","sortedlisttobst(slow.next);","sortedmap","sortedmap.getordefault(str,","sortedmap.keyset())","sortedmap.put(str,","sou","space","spiralorder(int[][]","sqrt(int","st","st1","st1,","st1.pop();","st1.push(node.left);","st1.push(node.right);","st1.push(root);","st1.push(x);","st2","st2.pop();","st2.push(node.left);","st2.push(node.right);","st2;","stack","stack.","stack.pop();","stack.push(cur.left);","stack.push(cur.right);","stack.push(p);","stack.push(root);","stack1","stack1,","stack1.empty()","stack1.push(x);","stack2","stack2.empty();","stack2.peek();","stack2.pop();","stack2.push(stack1.pop());","stack2;","stack;","stack<>();","star","star_","start","start)","start,","start;","static","stock","str","str))","str.length());","str.length();","str2","str:","stream/","string","stringbuild","stringbuilder(\"$#\");","stringbuilder();","strlencompar","strs)","strstr","strstr()","strstr(string","strstr/solution/kmp","struct","structur","suan","subarraysum(int[]","subsequ","such:","sum","sum)","sum,","sum;","sum[0]","sum[i]","sumnumbers(treenod","sumnumbershelper(root,","sumnumbershelper(root.left,","sumnumbershelper(root.right,","sumnumbershelper(treenod","sumrang","sumrange(0,","sumrangehelper(root.left,","sumrangehelper(root.right,","sumrangehelper(segmenttre","suo","swap(nums,","system.out.println(i","system.out.println(sb.reverse().tostring());","s、一个字符串","s的，而不是部分字符串。","s，将","s，找到","s，计算","t","t)","t.charat(j","t.tochararray())","t.x;","t.y;","t;","ta","tae","tail","tail)","tail));","tail.add(nums[i]);","tail.get(tail.size()","tail.next","tail.next;","tail;","tail[++end]","tail[0]","tail[end])","tail[end][1])","target","target)","target;","target_index)","target。该矩阵具有以下特性：","temp","temp.next","temp.next.next","temp1","temp1)","temp2","temp2)","temp;","text1","text1,","text1.length(),","text2","text2)","text2.length();","text2，返回这两个字符串的最长公共子序列。","this.begin","this.col","this.end","this.freq","this.i","this.index1","this.index2","this.key","this.next","this.num1","this.num2","this.random","this.row","this.sum","this.tim","this.tweetid","this.val","this.valu","this.x","three","threesum(int[]","tictactoe(int[][]","time","time)","time;","top","top()","top,","topkfrequent(int[]","totalnqueens(int","trail","trailingzeroes(int","translatenum(int","traversal的方法前序遍历二叉树。","treat","tree","treelinknod","treelinknode(int","treemap","treemap<>(strlencomparator);","treenod","treenode(","treenode(head.val);","treenode(i);","treenode(int","treenode(slow.val);","treetodoublylist(nod","triangle(i,","triangle)","triangle.size()","true","true;","true。","true，否则返回","true，因为","tupl","tuple(i","tuple(i,","tuple(int","tuple[][]","tuple[size1","tweet","tweet.","tweet.get(userid);","tweet.put(userid,","tweet;","tweetid)","tweetid):","tweetid,","tweetid;","twitter","twitter()","twitter();","twitter.follow(1,","twitter.getnewsfeed(1);","twitter.posttweet(1,","twitter.posttweet(2,","twitter.unfollow(1,","two","tyh7/","t，计算在","t，请在字符串","uncommon","unfollow","unfollow(followerid,","unfollow(int","unsign","updat","update(1,","update(cachemap.get(key)).value;","update(i,","update(nod","update(node):","updatehelper(segmenttre","upperlim","upperlim)","us","user","user'","userid)","userid,","val","val)","val;","valid,","validatestacksequences(int[]","valu","value)","value,","value:","value;","val，从而对数列进行修改。","var","verifypostorder(int[]","visit","visited);","visited.add(word);","visited1","visited1,","visited1.put(beginword,","visited1.put(word,","visited2","visited2,","visited2.put(endword,","void","wei","whether","while(i","while(index","while(right","while(rl=cl;j","win","word","word1","word1,","word2","word2)","word2，计算出将","word:","wordbreak(str","wordbreaki(str","worddict","worddict)","worddict))","worddict，判定","worddict，在字符串中增加空格来构建一个句子，使得句子中所有的单词都在词典中。返回所有这些可能的句子。","wordlist","wordlist)","x","x)","x)。同时对于迭代方程也要做一下优化，即使用不带符号的右移操作替代除以2。","x,","x;","xian","xiang","xing","xor","xor};","xor为两个结果元素异或的结果","xu","x的平方根","x，对链表进行分隔，使得所有小于","x，满足","y","y)","y;","yin","yu","z","zero","zhan","zhao","zhi","zhong","zi","zu","zui","{","{\"$id\":\"1\",\"next\":{\"$id\":\"2\",\"next\":null,\"random\":{\"$ref\":\"2\"},\"val\":2},\"random\":{\"$ref\":\"2\"},\"val\":1}","{1,2,3,4,5}","{4,3,5,1,2}","{4,5,3,2,1}","{res1,","{right[j]","{}","|","||","}","});","};","}d","}};","~(row","‘1’","“a”","“b”，……，11","“l”，……，25","“z”。一个数字可能有多个翻译。请编程实现一个函数，用来计算一个数字有多少种不同的翻译方法。","≤","≥","。","。​","。如果在若干次旋转操作之后，a","一个“快乐数”定义为：对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和，然后重复这个过程直到这个数变为","一个二叉树每个节点","一个可能的答案是：[0,","一个字符串的","一个字符串的一个子序列是指，通过删除一些（也可以不删除）字符且不干扰剩余字符相对位置所组成的新字符串。（例如，\"ace\"","一个最短转换序列是","一些恶魔抓住了公主（p）并将她关在了地下城的右下角。地下城是由","一共有","一定要在res中添加新创建的arraylist","一条包含字母","一直到最大的","一道典型的树状dp的题。","三数之和","三条规则：","三角形最小路径和","上。","上图为","下","下图展示了上面的二叉搜索树转化成的链表。“head”","下图是字符串","下面这种方法可以很有效地求出根号a的近似值：首先随便猜一个近似值x，然后不断令x等于x和a/x的平均数，迭代个六七次后x的值就已经相当精确了。","下，则骑士的初始健康点数至少为","不会同时为空。","不使用哈希表，而是把复制后的新节点插入到旧节点之后。这样对于任何一个旧节点，它的next指针就是指向其对应的新节点。之后通过一次遍历修改所有新节点的random指针。最后再经过一次遍历将新旧链表拆分开来。","不允许旋转信封。","不同的二叉搜索树","不同的子序列","不在字典中，所以无法进行转换。","不是","不是子数组。","不是）","不考虑答案输出的顺序。","不能在","不能更改原数组（假设数组是只读的）。","不超过1690。","与","丑数","两个hashmap：","两个字符串完全匹配才算匹配成功。","两点。","两笔","个","个,","个一组翻转链表难度困难","个不同的元素。","个不同的子序列分别是","个丑数。","个严格大于","个元素代表了第","个元素是一支给定的股票在第","个元素是一支给定股票第","个字母长的序列（子串）。","个待反转元素","个房间组成的二维网格。我们英勇的骑士（k）最初被安置在左上角的房间里，他必须穿过地下城并通过对抗恶魔来拯救公主。","个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。","个整数的数组","个最大的元素。请注意，你需要找的是数组排序后的第","个最大的元素，而不是第","个最小的元素。","个正整数的数组和一个正整数","个皇后放置在","个相同的（非空）棋子排成一条直线（行、列、对角线）时，游戏结束。","个节点一组进行翻转，请你返回翻转后的链表。","个超级丑数。","个超级丑数序列为：[1,2,4,7,8,13,14,16,19,26,28,32]","个零.","个高频元素","中不存这样的子串，则返回空字符串","中存在这样的子串，我们保证它是唯一的答案。","中寻找","中得到","中心扩展算法：设字符串s长度为n，则一共存在2n","中所有是","中是否存在三个元素","中最长的回文子串。你可以假设","中查找第","中的一个目标值","中的数字以升序排列。","中的正整数。","中的每一个前缀都是一个最“紧致”的上升子序列。所谓最“紧致”的上升子序列是指在所有相同长度的上升子序列中该子序列的首尾元素差最小（这是贪心的关键）。构造","中的重复序列有时会对研究非常有帮助。","中第i个索引的元素为结尾的最长上升子序列的长度（注意必须是以该元素为结尾）","中至少存在一个下一个最小的数。","中间结果","中，共有","中，共有一位为","中，共有三位为","中，编译器使用二进制补码记法来表示有符号整数。因此，在上面的","中，输入表示有符号整数","为","为三角形的总行数）来解决这个问题，那么你的算法会很加分。","为不同节点且均存在于给定的二叉树中。","为两种不同的情况。","为了尽快到达公主，骑士决定每次只向右或向下移动一步。","为了求整型n中1的个数，可以采用分而治之的方法","为了表示给定链表中的环，我们使用整数","为了让您更好地理解问题，以下面的二叉搜索树为例：","为了防止在一些测试用例上超时，首先复用139题的代码来判断结果是否存在","为以","为正整数","为节点所组成的二叉搜索树。","为节点组成的二叉搜索树有多少种？","主要思路就是将3sum转化成2sum：首先将数组按照升序排序，然后固定第三个数去搜索前两个数。这里需要注意的是对于重复结果的处理。","主要还是借助快速排序的思想。这里重点说下快排中划分部分的算法。","之前在刷leetcode的过程中，发现很多题目做过就忘掉了，再次碰到类似的甚至是相同的题目是依然感觉无从下手。其实这往往是因为对于题目没有理解，掌握透。因此在之后的刷题过程中，刻意放慢了脚步，每做完一道题，都去主动思考这种算法的时空复杂度是多少，是否还有更优的解法，能否做到举一反三等。","之前弹出。","之间。","之间（包括","之间，每一次二分都可以将搜索区间缩小一半。","乘积最大子序列","也可能序列中所有的数对都被返回:[1,3],[2,3]","也就是","也就是只有","也是一个整数。","也是一个有效的格雷编码序列。","也是一个有效答案。","也是正确答案。","买入,","买卖股票的最佳时机","买卖股票的最佳时机含手续费","事件复杂度为o(n)，空间复杂度为o(n)。","二分查找","二叉搜索树与双向链表","二叉搜索树中的两个节点被错误地交换。","二叉搜索树中第k小的元素","二叉搜索树元素个数。","二叉搜索树的后序遍历序列","二叉搜索树迭代器","二叉树","二叉树展开为链表","二叉树的前序遍历","二叉树的后序遍历","二叉树的最近公共祖先","二进制中1的个数","井字棋游戏的规则如下：","交换律：a","交易。","交错字符串","交错组成的。","从上到下打印二叉树","从上到下按层打印二叉树，同一层的节点按从左到右的顺序打印，每一层打印到一行。","从数据流中添加一个整数到数据结构中。","从根到叶子节点路径","从队列首部移除元素。","代码","代码1","代码1（bfs）","代码1（dp）","代码1（dp，20ms）","代码1（递归遍历，空间复杂度o(logn)）","代码2","代码2（morris遍历法，空间复杂度o(1)）","代码2（三指针法）","代码2（公式法）","代码2（双向bfs）","代码2（递归","代码3","代码（dp）","代码（线段树）","代码（迭代方法）","代码（迭代）","代码（递归方法）","代码（递归）","代表了交易股票的手续费用。","代表可以匹配零个或多个前面的那一个元素,","代表数字","以上的输出对应以下","以及","以及一个整数","以百位上1出现的次数为例，分三种情况讨论（高位为百位左边的数字，","任何不在边界上，或不与边界上的","任何房间都可能对骑士的健康点数造成威胁，也可能增加骑士的健康点数，包括骑士进入的左上角房间以及公主被监禁的右下角房间。","任何数于0异或为任何数","优化，2ms）","但是下面这个","但第二个","位1的个数","位为","位十进制数。比如输入","位数","位数为2时的格雷码为：","位有符号整数范围内。","位运算","低位","低位为百位右边的数字）","作为棋子。","作为棋子，而第二个玩家","作者：kao","你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。","你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。","你们是聪明人，每一步都是最优解。","你只能使用常量级额外空间。","你只能使用标准的栈操作","你只能使用队列的基本操作","你可以不使用额外空间来实现吗？","你可以使用","你可以假设","你可以假设字典中没有重复的单词。","你可以假设所有操作都是有效的（例如,","你可以假设数组中不存在重复元素。","你可以假设数组是非空的，并且给定的数组总是存在多数元素。","你可以假设给定的","你可以对一个单词进行如下三种操作：","你可以无限次地完成交易，但是你每次交易都需要付手续费。如果你已经购买了一个股票，在卖出它之前你就不能再继续购买股票了。","你可以认为所有数字总和在","你和你的朋友，两个人一起玩","你应当保留两个分区中每个节点的初始相对位置。","你必须返回给定头的拷贝作为对克隆列表的引用。","你所使用的语言也许不支持栈。你可以使用","你所使用的语言也许不支持队列。","你是否可以不用额外空间解决此题？","你是否可以在","你的算法只能使用常数的额外空间。","你的算法应该具有线性时间复杂度。","你的算法应该具有线性时间复杂度。你能否仅使用常数空间复杂度来实现？","你的算法的时间复杂度应为o(n)，并且只能使用常数级别的空间。","你的算法的时间复杂度必须优于","你算法的时间复杂度应为","你算法的时间复杂度应该为","你能将算法的时间复杂度降低到","你能想出一个只使用常数空间的解决方案吗？","使用","使用morri","使用二分法。这里需要注意一下排除中位数的逻辑。","使用二分法可以将时间复杂度缩减到o(logn)。","使用双指针法。在右指针right向右遍历的过程中，左指针left在区间和大于s的情况下不断地向右指针靠近，每更新一次区间长度就比较一下是否是最短区间。","使用快慢指针找到链表的中点。中点节点作为根节点，左链表转换成的树的根节点作为左子节点，右链表转换成的树的根节点作为右子节点。这里将慢指针初始设置为head.next是为了方便跟踪其前一个节点pre。","使用栈实现队列的下列操作：","使用牛顿迭代法来解决。(from","使用递归解题也符合要求，本题中递归程序占用的栈空间不算做额外的空间复杂度。","使用队列实现栈的下列操作：","例如,","例如:","例如，","例如，\"ace\"","例如，[0,2,3,1]","例如，二叉树","例如，从根到叶子节点路径","例如，如果我们挑选非叶节点","例如，如果输入长度为7的数组{2,3,1,0,2,5,3}，那么对应的输出是第一个重复的数字2。","例如，数组","例如，给定三角形：","例如，给定二叉树","例如，给定如下二叉树:","例如，考虑到如下布局的地下城，如果骑士遵循最佳路径","例如，输入12，1～12这些整数中包含1","例如，链表1","例子：","依旧是morris遍历法。","依然使用的是滑动窗口的思路，只需要对上题代码作稍加改动即可。","依然是滑动窗口的思路，只不过这次的内部循环是在窗口不符合要求时执行的，窗口直到符合要求后成为候选结果。","俄罗斯套娃信封问题","借助collections类库做二分搜索：","借助桶排序的思想，将正整数放在对应的索引（该正数减去1）中，如果正数超过了数组索引范围，则忽略。最后从头遍历数组，若当前索引位的元素与索引位不对应，则当前索引位加1就是确实的第一个正数。","假设slow和fast在a3相遇，根据以上公式（fast在与slow相遇前走过了k圈），head从a1出发，slow从a3出发，经过a步以后，两点将在a2相遇。","假设字符串s可以由其中一个子串重复多次构成，设这个子串为t，重复次数为n（n","假设所有操作都是有效的","假设按照升序排序的数组在预先未知的某个点上进行了旋转。","允许重复会影响算法的时间复杂度吗？会如何影响，为什么？","元素","先分治，再合并。时间复杂度为o(n","先定义状态，f[i][j]表示进入(i,j)这个格子前所需要的最小健康点数。","入栈","关注一个用户","内存，其中","再考虑状态的初始值，我们发现右下角那个坐标才是初始值，起点f[0][0]反而不知道，于是大致可以知道，这题是从右下角向左上角来填表。右下角格子，如果该格子的值为负数，那么进入这个格子前骑士需要的健康点数是","冷冻期,","出现。当另一个信封的宽度和高度都比这个信封大的时候，这个信封就可以放进另一个信封里，如同俄罗斯套娃一样。","出现的个数。","函数。","函数下进行修改。","函数与","函数可以通过将下标为","函数在该栈中，调用","函数的调用次数是均匀分布的。","函数，复制一个复杂链表。在复杂链表中，每个节点除了有一个","函数？","分别代表了皇后和空位。","分别去掉字符串2s首尾字符，构成字符串2","分割回文串","分割成","分割成一些子串，使每个子串都是回文串。","分子中所有出现超过一次的","分数到小数","分隔时可以重复使用字典中的单词。","分隔链表","划分算法有三步：","则","则不是镜像对称的:","则中位数是","则返回root","创建一条新的推文","初始状态下，所有","删除一个字符","删除链表中的重复元素","判断两个链表是否相交？","利用k排除掉其中一个元素，找出另一个元素","到","到最大的","前","前序","剑指offer","剪梯子","动态规划","动态规划的方法自不必说，这里主要说下公式法。","包含","包含min函数的栈","匹配任意单个字符","匹配零个或多个前面的那一个元素","区域和检索","区间","单词拆分","单词接龙","卖出,","卖出]","卖出股票后，你无法在第二天买入股票","卡塔兰公式为","即","去除","参考以下这颗二叉搜索树：","及","反转从位置","反转链表","取消关注一个用户","另外为了排除死循环，本题中需要选择右中位数。","另外为了防止整型溢出的情况出现，循环终止条件判定代码与二分法一样，需要用（r","另外本题中会出现k值特别大的情况，因此需要做一定优化。当k值大于prices数组的一半长度时，相当于不再对交易次数进行限制，因此可以用122题的方法来解决。","只出现一次的数字","只包含小写字母。","只能使用额外的","只能放在空方格中，而不能放在已经被占用的方格上。","只要是标准的队列操作即可。","只要有","可以先用动态规划发现规律，然后优化成一条表达式。","可以匹配","可以匹配任何单个字符。","可以匹配任意字符串。","可以匹配任意字符串（包括空字符串）。","可以匹配字符串","可以匹配空字符串,","可以被拆分成","可由子字符串","可能为空，且只包含从","可能会有多种最长上升子序列的组合，你只需要输出对应的长度即可。","可能变为","可被视为","右","叶子节点是指没有子节点的节点。","各函数的调用总次数不超过","合并k个排序链表","同样地，如果我们继续交换节点","后","后序","后序遍历的顺序是先遍历左子节点，然后遍历右子节点，最后遍历父节点。","吗?","否则得到node，update(node)，返回node.valu","否则，node","和","和一个包含非空单词列表的字典","和一个字符串","和一个字符模式","和一个字符规律","和一个非空字符串","和为k的子数组","和分母","和节点","因为","因为卖出价格需要大于买入价格。","因为无论你拿走","因为无重复字符的最长子串是","因为用户1已经不再关注用户2.","因为结果可能很大，所以返回答案模","因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。","因此，当","因此，数字总和","围绕的区域，并将这些区域里所有的","在","在121题的基础上稍微修改即可：买入状态可以从买入状态或者卖出状态变迁得来，从买入状态变迁，利润保持不变；从卖出状态变迁，利润为卖出状态的利润sold减去当前的价格。","在121题的基础上进行扩展。定义sold1和hold1，分别代表第一次卖出后和第一次买入后获得的利润，而sold2和hold2分别代表第二次卖出后和第二次买入后获得的利润。sold1与hold1的变迁公式与121题一致。第二次卖出状态可以由第二次卖出状态或者第二次买入状态变迁得来。第二次买入状态可以由第二次买入状态或者第一次卖出状态变迁得来。","在122题的基础上稍作修改即可。在每一次买入的时候除了减去当前价格，还要额外减去手续费。（也可以在卖出的时候减去手续费，但是在代码中会有整数溢出的情况出现)","在153的基础上增加了重复元素的情况。这里需要额外处理中间元素与末尾元素相同的情况。这种情况下无法判断最小元素是在左区间还是右区间，例如：[2,","在java里直接用linkedhashset/linkedhashmap实现双向链表。","在一个","在一个排序的链表中，存在重复的结点，请删除该链表中重复的结点，重复的结点不保留，返回链表头指针。","在一个长度为n的数组里的所有数字都在0到n","在上次打劫完一条街道之后和一圈房屋后，小偷又发现了一个新的可行窃的地区。这个地区只有一个入口，我们称之为“根”。","在扰乱这个字符串的过程中，我们可以挑选任何一个非叶节点，然后交换它的两个子节点。","在有序数组","在未排序的数组中找到第","在此处买入","在此处卖出","在第","在这个情况下,","在这种情况下,","在这里前面的元素就是","地下城游戏","块","块、2","块石头。","块石头，最后一块石头总是会被你的朋友拿走。","块石头，那么你永远不会赢得比赛；","基本思路与最大连续子串和一样。不过要注意的是由于负数之间的乘积为正数，所以需要同时计算最小子串乘积。","填充。","填充它的每个","填充每个节点的下一个右侧节点指针","处理后为","复制带随机指针的链表","复杂链表的复制","天","天)。","天和第","天接连购买股票，之后再将它们卖出。","天的价格。","天的股票价格","天（股票价格","如下图所示,","如下：","如何得到一个数据流中的中位数？如果从数据流中读出奇数个数值，那么中位数就是所有数值排序之后位于中间的数值。如果从数据流中读出偶数个数值，那么中位数就是所有数值排序之后中间两个数的平均值。","如果","如果capcap，需要通过查找minfreq对应的一串node，找到linkedhashset里的第一个node，删掉他，同时在cachemap里也删掉他。","如果freqmap里没有node现在的频率，就给他新建一个linkedhashset，key为当前node的频率，放到freqmap里","如果key不存在，返回","如果不存在这样的转换序列，返回","如果两个直接相连的房子在同一天晚上被打劫，房屋将自动报警。","如果二叉搜索树经常被修改（插入/删除操作）并且你需要频繁地查找第","如果你可以只使用","如果你已经完成了o(n)","如果你最多只允许完成一笔交易（即买入和卖出一支股票），设计一个算法来计算你所能获取的最大利润。","如果前驱节点的右孩子为当前节点，将它的右孩子重新设为空。倒序输出从当前节点的左孩子到该前驱节点这条路径上的所有节点。当前节点更新为当前节点的右孩子。","如果前驱节点的右孩子为当前节点，将它的右孩子重新设为空（恢复树的形状）。。当前节点更新为当前节点的右孩子。","如果前驱节点的右孩子为空，将它的右孩子设置为当前节点。当前节点更新为当前节点的左孩子。","如果前驱节点的右孩子为空，将它的右孩子设置为当前节点。输出当前节点，然后将当前节点更新为当前节点的左孩子。","如果堆中有","如果多次调用这个函数，你将如何优化你的算法？","如果小数部分为循环小数，则将循环的部分括在括号内。","如果当前节点的左孩子不为空，在当前节点的左子树中找到当前节点在中序遍历下的前驱节点。","如果当前节点的左孩子为空，则将其右孩子作为当前节点。","如果当前节点的左孩子为空，则输出当前节点并将其右孩子作为当前节点。","如果所有方块都放满棋子（不为空），游戏也会结束。","如果有任何问题和意见欢迎在issue区提出。","如果游戏存在获胜者（a","如果能够修改节点的数据结构treenode，可以增加一个字段leftcnt，表示左子树的节点个数。设当前节点为root，","如果节点总数不是","如果这一串set空了，并且当前node频率是最小的频率，那么minfreq要+1","如果链表无环，则返回","如果键不存在，请设置或插入值。当缓存达到其容量时，它应该在插入新项目之前，使最不经常使用的项目无效。在此问题中，当存在平局（即两个或更多个键具有相同使用频率）时，最近最少使用的键将被去除。","如果键存在于缓存中，则获取键的值（总是正数），否则返回","子串","子序列","子序列可以通过删去字符串中的某些字符实现，但不能改变剩余字符的相对顺序。空序列为所有字符串的子序列，任何字符串为其自身的子序列。","子数组","字典中不存在重复的单词。","字母异位词指字母相同，但排列不同的字符串。","字符串","字符串中找出","字符串出现的第一个位置","字符串只包含小写英文字母，并且字符串","字符串和一个","字符串，在","它可以表示下面这个高度平衡二叉搜索树：","它可以解码为","它是","定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。","定义一对值","定义三个变量sold,","定义两个变量star和star_s，star代表模式串p中上一个*的位置，star_s代表star在s中所匹配的字符串之后的一个字符的索引。当在p中第一次遇到*时，将对应的star_s设置为i，代表star一开始只匹配0个字符。","定义栈的数据结构，请在该类型中实现一个能够得到栈的最小元素的","定义状态","定义窗口左右边界left（exclusive）和right（inclusive）。遍历right时，设置一个哈希函数来存储当前字符上一次出现过的位置（如果是第一次出现则为null）。窗口左边界left必须在当前字符上次出现位置或之后窗口才可能是有效的，因此需要在每一步遍历时将left更新成当前字符上次出现过的位置，但需要注意的是如果left本身就已经在当前字符上次出现过的位置之后了，那么此时就无需再更新left。","实现","实现一个二叉搜索树迭代器。你将使用二叉搜索树的根节点初始化迭代器。","实现的操作：","对envelopes数组进行排序后，可以转化成一个最长上升子序列问题。本题的难点就在于选择合适的排序策略。","对envelopes数组进行排序时，首先按照高度升序排序。对于高度相同的元素，按照宽度降序排序，这是因为同一个高度的信封最多只能有一个被选中，所选中的信封是能够容纳前一个被选中的信封中最小宽度的信封。按照lis算法从左至右的遍历顺序，这样的排序策略更加易于处理。","对一个空的栈不会调用","对于中序遍历，只需要将上述算法第2a步中的「输出当前节点」移动到2b步即可。","对于数组上的每一个元素做如下操作：若当前元素是正数但与索引位不对应，如果其在数组的索引范围内，那么就将该元素与其对应位置的元素进行交换。如果交换过来的元素还满足上述条件，那么就继续进行上述操作。另外需要注意的是对于重复元素只需要交换一次。","对于给定的","对应的交易状态为:","对数字","对数：","对称的二叉树","寻找两个有序数组的中位数","寻找旋转排序数组中的最小值","寻找重复数","将morris前序遍历法结合思路1","将一个元素放入队列的尾部。","将先行动。","将其展开为：","将其重新排列后变为：","将原链表中的节点值以及next指针深拷贝成一条新的链表，而对原链表节点的random指针仅作浅拷贝，即新链表节点的random指针依然指向原链表中的节点。同时利用哈希表将深拷贝对应的新旧节点存储下来。最后遍历新的链表，将每一个节点的random指针指向哈希表中原random指针指向的节点所对应的节点。","将字符串s首尾拼接，构成字符串2s。那么2s就是由2n个子串t构成。","将数组内的元素值看作是该节点指向的下个节点在数组中的索引值，这样就可以将数组转化为链表进行处理。由于元素值是从1开始，而索引值是从0开始，因此链表的长度为最大元素值加1，也就是说链表中一定存在两个节点有着相同的值，它们指向同一个节点，也即链表中有环的存在。因此本题可以转化为寻找链表中环入口的问题。具体可参考题目环形链表","将给定链表从中间断开分成两个链表cur1与cur2，然后反转cur2，最后将cur1与cur2交叉合并。","将返回二叉搜索树中的下一个最小的数。","小偷一晚能够盗取的最高金额","小的值，你将如何优化","尝试更新mx与id","尝试更新结果","就不可能是该压栈序列的弹出序列。","尾数中有","尾数中没有零。","平衡二叉树","开头。","开始）。","当","当i和j匹配失败时，进行回溯，即重置j为star的下一个字符，star_s增1（代表star又多匹配了一个字符），同时将i设置为star_s。","当位数为3时，在所有位数为2的格雷码前添加一个0并不会破坏两个连续的数值仅有一个位数的差异这条规则，而且其值保持不变，如下：","当前价格。初始时sold为0，hold为负无穷，代表初始时不可能处于卖出状态。最后返回卖出状态的最大利润。","当前节点设置为临时节点dump。","快乐数","思路","思路1","思路1（二分法）","思路1（动态规划）","思路2","思路2（快慢指针）","思路2（贪心算法+二分查找）","思路3","思路依然与连续子数组和为0差不多，只不过这里要求和是k的倍数，也即subarraysum","总利润:","总是合理的，且","总是有效的，1","总是有效的，且","总是用","恢复二叉搜索树","您将获得一个双向链表，除了下一个和前一个指针之外，它还有一个子指针，可能指向单独的双向链表。这些子列表可能有一个或多个自己的子项，依此类推，生成多级数据结构，如下面的示例所示。","我们定义格雷编码序列必须以","我们将","我们希望将这个二叉搜索树转化为双向循环链表。链表中的每个节点都有一个前驱和后继指针。对于双向循环链表，第一个节点的前驱是最后一个节点，最后一个节点的后继是第一个节点。","我们把只包含因子","或","或以下，他会立即死亡。","或者","所以最大利润为","所使用的最少操作数","所有","所有单词具有相同的长度。","所有单词只由小写字母组成。","所有可能的分割方案。","所有字母的最小子串。","所有给定的字符串长度不会超过","所有节点的值都是唯一的。","所有行都有一个有效的皇后，解法增1","所示。","所示，你的函数应该填充它的每个","所谓匹配，是要涵盖","扁平化列表，使所有结点出现在单级双链表中。您将获得列表第一级的头部。","扁平化多级双向链表","打印从1到最大的n位数","打家劫舍","扩展问题：","扰乱字符串","找出井字棋的获胜者","找出只出现一次的那两个元素。","找到以i为中心的回文串的最大半径","找到和最小的","找到字符串中所有字母异位词","找到所有被","找到该树中两个指定节点的最近公共祖先。","找规律：","把数字翻译成字符串","把数组排成最小的数","拆分时可以重复使用字典中的单词。","拿掉最后一块石头的人就是获胜者。你作为先手。","指针指向下一个节点，还有一个","指针指向链表中的任意节点或者","指针设置为","指针都被设置为","指针，以指向其下一个右侧节点，如图","指针，让这个指针指向其下一个右侧节点。如果找不到下一个右侧节点，则将","接下来寻找状态转移方程。从初始值我们可以推测出状态转移是从右下角反向的，可以得到状态转移方程如下：","推文id","推文id6应当在推文id5之前，因为它是在5之后发送的.","提示:","提示：","插入一个字符","搜索","搜索二维矩阵","操作是合法的。","操作的时间复杂度是","操作）。","放在有序数组","数值的整数次方","数字以0123456789101112131415…的格式序列化到一个字符序列中。在这个序列中，第5位（从下标0开始计数）是5，第13位是1，第19位是4，等等。","数字序列中某一位的数字","数字范围按位与","数据流中的中位数","数组中不相同的元素的个数。","数组中元素的范围是","数组中出现次数超过一半的数字","数组中只有一个重复的数字，但它可能不止重复出现一次。","数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。","数组中某些数字是重复的，但不知道有几个数字是重复的。也不知道每个数字重复几次。请找出数组中任意一个重复的数字。","数组中的第k个最大元素","数组中的重复数字","数组仅可以在","数组可修改","数组的流程如下：","数组的长度。","数组的长度不会超过10,000。","数组的长度为","数组的长度即为所求结果。","数组长度","数论","整个","整个字符串。","旋转字符串","无法匹配","无重复字符的最长子串","时间复杂度o(n)，空间复杂度o(logn)","时间复杂度为o(n)的原因：对于二叉树任意两个节点之间的边，在遍历过程中最多经过3次：一次用于找到前驱节点，一次遍历子节点，还有一次将前驱节点的右子节点还原。","时间复杂度为o(n^2)","时间复杂度仍然为o(n)，空间复杂度减少到了o(1)。","时间复杂度内执行两项操作？","时间复杂度小于","时间复杂度的解法,","时间复杂度的解法。","时，bst","时，其格雷编码序列为","时，应当返回:","时，识别","时，长度为","是","是一个大小为","是一个子序列，不是子串。","是一个正整数，它的值小于或等于链表的长度。","是丑数。","是任何给定","是前","是否可以被空格拆分为一个或多个在字典中出现的单词。","是否是","是否是由","是对称的。","是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。","是数组的大小。","是某栈的压栈序列，序列","是树的高度。","是求和为0的子数组这道题基础上的扩展。如果数组前i个数的和sum[i","是该压栈序列对应的一个弹出序列，但","是该条件下的长度最小的连续子数组。","是非空的，且二者不相同。","是非负整数。","更高效的版本：","替换一个字符","替换为","最佳买卖股票时机含冷冻期","最后，reset","最多会对","最多信封的个数为","最大矩形","最小的k个数","最小覆盖子串","最左边的字符移动到最右边。","最终都会被填充为","最长上升子序列","最长不含重复字符的子字符串","最长公共子序列","最长回文子串","最长子串","最长特殊序列","最长的上升子序列是","有","有些房间由恶魔守卫，因此骑士在进入这些房间时会失去健康点数（若房间里的值为负整数，则表示骑士将损失健康点数）；其他房间要么是空的（房间里的值为","有序链表转换二叉搜索树","有效（遵循井字棋规则），网格最初是空的，a","有最大乘积","本书主要记录了一些我在刷leetcode过程中碰到的一些个人认为比较经典题目的思路和题解。","本题中，一个高度平衡二叉树是指一个二叉树每个节点","本题中，一棵高度平衡二叉树定义为：","本题使用了两个哈希表：require用来存储字符串t中所有字符出现的次数，cur用来存储当前窗口内各字符出现的次数。另外定义一个match变量表示cur中出现次数等于require的字符数量。那么显然当match的大小等于require中的所有字符数量时，窗口window是符合要求的。","来查找其中第","来源：力扣（leetcode）","来表示链表尾连接到链表中的位置（索引从","查找和最小的k对数字","栈的压入、弹出序列","树中的节点数小于","树的子结构","格雷编码","格雷编码是一个二进制数字系统，在该系统中，两个连续的数值仅有一个位数的差异。","检索最近的十条推文。每个推文都必须是由此用户关注的人或者是用户自己发出的。推文必须按照时间顺序由最近的开始排序。","次","次幂函数。","次调用。","正则表达式匹配","步骤：","每一种解法包含一个明确的","每个节点保存的状态是以当前节点为根节点的子树所能获得的最大值，具体分为包含当前节点和不包含当前节点这两种情况。","每列的元素从上到下升序排列。","每次转换只能改变一个字母。","每行中的整数从左到右按升序排列。","每行的元素从左到右升序排列。","每行的第一个整数大于前一行的最后一个整数。","求根到叶子节点数字之和","没有交易完成,","注意","注意:","注意你不能在买入股票前卖出股票。","注意你不能在第","注意你可以重复使用字典中的单词。","注意利润不能是","注意数组中可能存在重复的元素。","注意测试用例2.00000,","注意：","注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。","注意：本题与主站","注意：此题对比原题有改动。","注意：答案中不可以包含重复的三元组。","游戏","游戏结束后，棋子无法再进行任何移动。","游戏：桌子上有一堆石头，每次你们轮流拿掉","滑动窗口的通用模板：","满足要求的三元组集合为：","然后是next数组的用法，举例来说，如果模式字符串在最后一位的a上匹配失败，由于next[4]","然后考虑在原有位数为2的格雷码前添加1，可以看到按照原有顺序添加1后第一个值100与添加0后的最后一个值010之间并不连续。但是注意到格雷码反转后其两个连续数值依然仅有一个位数的差异，同时在10前添加1后的110与010是连续的。所以可以将原有位数为2的格雷码反转后在前面添加一个1，然后拼接到之前添加0后的格雷码后面。这样位数为3的格雷码就形成了，同时前1/2个格雷码与位数为2的格雷码相同。","特别地，我们希望可以就地完成转换操作。当转化完成以后，树中节点的左指针需要指向前驱，树中节点的右指针需要指向后继。还需要返回链表中的第一个节点的指针。","状态f(i,","状态变迁公式为dp(i)","状态转移公式：dp[n][i][j]","状态转移方程则为：","玩家轮流将棋子放在空方格","环形链表","现有矩阵","用","用两个栈实现队列","用二分法来解决。","用快慢指针找到循环的入口","用户1关注了用户2.","用户1发送了一条新推文","用户1取消关注了用户2.","用户1的获取推文应当返回一个列表，其中包含一个id为5的推文.","用户1的获取推文应当返回一个列表，其中包含两个推文，id分别为","用户2发送了一个新推文","用栈实现队列","用自底向上的方法遍历整棵树。对于每一个节点，包含该节点的状态值为该节点值加上两个子节点不包含自身的状态值，而不包含该节点的状态值为两个子节点包含自身的状态值之和。","用返回一个整数列表来代替打印","用迭代的方法，可以先遍历父节点，然后遍历右子节点，最后遍历左子节点。然后将遍历结果反转即可。","用队列实现栈","由于(2n","由于cn+1","由于返回类型是整数，小数部分将被舍去。","由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。","百位上出现1的数字共有","百度百科中最近公共祖先的定义为：“对于有根树","的","的「最小覆盖子串」","的一个子序列，而","的一个子树拥有相同的结构和节点值。","的一个扰乱字符串。","的一种可能的表示形式。","的不同非空子序列的个数。","的两个结点","的个数（也被称为汉明重量）。","的中位数是","的二维二进制矩阵，找出只包含","的倍数，即总和为","的值是","的另一个数组（元素分别对应网格的行和列），它按照","的后面，否则进入第3步","的子串是","的子序列。两个字符串的「公共子序列」是这两个字符串所共同拥有的子序列。","的子序列中","的子序列，但","的子数组，并且和为","的子节点，将会产生另一个新的扰乱字符串","的字母异位词。","的字母异位词的子串，返回这些子串的起始索引。","的小写字母。","的小写字母，以及字符","的左右两个子树的高度差的绝对值不超过","的左右两个子树的高度差的绝对值不超过1。","的平方根是","的平方根，其中","的延伸题目。","的扰乱字符串。","的数值更新为","的数字有1、10、11和12，1一共出现了5次。","的数字，每条从根到叶子节点的路径都代表一个数字。","的数称作丑数（ugli","的整数倍，那么请将最后剩余的节点保持原有顺序。","的方案。","的旋转操作就是将","的时候买入，在第","的时候卖出,","的时候卖出，这笔交易所能获得利润","的时间复杂度都是","的最后一个元素，就把","的最大矩形，并返回其面积。","的最大长度为","的最短转换序列的长度。转换需遵循如下规则：","的最近公共祖先是节点","的有序数组","的核苷酸组成，例如：“acgaattccg”。在研究","的格雷编码序列，其长度为","的棋盘上，并且使皇后彼此之间不能相互攻击。","的正则表达式匹配。","的消息通过以下方式进行了编码：","的深度尽可能大（一个节点也可以是它自己的祖先）。”","的祖先且","的空间。","的网格上玩井字棋。","的节点之前。","的节点都在大于或等于","的范围是","的行动顺序（先","的质数列表","的超级丑数。","的过程中，每来一个新数","的连续的子数组的个数。","的通配符匹配。","的那个数，用num替换","的那个数，用num替换；","的链表。请使用一趟扫描完成反转。","的长度。","的长度最小的连续子数组。如果不存在符合条件的连续子数组，返回","的长度都不超过","的长度，\"pwke\"","的额外空间（n","皇后不同的解决方案的数量。","皇后问题存在两个不同的解法。","皇后问题存在如下两个不同的解法。","皇后问题的一种解法。","皇后问题的棋子放置方案，该方案中","皇后问题的解决方案。","皇后问题研究的是如何将","目前只有java语言的实现，后续考虑会加入javascript以及go语言的实现。但是鉴于个人有限的精力和时间，也可能不会实施......","相同的数异或为0:","相连的","矩阵","矩阵中，是否存在一个目标值。该矩阵具有如下特性：","示例","示例:","示例：","种不同结构的二叉搜索树:","种不同结构的二叉搜索树：","种可以从","称作","移除栈顶元素","空间复杂度的解法很容易实现。","章节的编排形式参考了leetcode的题型分类，例如二叉树，字符串以及链表等。题目以middle难度居多，同时含有少量的easy题以及极少量的hard题。题目没有特定的顺序，纯粹按照了自己的做题顺序来编排。最后一章主要是《剑指offer》上的题目，其中有一部分题目是与之前章节重合的。","笔交易。","第一个","第一个玩家","第一行首先计算n中相邻2位的和，由于相邻两位的和最大也只为2（即只占用2个比特位），因此相邻两位的计算结果可以存储在本地（即当前两个比特位中），不会影响其他比特位。","第二个","算法复杂度为o(height","线性表","组合为:","结果不能为","结果尾数中零的数量。","结果输出的顺序并不重要，对于上面的例子，","给你一个字符串","给你一个数组","给你一个链表，每","给你一根长度为n的绳子，请把绳子剪成整数长的m段（m、n都是整数，n>1并且m>1），每段绳子的长度记为k[0],k[1],...,k[m]。请问k[0]xk[1]x...xk[m]可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。","给出两个长度相等的字符串","给定","给定一个","给定一个三角形，找出自顶向下的最小路径和。每一步只能移动到下一行中相邻的结点上。","给定一个二叉搜索树，编写一个函数","给定一个二叉树","给定一个二叉树,","给定一个二叉树和一个目标和，找到所有从根节点到叶子节点路径总和等于给定目标和的路径。","给定一个二叉树和其中的一个结点，请找出中序遍历顺序的下一个结点并且返回。注意，树中的结点不仅包含左右子结点，同时包含指向父结点的指针。","给定一个二叉树，判断它是否是高度平衡的二叉树。","给定一个二叉树，原地将它展开为链表。","给定一个二叉树，它的每个结点都存放一个","给定一个二叉树，返回它的","给定一个二维的矩阵，包含","给定一个仅包含","给定一个代表编码总位数的非负整数","给定一个包含","给定一个包含非负数的数组和一个目标整数","给定一个单链表","给定一个单链表，其中的元素按升序排序，将其转换为高度平衡的二叉搜索树。","给定一个只包含数字的非空字符串，请计算解码方法的总数。","给定一个含有","给定一个字符串","给定一个字符串，请你找出其中不含有重复字符的","给定一个数字，我们按照如下规则把它翻译为字符串：0","给定一个数组，它的第","给定一个整数","给定一个整数数组","给定一个整数数组和一个整数","给定一个整数数组，其中第","给定一个无序的整数数组，找到其中最长上升子序列的长度。","给定一个未排序的整数数组，找出其中没有出现的最小的正整数。","给定一个链表:","给定一个链表和一个特定值","给定一个链表，每个节点包含一个额外增加的随机指针，该指针可以指向链表中的任何节点或空节点。","给定一个链表，返回链表开始入环的第一个节点。","给定一个非空字符串","给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。","给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现了三次。找出那个只出现了一次的元素。","给定一个非空的字符串，判断它是否可以由它的一个子串重复多次构成。给定的字符串只含有小写英文字母，并且长度不超过10000。","给定一个非空的整数数组，返回其中出现频率前","给定一些标记了宽度和高度的信封，宽度和高度以整数对形式","给定三个字符串","给定两个以升序排列的整形数组","给定两个单词","给定两个单词（beginword","给定两个大小为","给定两个字符串","给定两个字符串,","给定两个整数，分别表示分数的分子","给定二叉树","给定二叉树:","给定如下二叉树，以及目标和","给定字符串列表的长度将在","给定字符串列表，你需要从它们中找出最长的特殊序列。最长特殊序列定义如下：该序列为某字符串独有的最长子序列（即不能是其他字符串的子序列）。","给定数组","给定的有序链表：","给定的树","给定编码总位数为","给定范围","给定这个链表：1","给定链表","给定长度为","编写一个函数来查找","编写一个函数来计算确保骑士能够拯救到公主所需的最低初始健康点数。","编写一个函数，来判断你是否可以在给定石头数量的情况下赢得游戏。","编写一个函数，输入是一个无符号整数，返回其二进制表达式中数字位数为","编写一个算法来判断一个数是不是“快乐数”。","编写一个高效的算法来搜索","编写一段程序来查找第","编辑距离","缺失的第一个正数","翻译成","能变成b，那么返回true。","能够达到的最大利润:","自顶向下的最小路径和为","至于next数组的构造方法，方法类似：把原来模式字符串的前缀作为新的模式字符串来匹配原来的模式字符串，匹配方法同上。","节点","节点总数","若","若百位上为1，百位上出现1的数字共有","若百位上大于1,","若这两个字符串没有公共子序列，则返回","范围内元素的总和，包含","获取栈顶元素","获胜。","获胜，他总是先走。","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","表示可匹配零个或多个（'*'）任意字符（'.'）。","表示指向链表中有最小元素的节点。","表示选取的字母)","表示零个或多个，这里","被围绕的区域","被围绕的区间不会存在于边界上，换句话说，任何边界上的","被重复一次。因此可以匹配字符串","要求返回这个链表的深拷贝。","观察例子，发现与右上角的元素同一行的元素都不大于它，而同一列的元素都不小于它","解法","解码方法","解释:","解释：","解释：\"a\"","解释：\"b\"","解释：1","解释：3","解释：6","解释：7","解释：两个字符串没有公共子序列，返回","解释：我们可以按以下顺序执行：","解释：最长公共子序列是","解释：游戏还没有结束。","解释：给定二叉树如图","解释：给定的链表为空（空指针），因此返回","解释：输入的二进制串","解释：链表中有一个环，其尾部连接到第一个节点。","解释：链表中有一个环，其尾部连接到第二个节点。","解释：链表中没有环。","计算pos最靠右的1的位置","计算worddict中最长单词的长度","计算从根到叶子节点生成的所有数字之和。","计算在不触动警报的情况下，小偷一晚能够盗取的最高金额。","计算并返回","计算当前行还可以放置皇后的位置","设dp(i)表示范围为(0,","设置一个数组","设置快慢指针从a1出发。假设slow和fast在a3相遇，根据以上公式（fast在与slow相遇前走过了k圈）。head从a1出发，slow从a3出发，经过a步以后，两点将在a2（环的入口）相遇。","设计一个支持以下两种操作的数据结构：","设计一个简化版的推特(twitter)，可以让用户实现发送推文，关注/取消关注其他用户，能够看见关注人（包括自己）的最近十条推文。你的设计需要支持以下的几个功能：","设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。","设计一个算法来计算你所能获取的最大利润。你最多可以完成","设计一个算法计算出最大利润。在满足以下约束条件下，你可以尽可能地完成更多的交易（多次买卖一支股票）:","设计并实现最不经常使用（lfu）缓存的数据结构。它应该支持以下操作：get","设计推特","该算法的时间复杂度为o(n","该题是对121，","该题的难点在于如何在o(n)的时间复杂度内将各个正数归位。","说明","说明:","说明：","说明：不允许修改给定的链表。","请从字符串中找出一个最长的不包含重复字符的子字符串，计算该最长子字符串的长度。","请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为","请写一个函数，求任意第n位对应的数字。","请在不改变其结构的情况下，恢复这棵树。","请实现","请实现一个函数按照之字形顺序打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右到左的顺序打印，第三行再按照从左到右的顺序打印，其他行以此类推。","请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。例如，字符串\"+100\"、\"5e2\"、\"","请实现一个函数，用来判断一棵二叉树是不是对称的。如果一棵二叉树和它的镜像一样，那么它是对称的。","请尝试","请找出其中最小的元素。","请注意，你的答案必须是","请注意，在某些语言（如","请计算最多能有多少个信封能组成一组“俄罗斯套娃”信封（即可以把一个信封放到另一个信封里面）。","调用","调用总是有效的，也就是说，当调用","起始索引等于","超级丑数","超级丑数是指其所有质因数都是长度为","路径总和","转换成","转换过程中的中间单词必须是字典中的单词。","输入:","输入:num","输入一个数n，意义见题面。（2","输入一个整数","输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历结果。如果是则返回","输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。","输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。","输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。例如，一个链表有6个节点，从头节点开始，它们的值依次是1、2、3、4、5、6。这个链表的倒数第3个节点是值为4的节点。","输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的循环双向链表。要求不能创建任何新的节点，只能调整树中节点指针的指向。","输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如，序列","输入两棵二叉树a和b，判断b是不是a的子结构。(约定空树不是任意一个树的子结构)","输入将是一个字符串列表，输出是最长特殊序列的长度。如果最长特殊序列不存在，返回","输入描述:","输入数字","输入整数数组","输入：","输入：\"aaa\"","输入：\"aba\"","输入：\"abc\"","输入：00000000000000000000000000001011","输入：00000000000000000000000010000000","输入：11111111111111111111111111111101","输入：a","输入：arr","输入：head","输入：matrix","输入：move","输入：n","输入：push","输入：root","输入：text1","输出:","输出其中一个最长公共子序列","输出：\"a\"","输出：\"b\"","输出：\"draw\"","输出：\"pending\"","输出：0","输出：1","输出：3","输出：31","输出：5","输出：6","输出：7","输出：[\"aaaaaccccc\",","输出：[0]","输出：[1,#,2,3,#,4,5,7,#]","输出：[1,2,3,4,8,12,11,10,9,5,6,7]","输出：[1,2,3,6,9,8,7,4,5]","输出：[1,2]","输出：[[1,1],[2,1]]","输出：[[3,null],[3,0],[3,null]]","输出：[[7,null],[13,0],[11,4],[10,2],[1,0]]","输出：[]","输出：[null,null,2.00000,null,2.50000]","输出：[null,null,null,1.50000,null,2.00000]","输出：fals","输出：no","输出：tail","输出：true","输出：由于没有办法再行动，游戏以平局结束。","运行你的函数后，矩阵变为：","返回","返回:","返回其层次遍历结果：","返回它的长度","返回序列中的前","返回扁平化后链表的最后一个节点","返回栈是否为空","返回目前所有元素的中位数。","返回符合要求的最少分割次数。","返回获得利润的最大值。","返回链表","返回队列是否为空。","返回队列首部的元素。","还是","这个map就是为了实现直接put/get数据，不涉及频率更新操作。","这些操作是合法的。","这是一个多阶段优化问题，有广搜，贪心，动规。这题显然贪心不行，于是范围缩小到广搜和动规。本题求最小健康点数，跟路径长度无关，因此广搜不适合。最后只剩下了动规这个方向。","这样两个回文子串。","这样在区间内partition之前的元素一定不大于pivot，而partition之后的元素一定不小于pivot。","这种算法的原理很简单，我们仅仅是不断用(x,f(x))的切线来逼近方程x^2","这笔交易所能获得利润","这道题是","这道题的关键是对要定位的“数”做二分，而不是对数组的索引做二分。要定位的“数”根据题意在","这道题的考点在于代码的鲁棒性，需要考虑到head为null以及链表长度小于k的情况（如果k是无符号整数还需要考虑k等于0的情况）","这里排除中位数的逻辑是如果mid上的值大于right上的值，则最小元素一定处于右区间（不包含mid）。","这里的就是我们要存储的缓存数据的，freq是该数据的出现频率","这里要特别注意~返回任意重复的一个，赋值duplication[0]","进行一次分割就可将","进阶:","进阶：","连续子数组和","递归算法很简单，你可以通过迭代算法完成吗？","通配符匹配","遍历prices数组，定义两个变量sold和hold。sold代表当前处于卖出状态时获得的最大利润，hold代表当前处于买入状态时获得的最大利润。卖出状态可以从卖出状态或者买入状态变迁得来，如果是从卖出状态变迁，则利润保持不变；如果是从买入状态变迁，利润增加当前的价格。买入状态可以从买入状态或者初始状态变迁得来，如果是从买入状态变迁，则利润保持不变，如果是从初始状态变迁，则利润为0","遍历prices数组，设置一个min变量存储到当前为止最小的价格。计算当前价格和min变量的差，并与最大利润进行比较。最大利润初始为0。","遍历。","那么cn+1","都","都不会被填充为","都由一系列缩写为","里面找出：包含","重复两次构成。","重复两次构成。)","重复了一次。","重复以上1、2直到当前节点为空。","重复四次构成。","重复的dna序列","重复的子字符串","重排链表","重新排列为","链接：https://dev.lingkou.xyz/problems/factori","链接：https://leetcod","链表","链表中倒数第k个节点","链表长度。","长度不超过","长度最小的子数组","阶乘后的零","限制：","除了“根”之外，每栋房子有且只有一个“父“房子与之相连。一番侦察之后，聪明的小偷意识到“这个地方的所有房屋的排列类似于一棵二叉树”。","随后，在第","需要一个node结构key,","需要注意的是本题中排除中位数的逻辑是如果一个数的平方大于输入参数，那它一定不是结果值，可以排除。","面试题17.","顺时针打印矩阵","题目描述","题相同：https://leetcod","题解","首先得到node.freq对应的linkedhashset的那一串node，也就是找出和node频率一样的其他node。然后在这一串node里去掉这个node，因为这个node的频率变了，+1了。","首先是部分匹配表（pmt）的含义。pmt表的每一位代表模式字符串从开头到当前位这一段字符串的公共前后缀的最大长度。为了计算方便，将pmt的每一位后移一位（每一位匹配失败后只需要用到前面一位的pmt值），前面填上","首先考虑如何在遍历一维数组的过程中交换两个逆序元素。设置cur指向当前元素，prev指向上一个元素。如果在遍历过程中第一次出现cur元素值小于prev元素值，则prev一定是第一个逆序元素。但是此时cur可能是也可能不是第二个逆序元素，这取决于后续遍历过程中会不会再次出现cur元素值小于prev元素值的情况。","验证","骑士的健康点数没有上限。","骑士的初始健康点数为一个正整数。如果他的健康点数在某一时刻降至","高位","高的元素。","（优化为一维数组）","（例如，一个空的队列不会调用","（股票价格","，","，1","，tail","，且整数","，交换它的两个子节点，将会产生扰乱字符串","，使得","，即计算","，实现一个支持","，找出一个序列中乘积最大的连续子序列（该序列至少包含一个数）。","，找出其中最小的","，找出该数组中满足其和","，求1～n这n个整数的十进制表示中1出现的次数。","；非负整数","？找出所有满足条件且不重复的三元组。"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction\n本书主要记录了一些我在刷leetcode过程中碰到的一些个人认为比较经典题目的思路和题解。\n之前在刷leetcode的过程中，发现很多题目做过就忘掉了，再次碰到类似的甚至是相同的题目是依然感觉无从下手。其实这往往是因为对于题目没有理解，掌握透。因此在之后的刷题过程中，刻意放慢了脚步，每做完一道题，都去主动思考这种算法的时空复杂度是多少，是否还有更优的解法，能否做到举一反三等。\n章节的编排形式参考了leetcode的题型分类，例如二叉树，字符串以及链表等。题目以middle难度居多，同时含有少量的easy题以及极少量的hard题。题目没有特定的顺序，纯粹按照了自己的做题顺序来编排。最后一章主要是《剑指offer》上的题目，其中有一部分题目是与之前章节重合的。\n目前只有Java语言的实现，后续考虑会加入Javascript以及Go语言的实现。但是鉴于个人有限的精力和时间，也可能不会实施......\n如果有任何问题和意见欢迎在Issue区提出。\nAuthor\nPythonYXY\nContent\n\nIntroduction\n二分查找\n287. 寻找重复数\n154. 寻找旋转排序数组中的最小值 II\n300. 最长上升子序列\n69. X的平方根\n354. 俄罗斯套娃信封问题\n153. 寻找旋转排序数组中的最小值\n\n\n线性表\n\n560. 和为K的子数组\n15. 三数之和\n523 连续子数组和\n215. 数组中的第K个最大元素\n209. 长度最小的子数组\n4. 寻找两个有序数组的中位数\n41. 缺失的第一个正数\n\n\n链表\n\n430. 扁平化多级双向链表\n138. 复制带随机指针的链表\n142. 环形链表 II\n460. LFU缓存\n86. 分隔链表\n109. 有序链表转换二叉搜索树\n206. 反转链表\n25. K 个一组翻转链表难度困难\n92. 反转链表 II\n23. 合并K个排序链表\n143. 重排链表\n\n\n二叉树\n145. 二叉树的后序遍历\n307. 区域和检索 - 数组可修改\n173. 二叉搜索树迭代器\n230. 二叉搜索树中第K小的元素\n95. 不同的二叉搜索树 II\n110. 平衡二叉树\n114. 二叉树展开为链表\n99. 恢复二叉搜索树\n113. 路径总和 II\n96. 不同的二叉搜索树\n129. 求根到叶子节点数字之和\n144. 二叉树的前序遍历\n117. 填充每个节点的下一个右侧节点指针 II\n236. 二叉树的最近公共祖先\n\n\n搜索\n240. 搜索二维矩阵 II\n127. 单词接龙\n130. 被围绕的区域\n\n\n字符串\n438. 找到字符串中所有字母异位词\n76. 最小覆盖子串\n44. 通配符匹配\n28. 实现 strStr\n5. 最长回文子串\n1143. 最长公共子序列\n10. 正则表达式匹配\n522. 最长特殊序列 II\n796. 旋转字符串\n459. 重复的子字符串\n72. 编辑距离\n3. 无重复字符的最长子串\n\n\n动态规划\n131. 分割回文串\n97. 交错字符串\n188. 买卖股票的最佳时机 IV\n122. 买卖股票的最佳时机 II\n132. 分割回文串 II\n152. 乘积最大子序列\n87. 扰乱字符串\n714. 买卖股票的最佳时机含手续费\n121. 买卖股票的最佳时机\n85. 最大矩形\n120. 三角形最小路径和\n174. 地下城游戏\n140. 单词拆分 II\n123. 买卖股票的最佳时机 III\n940. 不同的子序列 II\n139. 单词拆分\n309. 最佳买卖股票时机含冷冻期\n91. 解码方法\n115. 不同的子序列\n337. 打家劫舍 III\n\n\n数论\n264. 丑数 II\n347. 前 K 个高频元素\n355. 设计推特\n166. 分数到小数\n373. 查找和最小的K对数字\n202. 快乐数\n172. 阶乘后的零\n313. 超级丑数\n292. Nim 游戏\n\n\n位运算\n\n89. 格雷编码\n201. 数字范围按位与\n52. N皇后 II\n51. N皇后\n1275. 找出井字棋的获胜者\n137. 只出现一次的数字 II\n187. 重复的DNA序列\n136. 只出现一次的数字\n\n\n剑指offer\n\n46. 把数字翻译成字符串\n28. 对称的二叉树\n4.二维数组中的查找\nL191. 位1的个数\n43. 1～n整数中1出现的次数\nL153. 寻找旋转排序数组中的最小值\n29. 顺时针打印矩阵\n45. 把数组排成最小的数\n36. 二叉搜索树与双向链表\n48. 最长不含重复字符的子字符串\n24.反转链表\n35. 复杂链表的复制\n30. 包含min函数的栈\n26. 树的子结构\n32 - II. 从上到下打印二叉树 II\n22. 链表中倒数第k个节点\n49. 丑数\n19. 正则表达式匹配\n39. 数组中出现次数超过一半的数字\n20.表示数值的字符串\n14. 剪梯子\nL154. 寻找旋转排序数组中的最小值 II\n9. 用两个栈实现队列\n44. 数字序列中某一位的数字\n40. 最小的k个数\n3. 数组中的重复数字\nL287. 寻找重复数\n32 - III. 从上到下打印二叉树 III\n31. 栈的压入、弹出序列\n15. 二进制中1的个数\n33. 二叉搜索树的后序遍历序列\n41. 数据流中的中位数\n8.二叉树的下一个节点\n\n\n\n"},"二分查找/287. 寻找重复数.html":{"url":"二分查找/287. 寻找重复数.html","title":"287. 寻找重复数","keywords":"","body":"287. 寻找重复数\n题目描述\n给定一个包含 n + 1 个整数的数组 nums，其数字都在 1 到 n 之间（包括 1 和 n），可知至少存在一个重复的整数。假设只有一个重复的整数，找出这个重复的数。\n\n示例 1:\n\n输入: [1,3,4,2,2]\n输出: 2\n示例 2:\n\n输入: [3,1,3,4,2]\n输出: 3\n说明：\n\n不能更改原数组（假设数组是只读的）。\n只能使用额外的 O(1) 的空间。\n时间复杂度小于 O(n2) 。\n数组中只有一个重复的数字，但它可能不止重复出现一次。\n思路1（二分法）\n这道题的关键是对要定位的“数”做二分，而不是对数组的索引做二分。要定位的“数”根据题意在 1 和 n 之间，每一次二分都可以将搜索区间缩小一半。\n代码1\npublic class Solution {\n\n    public int findDuplicate(int[] nums) {\n        int len = nums.length;\n        int left = 1;\n        int right = len - 1;\n        while (left >> 1;\n            int counter = 0;\n            for (int num : nums) {\n                if (num  mid) {\n                right = mid;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return left;\n    }\n}\n\n思路2（快慢指针）\n将数组内的元素值看作是该节点指向的下个节点在数组中的索引值，这样就可以将数组转化为链表进行处理。由于元素值是从1开始，而索引值是从0开始，因此链表的长度为最大元素值加1，也就是说链表中一定存在两个节点有着相同的值，它们指向同一个节点，也即链表中有环的存在。因此本题可以转化为寻找链表中环入口的问题。具体可参考题目环形链表 II的解法：\n设置快慢指针从A1出发。假设slow和fast在A3相遇，根据以上公式（fast在与slow相遇前走过了k圈）。head从A1出发，slow从A3出发，经过a步以后，两点将在A2（环的入口）相遇。\n代码2\npublic class Solution {\n\n    public int findDuplicate(int[] nums) {\n        int slow = 0, fast = 0;\n\n        while (slow != fast || fast == 0) {\n            slow = nums[slow];\n            fast = nums[nums[fast]];\n        }\n\n        int res = 0;\n        while (res != slow) {\n            res = nums[res];\n            slow = nums[slow];\n        }\n\n        return res;\n    }\n}\n\n"},"二分查找/154. 寻找旋转排序数组中的最小值 II.html":{"url":"二分查找/154. 寻找旋转排序数组中的最小值 II.html","title":"154. 寻找旋转排序数组中的最小值 II","keywords":"","body":"154. 寻找旋转排序数组中的最小值 II\n题目描述\n假设按照升序排序的数组在预先未知的某个点上进行了旋转。\n\n( 例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] )。\n\n请找出其中最小的元素。\n\n注意数组中可能存在重复的元素。\n\n示例 1：\n\n输入: [1,3,5]\n输出: 1\n示例 2：\n\n输入: [2,2,2,0,1]\n输出: 0\n说明：\n\n这道题是 寻找旋转排序数组中的最小值 的延伸题目。\n允许重复会影响算法的时间复杂度吗？会如何影响，为什么？\n思路\n在153的基础上增加了重复元素的情况。这里需要额外处理中间元素与末尾元素相同的情况。这种情况下无法判断最小元素是在左区间还是右区间，例如：[2, 0, 1, 2, 2, 2, 2]与[2, 2, 2, 2, 0, 1, 2]，因此只能通过减少right来缩小区间进行进一步的搜索。该算法在最坏情况下的时间复杂度为O(n)。\n代码\nclass Solution {\n    public int findMin(int[] nums) {\n        int left = 0, right = nums.length - 1;\n\n        while (left >> 1;\n            if (nums[mid] == nums[right]) {\n                right--;\n            } else if (nums[mid] > nums[right]) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n\n        return nums[left];\n    }\n}\n\n"},"二分查找/300. 最长上升子序列.html":{"url":"二分查找/300. 最长上升子序列.html","title":"300. 最长上升子序列","keywords":"","body":"300. 最长上升子序列\n题目描述\n给定一个无序的整数数组，找到其中最长上升子序列的长度。\n\n示例:\n\n输入: [10,9,2,5,3,7,101,18]\n输出: 4 \n解释: 最长的上升子序列是 [2,3,7,101]，它的长度是 4。\n说明:\n\n可能会有多种最长上升子序列的组合，你只需要输出对应的长度即可。\n你算法的时间复杂度应该为 O(n2) 。\n进阶: 你能将算法的时间复杂度降低到 O(n log n) 吗?\n思路1（动态规划）\n定义状态 dp[i] 为以 nums 中第i个索引的元素为结尾的最长上升子序列的长度（注意必须是以该元素为结尾）\n状态转移方程则为：\ndp[i] = max{1 + dp[j] for j 时间复杂度为O(n^2)\n代码1\nclass Solution {\n    public int lengthOfLIS(int[] nums) {\n\n        if (nums.length  nums[j]) {\n                    dp[i] = Math.max(dp[i], dp[j] + 1);\n                }\n            }\n            res = Math.max(res, dp[i]);\n        }\n        return res;\n    }\n}\n\n思路2（贪心算法+二分查找）\n设置一个数组 tail ，tail 中的每一个前缀都是一个最“紧致”的上升子序列。所谓最“紧致”的上升子序列是指在所有相同长度的上升子序列中该子序列的首尾元素差最小（这是贪心的关键）。构造 tail 数组的流程如下：\n1、使tail数组初始为空\n2、在遍历数组 nums 的过程中，每来一个新数 num，如果这个数严格大于有序数组 tail 的最后一个元素，就把 num 放在有序数组 tail 的后面，否则进入第3步\n3、在有序数组 tail 中查找第 1 个严格大于 num 的那个数，用num替换；\n4、最后构造出来的 tail 数组的长度即为所求结果。\n该算法的时间复杂度为O(n log n) \n代码2\n借助Collections类库做二分搜索：\nclass Solution {\n    public int lengthOfLIS(int[] nums) {\n        ArrayList tail = new ArrayList<>();\n\n        for (int i = 0; i  tail.get(tail.size() - 1)) {\n                tail.add(nums[i]);\n            } else {\n                int index = Collections.binarySearch(tail, nums[i]);\n                if (index \n更高效的版本：\nclass Solution {\n    public int lengthOfLIS(int[] nums) {\n        if (nums.length  tail[end]) {\n                tail[++end] = nums[i];\n            } else {\n                // 在有序数组 tail 中查找第 1 个严格大于 num 的那个数，用num替换\n                int left = 0;\n                int right = end;\n\n                while (left >> 1;\n\n                    if (tail[mid] \n"},"二分查找/69. X的平方根.html":{"url":"二分查找/69. X的平方根.html","title":"69. X的平方根","keywords":"","body":"69. X的平方根\n题目描述\n实现 int sqrt(int x) 函数。\n\n计算并返回 x 的平方根，其中 x 是非负整数。\n\n由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。\n\n示例 1:\n\n输入: 4\n输出: 2\n示例 2:\n\n输入: 8\n输出: 2\n说明: 8 的平方根是 2.82842..., \n     由于返回类型是整数，小数部分将被舍去。\n思路1\n用二分法来解决。\n需要注意的是本题中排除中位数的逻辑是如果一个数的平方大于输入参数，那它一定不是结果值，可以排除。\n另外为了排除死循环，本题中需要选择右中位数。\n代码1\nclass Solution {\n    public int mySqrt(int x) {\n        int left = 0;\n        int right = x;\n\n        while (left >> 1;\n\n            if (mid > x / mid) {\n                right = mid - 1;\n            } else {\n                left = mid;\n            }\n        }\n\n        return left;\n    }\n}\n\n思路2\n使用牛顿迭代法来解决。(From matrix67)\n下面这种方法可以很有效地求出根号a的近似值：首先随便猜一个近似值x，然后不断令x等于x和a/x的平均数，迭代个六七次后x的值就已经相当精确了。\n 这种算法的原理很简单，我们仅仅是不断用(x,f(x))的切线来逼近方程x^2-a=0的根。根号a实际上就是x^2-a=0的一个正实根，这个函数的导数是2x。也就是说，函数上任一点(x,f(x))处的切线斜率是2x。那么，x-f(x)/(2x)就是一个比x更接近的近似值。代入f(x)=x^2-a得到x-(x^2-a)/(2x)，也就是(x+a/x)/2。\n 另外为了防止整型溢出的情况出现，循环终止条件判定代码与二分法一样，需要用（r > x / r）而不是（r * r > x)。同时对于迭代方程也要做一下优化，即使用不带符号的右移操作替代除以2。\n代码2\nclass Solution {\n    public int mySqrt(int x) {\n        if (x  x / r) {\n            r = (r + x / r) >>> 1;\n        }\n\n        return r;\n    }\n}\n\n"},"二分查找/354. 俄罗斯套娃信封问题.html":{"url":"二分查找/354. 俄罗斯套娃信封问题.html","title":"354. 俄罗斯套娃信封问题","keywords":"","body":"354. 俄罗斯套娃信封问题\n题目描述\n给定一些标记了宽度和高度的信封，宽度和高度以整数对形式 (w, h) 出现。当另一个信封的宽度和高度都比这个信封大的时候，这个信封就可以放进另一个信封里，如同俄罗斯套娃一样。\n\n请计算最多能有多少个信封能组成一组“俄罗斯套娃”信封（即可以把一个信封放到另一个信封里面）。\n\n说明:\n不允许旋转信封。\n\n示例:\n\n输入: envelopes = [[5,4],[6,4],[6,7],[2,3]]\n输出: 3 \n解释: 最多信封的个数为 3, 组合为: [2,3] => [5,4] => [6,7]。\n思路\n对envelopes数组进行排序后，可以转化成一个最长上升子序列问题。本题的难点就在于选择合适的排序策略。\n对envelopes数组进行排序时，首先按照高度升序排序。对于高度相同的元素，按照宽度降序排序，这是因为同一个高度的信封最多只能有一个被选中，所选中的信封是能够容纳前一个被选中的信封中最小宽度的信封。按照LIS算法从左至右的遍历顺序，这样的排序策略更加易于处理。\n代码\nclass Solution {\n    public int maxEnvelopes(int[][] envelopes) {\n\n        if (envelopes.length  (a[0] == b[0] ? b[1] - a[1] : a[0] - b[0]));\n\n        int[][] tail = new int[envelopes.length][2];\n        tail[0] = envelopes[0];\n        int end = 0;\n\n        for (int i = 1; i  tail[end][1]) {\n                tail[++end] = envelopes[i];\n            } else {\n                int left = 0;\n                int right = end;\n\n                while (left >> 1;\n\n                    if (tail[mid][1] \n"},"二分查找/153. 寻找旋转排序数组中的最小值.html":{"url":"二分查找/153. 寻找旋转排序数组中的最小值.html","title":"153. 寻找旋转排序数组中的最小值","keywords":"","body":"153. 寻找旋转排序数组中的最小值\n题目描述\n假设按照升序排序的数组在预先未知的某个点上进行了旋转。\n\n( 例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] )。\n\n请找出其中最小的元素。\n\n你可以假设数组中不存在重复元素。\n\n示例 1:\n\n输入: [3,4,5,1,2]\n输出: 1\n示例 2:\n\n输入: [4,5,6,7,0,1,2]\n输出: 0\n思路\n使用二分法可以将时间复杂度缩减到O(logn)。\n这里排除中位数的逻辑是如果mid上的值大于right上的值，则最小元素一定处于右区间（不包含mid）。\n代码\nclass Solution {\n    public int findMin(int[] nums) {\n        int left = 0, right = nums.length - 1;\n\n        while (left >> 1;\n            if (nums[mid] > nums[right]) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n\n        return nums[left];\n    }\n}\n\n"},"线性表/560. 和为K的子数组.html":{"url":"线性表/560. 和为K的子数组.html","title":"560. 和为K的子数组","keywords":"","body":"560. 和为K的子数组\n给定一个整数数组和一个整数 k，你需要找到该数组中和为 k 的连续的子数组的个数。\n\n示例 1 :\n\n输入:nums = [1,1,1], k = 2\n输出: 2 , [1,1] 与 [1,1] 为两种不同的情况。\n说明 :\n\n数组的长度为 [1, 20,000]。\n数组中元素的范围是 [-1000, 1000] ，且整数 k 的范围是 [-1e7, 1e7]。\n思路\n是求和为0的子数组这道题基础上的扩展。如果数组前i个数的和sum[i - 1]比前j个数的和sum[j - 1]小k（i \n代码\nclass Solution {\n    public int subarraySum(int[] nums, int k) {\n        Map map = new HashMap<>(){{ map.put(0, 1); }};\n\n        int sum = 0, res = 0;\n\n        for (int i = 0; i \n"},"线性表/15. 三数之和.html":{"url":"线性表/15. 三数之和.html","title":"15. 三数之和","keywords":"","body":"15. 三数之和\n给定一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？找出所有满足条件且不重复的三元组。\n\n注意：答案中不可以包含重复的三元组。\n\n例如, 给定数组 nums = [-1, 0, 1, 2, -1, -4]，\n\n满足要求的三元组集合为：\n[\n  [-1, 0, 1],\n  [-1, -1, 2]\n]\n思路\n主要思路就是将3Sum转化成2Sum：首先将数组按照升序排序，然后固定第三个数去搜索前两个数。这里需要注意的是对于重复结果的处理。\n代码\nclass Solution {\n    public List> threeSum(int[] nums) {\n        Arrays.sort(nums);\n\n        List> res = new ArrayList<>();\n\n        for (int k = 2; k  0  && nums[i - 1] == nums[i])) i++;\n                else if (sum > target || (j (Arrays.asList(nums[i++], nums[j--], nums[k])));\n            }d\n        }\n\n        return res;\n    }\n}\n\n"},"线性表/523 连续子数组和.html":{"url":"线性表/523 连续子数组和.html","title":"523 连续子数组和","keywords":"","body":"523 连续子数组和\n给定一个包含非负数的数组和一个目标整数 k，编写一个函数来判断该数组是否含有连续的子数组，其大小至少为 2，总和为 k 的倍数，即总和为 n*k，其中 n 也是一个整数。\n\n示例 1:\n\n输入: [23,2,4,6,7], k = 6\n输出: True\n解释: [2,4] 是一个大小为 2 的子数组，并且和为 6。\n示例 2:\n\n输入: [23,2,6,4,7], k = 6\n输出: True\n解释: [23,2,6,4,7]是大小为 5 的子数组，并且和为 42。\n说明:\n\n数组的长度不会超过10,000。\n你可以认为所有数字总和在 32 位有符号整数范围内。\n思路\n思路依然与连续子数组和为0差不多，只不过这里要求和是k的倍数，也即subarraySum % k == 0。可以考虑将计算前缀和改成计算前缀和余k的结果。如果长度为i的前缀和余k等于长度为j的前缀和余k（i \n代码\nclass Solution {\n    public boolean checkSubarraySum(int[] nums, int k) {\n        Map map = new HashMap<>();\n        int sum = 0;\n        map.put(0, -1);\n        for (int i = 0; i  map.get(sum) + 1) {\n                    return true;\n                }\n            } else {\n                map.put(sum, i);\n            }\n        }\n        return false;\n    }\n}\n\n"},"线性表/215. 数组中的第K个最大元素.html":{"url":"线性表/215. 数组中的第K个最大元素.html","title":"215. 数组中的第K个最大元素","keywords":"","body":"215. 数组中的第K个最大元素\n在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。\n\n示例 1:\n\n输入: [3,2,1,5,6,4] 和 k = 2\n输出: 5\n示例 2:\n\n输入: [3,2,3,1,2,4,5,5,6] 和 k = 4\n输出: 4\n说明:\n\n你可以假设 k 总是有效的，且 1 ≤ k ≤ 数组的长度。\n思路\n主要还是借助快速排序的思想。这里重点说下快排中划分部分的算法。\n划分算法有三步：\n1、在区间范围内随机选择一个pivot，并与区间末尾的元素进行交换（这里的随机选择的方式可以尽量避免算法退化到O(n^2)。至于为什么选择末尾元素是因为这里的遍历方式是从前往后遍历的，同样的，若选择从后往前遍历就需要选择区间首部元素来进行交换了）。\n2、设置一个partition索引，初始指向区间首部。在遍历区间的过程中如果发现当前索引位元素小于pivot，就将其与partition索引上的元素进行交换，同时partition增1。（将pivot放在末尾可以避免partition出界）\n3、最后需要将pivot放在partition索引上。\n这样在区间内partition之前的元素一定不大于pivot，而partition之后的元素一定不小于pivot。\n代码\nimport java.util.Random;\nclass Solution {\n    public int findKthLargest(int[] nums, int k) {\n        return partition(nums, 0, nums.length - 1, nums.length - k);\n    }\n\n    public int partition(int[] nums, int start, int end, int target_index) {\n        if (start == end) return nums[start];\n\n        int pivot_index = start + new Random().nextInt(end - start + 1);\n        swap(nums, pivot_index, end);\n\n        int partition_index = start;\n        for (int i = start; i \n"},"线性表/209. 长度最小的子数组.html":{"url":"线性表/209. 长度最小的子数组.html","title":"209. 长度最小的子数组","keywords":"","body":"209. 长度最小的子数组\n给定一个含有 n 个正整数的数组和一个正整数 s ，找出该数组中满足其和 ≥ s 的长度最小的连续子数组。如果不存在符合条件的连续子数组，返回 0。\n\n示例: \n\n输入: s = 7, nums = [2,3,1,2,4,3]\n输出: 2\n解释: 子数组 [4,3] 是该条件下的长度最小的连续子数组。\n进阶:\n\n如果你已经完成了O(n) 时间复杂度的解法, 请尝试 O(n log n) 时间复杂度的解法。\n思路1\n使用双指针法。在右指针right向右遍历的过程中，左指针left在区间和大于s的情况下不断地向右指针靠近，每更新一次区间长度就比较一下是否是最短区间。\n代码1\nclass Solution {\n    public int minSubArrayLen(int s, int[] nums) {\n        int len = Integer.MAX_VALUE, left = 0, right = 0, sum = 0;\n\n        while (right = s && left \n思路2\n使用二分法。这里需要注意一下排除中位数的逻辑。\n代码2\nclass Solution {\n    public int minSubArrayLen(int s, int[] nums) {\n        if (nums.length == 0) return 0;\n\n        int[] sum = new int[nums.length];\n        sum[0] = nums[0];\n\n        for (int i = 1; i >> 1;\n\n                if (sum[mid] - sum[i] + nums[i] = s) {\n                    len = Math.min(len, left - i + 1);\n                }\n            }\n        }\n\n        if (len == Integer.MAX_VALUE) return 0;\n        return len;\n    }\n}\n\n"},"线性表/4. 寻找两个有序数组的中位数.html":{"url":"线性表/4. 寻找两个有序数组的中位数.html","title":"4. 寻找两个有序数组的中位数","keywords":"","body":"4. 寻找两个有序数组的中位数\n给定两个大小为 m 和 n 的有序数组 nums1 和 nums2。\n\n请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为 O(log(m + n))。\n\n你可以假设 nums1 和 nums2 不会同时为空。\n\n示例 1:\n\nnums1 = [1, 3]\nnums2 = [2]\n\n则中位数是 2.0\n示例 2:\n\nnums1 = [1, 2]\nnums2 = [3, 4]\n\n则中位数是 (2 + 3)/2 = 2.5\n思路\nhttps://leetcode-cn.com/problems/median-of-two-sorted-arrays/solution/xun-zhao-liang-ge-you-xu-shu-zu-de-zhong-wei-shu-b/\n代码\nclass Solution {\n    public double findMedianSortedArrays(int[] A, int[] B) {\n        int m = A.length;\n        int n = B.length;\n        if (m > n) { // to ensure m A[i]){\n                iMin = i + 1; // i is too small\n            }\n            else if (i > iMin && A[i-1] > B[j]) {\n                iMax = i - 1; // i is too big\n            }\n            else { // i is perfect\n                int maxLeft = 0;\n                if (i == 0) { maxLeft = B[j-1]; }\n                else if (j == 0) { maxLeft = A[i-1]; }\n                else { maxLeft = Math.max(A[i-1], B[j-1]); }\n                if ( (m + n) % 2 == 1 ) { return maxLeft; }\n\n                int minRight = 0;\n                if (i == m) { minRight = B[j]; }\n                else if (j == n) { minRight = A[i]; }\n                else { minRight = Math.min(B[j], A[i]); }\n\n                return (maxLeft + minRight) / 2.0;\n            }\n        }\n        return 0.0;\n    }\n}\n\n"},"线性表/41. 缺失的第一个正数.html":{"url":"线性表/41. 缺失的第一个正数.html","title":"41. 缺失的第一个正数","keywords":"","body":"41. 缺失的第一个正数\n给定一个未排序的整数数组，找出其中没有出现的最小的正整数。\n\n示例 1:\n\n输入: [1,2,0]\n输出: 3\n示例 2:\n\n输入: [3,4,-1,1]\n输出: 2\n示例 3:\n\n输入: [7,8,9,11,12]\n输出: 1\n说明:\n\n你的算法的时间复杂度应为O(n)，并且只能使用常数级别的空间。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/first-missing-positive\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n思路\n借助桶排序的思想，将正整数放在对应的索引（该正数减去1）中，如果正数超过了数组索引范围，则忽略。最后从头遍历数组，若当前索引位的元素与索引位不对应，则当前索引位加1就是确实的第一个正数。\n该题的难点在于如何在O(n)的时间复杂度内将各个正数归位。\n对于数组上的每一个元素做如下操作：若当前元素是正数但与索引位不对应，如果其在数组的索引范围内，那么就将该元素与其对应位置的元素进行交换。如果交换过来的元素还满足上述条件，那么就继续进行上述操作。另外需要注意的是对于重复元素只需要交换一次。\n代码\nclass Solution {\n    public int firstMissingPositive(int[] nums) {\n        for (int i = 0; i  0 && nums[i] - 1 \n"},"链表/430. 扁平化多级双向链表.html":{"url":"链表/430. 扁平化多级双向链表.html","title":"430. 扁平化多级双向链表","keywords":"","body":"430. 扁平化多级双向链表\n您将获得一个双向链表，除了下一个和前一个指针之外，它还有一个子指针，可能指向单独的双向链表。这些子列表可能有一个或多个自己的子项，依此类推，生成多级数据结构，如下面的示例所示。\n\n扁平化列表，使所有结点出现在单级双链表中。您将获得列表第一级的头部。\n\n\n\n示例:\n\n输入:\n 1---2---3---4---5---6--NULL\n         |\n         7---8---9---10--NULL\n             |\n             11--12--NULL\n\n输出:\n1-2-3-7-8-11-12-9-10-4-5-6-NULL\n代码\n/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node prev;\n    public Node next;\n    public Node child;\n\n    public Node() {}\n\n    public Node(int _val,Node _prev,Node _next,Node _child) {\n        val = _val;\n        prev = _prev;\n        next = _next;\n        child = _child;\n    }\n};\n*/\nclass Solution {\n    public Node flatten(Node head) {\n        if (head == null) return head;\n        helper(head);\n        return head;\n    }\n\n    public Node helper(Node node) { // 返回扁平化后链表的最后一个节点\n        Node cur = node;\n        Node prev = null;\n\n        while (cur != null) {\n            if (cur.child != null) {\n                Node childLast = helper(cur.child);\n                childLast.next = cur.next;\n                if (cur.next != null) cur.next.prev = childLast;\n                cur.next = cur.child;\n                cur.child.prev = cur;\n                cur.child = null;\n                prev = childLast; \n                cur = childLast.next;\n            } else {\n                prev = cur;\n                cur = cur.next;\n            }\n        }\n\n        return prev;\n    }\n}\n\n"},"链表/138. 复制带随机指针的链表.html":{"url":"链表/138. 复制带随机指针的链表.html","title":"138. 复制带随机指针的链表","keywords":"","body":"138. 复制带随机指针的链表\n\n给定一个链表，每个节点包含一个额外增加的随机指针，该指针可以指向链表中的任何节点或空节点。\n\n要求返回这个链表的深拷贝。 \n\n\n输入：\n{\"$id\":\"1\",\"next\":{\"$id\":\"2\",\"next\":null,\"random\":{\"$ref\":\"2\"},\"val\":2},\"random\":{\"$ref\":\"2\"},\"val\":1}\n\n解释：\n节点 1 的值是 1，它的下一个指针和随机指针都指向节点 2 。\n节点 2 的值是 2，它的下一个指针指向 null，随机指针指向它自己。\n\n\n提示：\n\n你必须返回给定头的拷贝作为对克隆列表的引用。\n思路1\n将原链表中的节点值以及next指针深拷贝成一条新的链表，而对原链表节点的random指针仅作浅拷贝，即新链表节点的random指针依然指向原链表中的节点。同时利用哈希表将深拷贝对应的新旧节点存储下来。最后遍历新的链表，将每一个节点的random指针指向哈希表中原random指针指向的节点所对应的节点。\n事件复杂度为O(n)，空间复杂度为O(n)。\n代码1\n/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node next;\n    public Node random;\n\n    public Node() {}\n\n    public Node(int _val,Node _next,Node _random) {\n        val = _val;\n        next = _next;\n        random = _random;\n    }\n};\n*/\nclass Solution {\n    public Node copyRandomList(Node head) {\n        if (head == null) return null;\n        Map map = new HashMap<>();\n\n        Node ret = new Node(-1);\n        Node retCur = ret;\n        Node cur = head;\n\n        while (cur != null) {\n            retCur.next = new Node();\n            retCur = retCur.next;\n            retCur.val = cur.val;\n            retCur.random = cur.random;\n            map.put(cur, retCur);\n\n            cur = cur.next;\n        }\n\n        retCur = ret.next;\n        while (retCur != null) {\n            retCur.random = map.get(retCur.random);\n            retCur = retCur.next;\n        }\n\n        return ret.next;\n    }\n}\n\n思路2\n不使用哈希表，而是把复制后的新节点插入到旧节点之后。这样对于任何一个旧节点，它的next指针就是指向其对应的新节点。之后通过一次遍历修改所有新节点的random指针。最后再经过一次遍历将新旧链表拆分开来。\n时间复杂度仍然为O(n)，空间复杂度减少到了O(1)。\n代码2\n/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node next;\n    public Node random;\n\n    public Node() {}\n\n    public Node(int _val,Node _next,Node _random) {\n        val = _val;\n        next = _next;\n        random = _random;\n    }\n};\n*/\nclass Solution {\n    public Node copyRandomList(Node head) {\n        if (head == null) return null;\n\n        Node cur = head;\n        while (cur != null) {\n            Node node = new Node(cur.val);\n            node.next = cur.next;\n            node.random = cur.random;\n            cur.next = node;\n            cur = cur.next.next;\n        }\n\n        cur = head;\n        Node ret = head.next;\n        Node retCur = ret;\n\n        while (true) {\n            if (cur.random != null) retCur.random = cur.random.next;\n            cur = cur.next.next;\n            if (cur == null) break;\n            retCur = retCur.next.next;\n        }\n\n        cur = head;\n        retCur = head.next;\n\n        while (true) {\n            cur.next = retCur.next;\n            cur = cur.next;\n            if (cur == null) break;\n            retCur.next = cur.next;\n            retCur = retCur.next;\n        }\n\n        return ret;\n    }\n}\n\n"},"链表/142. 环形链表 II.html":{"url":"链表/142. 环形链表 II.html","title":"142. 环形链表 II","keywords":"","body":"142. 环形链表 II\n给定一个链表，返回链表开始入环的第一个节点。 如果链表无环，则返回 null。\n\n为了表示给定链表中的环，我们使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。 如果 pos 是 -1，则在该链表中没有环。\n\n说明：不允许修改给定的链表。\n\n\n\n示例 1：\n\n输入：head = [3,2,0,-4], pos = 1\n输出：tail connects to node index 1\n解释：链表中有一个环，其尾部连接到第二个节点。\n\n示例 2：\n\n输入：head = [1,2], pos = 0\n输出：tail connects to node index 0\n解释：链表中有一个环，其尾部连接到第一个节点。\n\n示例 3：\n\n输入：head = [1], pos = -1\n输出：no cycle\n解释：链表中没有环。\n\n\n进阶：\n你是否可以不用额外空间解决此题？\n思路\n\n假设slow和fast在A3相遇，根据以上公式（fast在与slow相遇前走过了k圈），head从A1出发，slow从A3出发，经过a步以后，两点将在A2相遇。\n扩展问题：\n判断两个链表是否相交？\n1、两个链表皆无环：判断两个末尾结点是否相同。\n2、两个链表皆有环：找到其中一个链表环的开始结点，判断这个结点是否在另一个链表中。\n3、其中一个链表有环：不存在这种情况。\n代码\n/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode detectCycle(ListNode head) {\n        ListNode slow = head, fast = head;\n        while (fast != null && fast.next != null) {\n            slow = slow.next;\n            fast = fast.next.next;\n            if (slow == fast) {\n                while (slow != head) {\n                    slow = slow.next;\n                    head = head.next;\n                }\n\n                return slow;\n            };\n        }\n        return null;\n    }\n}\n\n"},"链表/460. LFU缓存.html":{"url":"链表/460. LFU缓存.html","title":"460. LFU缓存","keywords":"","body":"460. LFU缓存\n设计并实现最不经常使用（LFU）缓存的数据结构。它应该支持以下操作：get 和 put。\n\nget(key) - 如果键存在于缓存中，则获取键的值（总是正数），否则返回 -1。\nput(key, value) - 如果键不存在，请设置或插入值。当缓存达到其容量时，它应该在插入新项目之前，使最不经常使用的项目无效。在此问题中，当存在平局（即两个或更多个键具有相同使用频率）时，最近最少使用的键将被去除。\n\n进阶：\n你是否可以在 O(1) 时间复杂度内执行两项操作？\n\n示例：\n\nLFUCache cache = new LFUCache( 2 /* capacity (缓存容量) */ );\n\ncache.put(1, 1);\ncache.put(2, 2);\ncache.get(1);       // 返回 1\ncache.put(3, 3);    // 去除 key 2\ncache.get(2);       // 返回 -1 (未找到key 2)\ncache.get(3);       // 返回 3\ncache.put(4, 4);    // 去除 key 1\ncache.get(1);       // 返回 -1 (未找到 key 1)\ncache.get(3);       // 返回 3\ncache.get(4);       // 返回 4\n思路\n在java里直接用LinkedHashSet/LinkedHashMap实现双向链表。\n需要一个node结构key, value, freq 这里的就是我们要存储的缓存数据的，freq是该数据的出现频率\n两个hashmap：\nCacheMap: hashmap 这个map就是为了实现直接put/get数据，不涉及频率更新操作。\nfreqMap : hashmap> key是出现频率，value是对应出现同样频率的所有Node结点（频率一样使用最近最少使用LRU原则）。这个表不涉及put/get数据，涉及update，负责处理频率相关操作。\n实现的操作：\nget(key) :\n如果key不存在，返回-1，\n否则得到node，update(node)，返回node.value\nput(key,value):\n如果capcap，需要通过查找minFreq对应的一串Node，找到LinkedHashset里的第一个node，删掉他，同时在cacheMap里也删掉他。\n最后，reset minFreq=1\nupdate(node):\n首先得到node.freq对应的linkedhashset的那一串node，也就是找出和node频率一样的其他node。然后在这一串node里去掉这个node，因为这个node的频率变了，+1了。\n如果这一串set空了，并且当前node频率是最小的频率，那么minFreq要+1\nnode.Freq+1\n如果freqMap里没有node现在的频率，就给他新建一个LinkedHashSet，key为当前node的频率，放到freqMap里\n作者：kao-la-7\n链接：https://leetcode-cn.com/problems/lfu-cache/solution/java-shuang-hashmap-linkedhashset-o1shi-xian-by-ka/\n代码\nclass LFUCache {\n    class Node {\n        int key;\n        int value;\n        int freq;\n\n        public Node(int key, int value, int freq) {\n            this.key = key;\n            this.value = value;\n            this.freq = freq;\n        }\n    }\n\n    Map cacheMap;\n    Map> freqMap;\n    int cap;\n    int minFreq;\n\n    public LFUCache(int capacity) {\n        minFreq = 0;\n        cap = capacity;\n        cacheMap = new HashMap<>();\n        freqMap = new HashMap<>();\n    }\n\n    public int get(int key) {\n        if (!cacheMap.containsKey(key)) {\n            return -1;\n        }\n\n        return update(cacheMap.get(key)).value; \n    }\n\n    public void put(int key, int value) {\n        if (cap ());\n            }\n\n            freqMap.get(1).add(newNode);\n            cacheMap.put(key, newNode);\n\n            if (cacheMap.size() > cap) {\n                int removeKey = freqMap.get(minFreq).iterator().next().key;\n                freqMap.get(minFreq).remove(freqMap.get(minFreq).iterator().next());\n                cacheMap.remove(removeKey);\n            }\n\n            minFreq = 1;\n        }\n    }\n\n    public Node update(Node node) {\n        freqMap.get(node.freq).remove(node);\n        if (freqMap.get(node.freq).isEmpty() && node.freq == minFreq) {\n            freqMap.put(node.freq, new LinkedHashSet<>());\n            minFreq += 1;\n        }\n\n        node.freq += 1;\n        if (!freqMap.containsKey(node.freq)) {\n            freqMap.put(node.freq, new LinkedHashSet<>());\n        }\n\n        freqMap.get(node.freq).add(node);\n        return node;\n    }\n\n}\n\n/**\n * Your LFUCache object will be instantiated and called as such:\n * LFUCache obj = new LFUCache(capacity);\n * int param_1 = obj.get(key);\n * obj.put(key,value);\n */\n\n"},"链表/86. 分隔链表.html":{"url":"链表/86. 分隔链表.html","title":"86. 分隔链表","keywords":"","body":"86. 分隔链表\n给定一个链表和一个特定值 x，对链表进行分隔，使得所有小于 x 的节点都在大于或等于 x 的节点之前。\n\n你应当保留两个分区中每个节点的初始相对位置。\n\n示例:\n\n输入: head = 1->4->3->2->5->2, x = 3\n输出: 1->2->2->4->3->5\n代码\n\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode partition(ListNode head, int x) {\n        ListNode before = new ListNode(0);\n        ListNode after = new ListNode(0);\n        ListNode beforeHead = before;\n        ListNode afterHead = after;\n        while (head != null) {\n            if (head.val \n"},"链表/109. 有序链表转换二叉搜索树.html":{"url":"链表/109. 有序链表转换二叉搜索树.html","title":"109. 有序链表转换二叉搜索树","keywords":"","body":"109. 有序链表转换二叉搜索树\n给定一个单链表，其中的元素按升序排序，将其转换为高度平衡的二叉搜索树。\n\n本题中，一个高度平衡二叉树是指一个二叉树每个节点 的左右两个子树的高度差的绝对值不超过 1。\n\n示例:\n\n给定的有序链表： [-10, -3, 0, 5, 9],\n\n一个可能的答案是：[0, -3, 9, -10, null, 5], 它可以表示下面这个高度平衡二叉搜索树：\n\n      0\n     / \\\n   -3   9\n   /   /\n -10  5\n思路\n使用快慢指针找到链表的中点。中点节点作为根节点，左链表转换成的树的根节点作为左子节点，右链表转换成的树的根节点作为右子节点。这里将慢指针初始设置为head.next是为了方便跟踪其前一个节点pre。\n代码\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode sortedListToBST(ListNode head) {\n        if (head == null) return null;\n\n        if (head.next == null) return new TreeNode(head.val);\n\n        ListNode pre = head, slow = head.next, fast = head.next.next;\n\n        while (fast != null && fast.next != null) {\n            pre = pre.next;\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n\n        pre.next = null;\n\n        TreeNode root = new TreeNode(slow.val);\n\n        root.left = sortedListToBST(head);\n        root.right = sortedListToBST(slow.next);\n\n        return root;\n    }\n}\n\n"},"链表/206. 反转链表.html":{"url":"链表/206. 反转链表.html","title":"206. 反转链表","keywords":"","body":"206. 反转链表\n代码（递归方法）\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        if (head == null || head.next == null) return head;\n\n        ListNode temp = head;\n        head = reverseList(head.next);\n        temp.next.next = temp;\n        temp.next = null;\n\n        return head;\n    }\n}\n\n代码（迭代方法）\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        ListNode cur = head, next = null, pre = null;\n\n        while (cur != null) {\n            next = cur.next;\n            cur.next = pre;\n            pre = cur;\n            cur = next;\n        }\n\n        return pre;\n    }\n}\n\n"},"链表/25. K 个一组翻转链表难度困难.html":{"url":"链表/25. K 个一组翻转链表难度困难.html","title":"25. K 个一组翻转链表难度困难","keywords":"","body":"25. K 个一组翻转链表难度困难\n给你一个链表，每 k 个节点一组进行翻转，请你返回翻转后的链表。\n\nk 是一个正整数，它的值小于或等于链表的长度。\n\n如果节点总数不是 k 的整数倍，那么请将最后剩余的节点保持原有顺序。\n\n示例 :\n\n给定这个链表：1->2->3->4->5\n\n当 k = 2 时，应当返回: 2->1->4->3->5\n\n当 k = 3 时，应当返回: 3->2->1->4->5\n\n说明 :\n\n你的算法只能使用常数的额外空间。\n你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。\n代码\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode reverseKGroup(ListNode head, int k) {\n        if (head == null) return null;\n        // 区间 [a, b) 包含 k 个待反转元素\n        ListNode a, b;\n        a = b = head;\n        for (int i = 0; i \n"},"链表/92. 反转链表 II.html":{"url":"链表/92. 反转链表 II.html","title":"92. 反转链表 II","keywords":"","body":"92. 反转链表 II\n反转从位置 m 到 n 的链表。请使用一趟扫描完成反转。\n\n说明:\n1 ≤ m ≤ n ≤ 链表长度。\n\n示例:\n\n输入: 1->2->3->4->5->NULL, m = 2, n = 4\n输出: 1->4->3->2->5->NULL\n代码\n\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode reverseBetween(ListNode head, int m, int n) {\n        ListNode pre = new ListNode(-1);\n        pre.next = head;\n\n        for (int i = 0; i \n"},"链表/23. 合并K个排序链表.html":{"url":"链表/23. 合并K个排序链表.html","title":"23. 合并K个排序链表","keywords":"","body":"23. 合并K个排序链表\n思路\n先分治，再合并。时间复杂度为O(N * logk)。\n代码\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\n        if (lists.length == 0) return null;\n        return helper(lists, 0, lists.length - 1);\n    }\n\n    public ListNode helper(ListNode[] lists, int start, int end) {\n        if (start == end) return lists[start];\n\n        int mid = (start + end) >>> 1;\n        return merge2Lists(helper(lists, start, mid), helper(lists, mid + 1, end));\n    }\n\n    public ListNode merge2Lists(ListNode list1, ListNode list2) {\n        ListNode ret = new ListNode(-1);\n        ListNode cur = ret;\n\n        while (list1 != null && list2 != null) {\n            if (list1.val \n"},"链表/143. 重排链表.html":{"url":"链表/143. 重排链表.html","title":"143. 重排链表","keywords":"","body":"143. 重排链表\n给定一个单链表 L：L0→L1→…→Ln-1→Ln ，\n将其重新排列后变为： L0→Ln→L1→Ln-1→L2→Ln-2→…\n\n你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。\n\n示例 1:\n\n给定链表 1->2->3->4, 重新排列为 1->4->2->3.\n示例 2:\n\n给定链表 1->2->3->4->5, 重新排列为 1->5->2->4->3.\n思路\n将给定链表从中间断开分成两个链表cur1与cur2，然后反转cur2，最后将cur1与cur2交叉合并。\n代码\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public void reorderList(ListNode head) {\n        if (head == null) return;\n        int len = 0;\n        ListNode cur1 = head;\n        while (cur1 != null) {\n            cur1 = cur1.next;\n            len++;\n        }\n\n        cur1 = head;\n        int mid = (len + 1) >> 1;\n        while (mid-- > 1) {\n            cur1 = cur1.next;\n        }\n\n        ListNode cur2 = cur1.next;\n        cur1.next = null;\n\n        cur1 = head;\n        cur2 = reverseList(cur2);\n\n        while (cur2 != null) {\n            ListNode temp = cur2;\n            cur2 = cur2.next;\n\n            temp.next = cur1.next;\n            cur1.next = temp;\n            cur1 = cur1.next.next;\n        }\n\n    }\n\n    private ListNode reverseList(ListNode head) {\n        if (head == null || head.next == null) return head;\n        ListNode temp = head; \n        head = reverseList(head.next); \n        temp.next.next = temp; \n        temp.next = null; \n        return head; \n    }\n}\n\n"},"二叉树/145. 二叉树的后序遍历.html":{"url":"二叉树/145. 二叉树的后序遍历.html","title":"145. 二叉树的后序遍历","keywords":"","body":"145. 二叉树的后序遍历\n给定一个二叉树，返回它的 后序 遍历。\n\n示例:\n\n输入: [1,null,2,3]  \n   1\n    \\\n     2\n    /\n   3 \n\n输出: [3,2,1]\n进阶: 递归算法很简单，你可以通过迭代算法完成吗？\n思路1\n后序遍历的顺序是先遍历左子节点，然后遍历右子节点，最后遍历父节点。\n用迭代的方法，可以先遍历父节点，然后遍历右子节点，最后遍历左子节点。然后将遍历结果反转即可。\n代码1\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public List postorderTraversal(TreeNode root) {\n        if (root == null) return new LinkedList<>();\n\n        TreeNode cur, prev;\n        Stack stack = new Stack<>();\n        stack.push(root);\n        LinkedList res = new LinkedList<>();\n\n        while (!stack.empty()) {\n            cur = stack.pop();\n            res.addFirst(cur.val);\n\n            if (cur.left != null) {\n                stack.push(cur.left);\n            }\n\n            if (cur.right != null) {\n                stack.push(cur.right);\n            }\n        }\n\n        return res;\n    }\n}\n\n思路2\n依旧是Morris遍历法。\n当前节点设置为临时节点dump。\n\n如果当前节点的左孩子为空，则将其右孩子作为当前节点。\n\n如果当前节点的左孩子不为空，在当前节点的左子树中找到当前节点在中序遍历下的前驱节点。\na) 如果前驱节点的右孩子为空，将它的右孩子设置为当前节点。当前节点更新为当前节点的左孩子。\nb) 如果前驱节点的右孩子为当前节点，将它的右孩子重新设为空。倒序输出从当前节点的左孩子到该前驱节点这条路径上的所有节点。当前节点更新为当前节点的右孩子。\n\n重复以上1、2直到当前节点为空。\n代码2\n/**\n* Definition for a binary tree node.\n* public class TreeNode {\n*     int val;\n*     TreeNode left;\n*     TreeNode right;\n*     TreeNode(int x) { val = x; }\n* }\n*/\nclass Solution {\n public List postorderTraversal(TreeNode root) {\n     TreeNode dummy = new TreeNode(-1);\n     dummy.left = root;\n\n     List res = new ArrayList<>();\n\n     TreeNode cur = dummy, prev;\n\n     while (cur != null) {\n         if (cur.left == null) {\n             cur = cur.right;\n         } else {\n             prev = cur.left;\n             while (prev.right != null && prev.right != cur) {\n                 prev = prev.right;\n             }\n\n             if (prev.right == null) {\n                 prev.right = cur;\n                 cur = cur.left;\n             } else {\n                 prev.right = null;\n                 res.addAll(helper(cur.left, prev));\n                 cur = cur.right;\n             }\n         }\n     }\n\n     return res;\n }\n\n public LinkedList helper(TreeNode cur, TreeNode prev) {\n     LinkedList ret = new LinkedList<>();\n\n     while (cur != prev) {\n         ret.addFirst(cur.val);\n         cur = cur.right;\n     }\n\n     ret.addFirst(prev.val);\n     return ret;\n }\n}\n\n\n\n思路3\n将Morris前序遍历法结合思路1\n代码3\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public List postorderTraversal(TreeNode root) {\n        if (root == null) return new LinkedList<>();\n        TreeNode cur = root, prev;\n        LinkedList res = new LinkedList<>();\n        while (cur != null) {\n            if (cur.right == null) {\n                res.addFirst(cur.val);\n                cur = cur.left;\n            } else {\n                prev = cur.right;\n\n                while (prev.left != null && prev.left != cur) {\n                    prev = prev.left;\n                }\n\n                if (prev.left == null) {\n                    prev.left = cur;\n                    res.addFirst(cur.val);\n                    cur = cur.right;\n                } else {\n                    prev.left = null;\n                    cur = cur.left;\n                }\n            }\n        }\n\n        return res;\n    }\n}\n\n"},"二叉树/307. 区域和检索 - 数组可修改.html":{"url":"二叉树/307. 区域和检索 - 数组可修改.html","title":"307. 区域和检索 - 数组可修改","keywords":"","body":"307. 区域和检索 - 数组可修改\n给定一个整数数组  nums，求出数组从索引 i 到 j  (i ≤ j) 范围内元素的总和，包含 i,  j 两点。\n\nupdate(i, val) 函数可以通过将下标为 i 的数值更新为 val，从而对数列进行修改。\n\n示例:\n\nGiven nums = [1, 3, 5]\n\nsumRange(0, 2) -> 9\nupdate(1, 2)\nsumRange(0, 2) -> 8\n说明:\n\n数组仅可以在 update 函数下进行修改。\n你可以假设 update 函数与 sumRange 函数的调用次数是均匀分布的。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/range-sum-query-mutable\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码（线段树）\n\nclass NumArray {\n    private SegmentTree root;\n    class SegmentTree {\n        public int begin;\n        public int end;\n        public int sum;\n        public SegmentTree left;\n        public SegmentTree right;\n        public SegmentTree(int begin, int end, int sum) {\n            this.begin = begin;\n            this.end = end;\n            this.sum = sum;\n        }\n        public SegmentTree(int begin, int end) {\n            this.begin = begin;\n            this.end = end;\n            this.sum = 0;\n        }\n    }\n    public SegmentTree buildTree(int[] nums, int l, int r) {\n        if (l > r) return null;\n        if (l == r) return new SegmentTree(l, r, nums[l]);\n        int mid = (l + r) >>> 1;\n        SegmentTree root = new SegmentTree(l, r);\n        root.left = buildTree(nums, l, mid);\n        root.right = buildTree(nums, mid + 1, r);\n        root.sum = root.left.sum + root.right.sum;\n        return root;\n    }\n    public int sumRangeHelper(SegmentTree root, int i, int j) {\n        // System.out.println(i + \", \" + j + \"; \" + root.begin + \", \" + root.end);\n        if (i == root.begin && j == root.end) {\n            return root.sum;\n        }\n        int mid = (root.begin + root.end) >>> 1;\n        if (j  mid) {\n            return sumRangeHelper(root.right, i, j);\n        } else {\n            return sumRangeHelper(root.left, i, mid) + sumRangeHelper(root.right, mid + 1, j);\n        }\n    }\n    public void updateHelper(SegmentTree root, int i, int val) {\n        if (root.begin == root.end && root.begin == i) {\n            root.sum = val;\n            return; \n        }\n        int mid = (root.begin + root.end) >>> 1;\n        if (i \n"},"二叉树/173. 二叉搜索树迭代器.html":{"url":"二叉树/173. 二叉搜索树迭代器.html","title":"173. 二叉搜索树迭代器","keywords":"","body":"173. 二叉搜索树迭代器\n实现一个二叉搜索树迭代器。你将使用二叉搜索树的根节点初始化迭代器。\n\n调用 next() 将返回二叉搜索树中的下一个最小的数。\n\n\n\n示例：\n\n\n\nBSTIterator iterator = new BSTIterator(root);\niterator.next();    // 返回 3\niterator.next();    // 返回 7\niterator.hasNext(); // 返回 true\niterator.next();    // 返回 9\niterator.hasNext(); // 返回 true\niterator.next();    // 返回 15\niterator.hasNext(); // 返回 true\niterator.next();    // 返回 20\niterator.hasNext(); // 返回 false\n\n\n提示：\n\nnext() 和 hasNext() 操作的时间复杂度是 O(1)，并使用 O(h) 内存，其中 h 是树的高度。\n你可以假设 next() 调用总是有效的，也就是说，当调用 next() 时，BST 中至少存在一个下一个最小的数。\n思路\n代码\n// Binary Search Tree Iterator\npublic class BSTIterator {\n    public BSTIterator(TreeNode root) {\n        stack = new Stack<>();\n        while (root != null) {\n            stack.push(root);\n            root = root.left;\n        }\n    }\n\n    /** @return whether we have a next smallest number */\n    public boolean hasNext() {\n        return !stack.isEmpty();\n    }\n\n    /** @return the next smallest number */\n    public int next() {\n        final TreeNode node = stack.pop();\n        if (node.right != null) {\n            TreeNode p = node.right;\n            while (p != null) {\n                stack.push(p);\n                p = p.left;\n            }\n\n        }\n        return node.val;\n    }\n    private Stack stack;\n}\n\n"},"二叉树/230. 二叉搜索树中第K小的元素.html":{"url":"二叉树/230. 二叉搜索树中第K小的元素.html","title":"230. 二叉搜索树中第K小的元素","keywords":"","body":"230. 二叉搜索树中第K小的元素\n给定一个二叉搜索树，编写一个函数 kthSmallest 来查找其中第 k 个最小的元素。\n\n说明：\n你可以假设 k 总是有效的，1 ≤ k ≤ 二叉搜索树元素个数。\n\n示例 1:\n\n输入: root = [3,1,4,null,2], k = 1\n   3\n  / \\\n 1   4\n  \\\n   2\n输出: 1\n示例 2:\n\n输入: root = [5,3,6,2,4,null,null,1], k = 3\n       5\n      / \\\n     3   6\n    / \\\n   2   4\n  /\n 1\n输出: 3\n进阶：\n如果二叉搜索树经常被修改（插入/删除操作）并且你需要频繁地查找第 k 小的值，你将如何优化 kthSmallest 函数？\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n思路\n如果能够修改节点的数据结构TreeNode，可以增加一个字段leftCnt，表示左子树的节点个数。设当前节点为root，\n\n若 k == root.leftCnt+1, 则返回root\n若 k > node.leftCnt, 则 k -= root.leftCnt+1, root=root.right\n否则，node = node.left\n\n算法复杂度为O(height of BST)\n代码\n// Kth Smallest Element in a BST\n// Time Complexity: O(k), Space Complexity: O(h)\npublic class Solution {\n    public int kthSmallest(TreeNode root, int k) {\n        Stack s = new Stack<>();\n        TreeNode p = root;\n\n        while (!s.empty() || p != null) {\n            if (p != null) {\n                s.push(p);\n                p = p.left;\n            } else {\n                p = s.pop();\n                --k;\n                if (k == 0) {\n                    return p.val;\n                }\n                p = p.right;\n            }\n        }\n        return -1;\n    }\n}\n\n"},"二叉树/95. 不同的二叉搜索树 II.html":{"url":"二叉树/95. 不同的二叉搜索树 II.html","title":"95. 不同的二叉搜索树 II","keywords":"","body":"95. 不同的二叉搜索树 II\n给定一个整数 n，生成所有由 1 ... n 为节点所组成的二叉搜索树。\n\n示例:\n\n输入: 3\n输出:\n[\n  [1,null,3,2],\n  [3,2,null,1],\n  [3,1,null,null,2],\n  [2,1,3],\n  [1,null,2,null,3]\n]\n解释:\n以上的输出对应以下 5 种不同结构的二叉搜索树：\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/unique-binary-search-trees-ii\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\n\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public List generateTrees(int n) {\n        if (n ();\n        return generateTrees(1, n);\n    }\n    public List generateTrees(int start, int end) {\n        if (end  nullList = new LinkedList<>();\n            nullList.add(null);\n            return nullList;\n        }\n        List ret = new LinkedList<>();\n        for (int i = start; i  temp1 = generateTrees(start, i - 1);\n            List temp2 = generateTrees(i + 1, end);\n            for (TreeNode l: temp1) {\n                for (TreeNode r: temp2) {\n                    TreeNode root = new TreeNode(i);\n                    root.left = l;\n                    root.right = r;\n                    ret.add(root);\n                }\n            }\n        }\n        return ret;\n    }\n}\n\n"},"二叉树/110. 平衡二叉树.html":{"url":"二叉树/110. 平衡二叉树.html","title":"110. 平衡二叉树","keywords":"","body":"110. 平衡二叉树\n\n给定一个二叉树，判断它是否是高度平衡的二叉树。\n\n本题中，一棵高度平衡二叉树定义为：\n\n一个二叉树每个节点 的左右两个子树的高度差的绝对值不超过1。\n\n示例 1:\n\n给定二叉树 [3,9,20,null,null,15,7]\n\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n返回 true 。\n\n示例 2:\n\n给定二叉树 [1,2,2,3,3,null,null,4,4]\n\n       1\n      / \\\n     2   2\n    / \\\n   3   3\n  / \\\n 4   4\n返回 false 。\n代码\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public boolean isBalanced(TreeNode root) {\n        return computeTreeHeight(root) != -1;\n    }\n\n    public int computeTreeHeight(TreeNode node) {\n        if (node == null) return 0;\n\n        int left = computeTreeHeight(node.left);\n        int right = computeTreeHeight(node.right);\n\n        if (left == -1 || right == -1 || Math.abs(right - left) > 1) return -1;\n        return Math.max(left, right) + 1;\n    }\n}\n\n"},"二叉树/114. 二叉树展开为链表.html":{"url":"二叉树/114. 二叉树展开为链表.html","title":"114. 二叉树展开为链表","keywords":"","body":"114. 二叉树展开为链表\n给定一个二叉树，原地将它展开为链表。\n\n例如，给定二叉树\n\n    1\n   / \\\n  2   5\n / \\   \\\n3   4   6\n将其展开为：\n\n1\n \\\n  2\n   \\\n    3\n     \\\n      4\n       \\\n        5\n         \\\n          6\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public void flatten(TreeNode root) {\n        if (root == null) return;\n        helper(root, null);\n    }\n\n    public TreeNode helper(TreeNode node, TreeNode tail) {\n        if (node == null) return tail;\n        node.right = helper(node.left, helper(node.right, tail));\n        node.left = null;\n        return node;\n    }\n}\n\n"},"二叉树/99. 恢复二叉搜索树.html":{"url":"二叉树/99. 恢复二叉搜索树.html","title":"99. 恢复二叉搜索树","keywords":"","body":"99. 恢复二叉搜索树\n二叉搜索树中的两个节点被错误地交换。\n\n请在不改变其结构的情况下，恢复这棵树。\n\n示例 1:\n\n输入: [1,3,null,null,2]\n\n   1\n  /\n 3\n  \\\n   2\n\n输出: [3,1,null,null,2]\n\n   3\n  /\n 1\n  \\\n   2\n示例 2:\n\n输入: [3,1,4,null,null,2]\n\n  3\n / \\\n1   4\n   /\n  2\n\n输出: [2,1,4,null,null,3]\n\n  2\n / \\\n1   4\n   /\n  3\n进阶:\n\n使用 O(n) 空间复杂度的解法很容易实现。\n你能想出一个只使用常数空间的解决方案吗？\n思路\n首先考虑如何在遍历一维数组的过程中交换两个逆序元素。设置cur指向当前元素，prev指向上一个元素。如果在遍历过程中第一次出现cur元素值小于prev元素值，则prev一定是第一个逆序元素。但是此时cur可能是也可能不是第二个逆序元素，这取决于后续遍历过程中会不会再次出现cur元素值小于prev元素值的情况。\n代码1（递归遍历，空间复杂度O(logn)）\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    TreeNode node1, node2, prev;\n\n    public void recoverTree(TreeNode root) {\n        inorderTraversal(root);\n        int temp = node1.val;\n        node1.val = node2.val;\n        node2.val = temp;\n    }\n\n    public void inorderTraversal(TreeNode root) {\n        if (root == null) return;\n        inorderTraversal(root.left);\n\n        if (prev != null && root.val \n代码2（Morris遍历法，空间复杂度O(1)）\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    TreeNode curPrev, node1, node2;\n\n    public void recoverTree(TreeNode root) {\n        if (root == null) return;\n\n        TreeNode cur = root, prev;\n        while (cur != null) {\n            if (cur.left == null) {\n\n                if (curPrev != null && cur.val \n"},"二叉树/113. 路径总和 II.html":{"url":"二叉树/113. 路径总和 II.html","title":"113. 路径总和 II","keywords":"","body":"113. 路径总和 II\n给定一个二叉树和一个目标和，找到所有从根节点到叶子节点路径总和等于给定目标和的路径。\n\n说明: 叶子节点是指没有子节点的节点。\n\n示例:\n给定如下二叉树，以及目标和 sum = 22，\n\n              5\n             / \\\n            4   8\n           /   / \\\n          11  13  4\n         /  \\    / \\\n        7    2  5   1\n返回:\n\n[\n   [5,4,11,2],\n   [5,8,4,5]\n]\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/path-sum-ii\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\n// Path Sum II\n// 时间复杂度O(n)，空间复杂度O(logn)\npublic class Solution {\n    public List> pathSum(TreeNode root, int sum) {\n        List> result = new ArrayList<>();\n        ArrayList  cur = new ArrayList<>(); // 中间结果\n        pathSum(root, sum, cur, result);\n        return result;\n    }\n    private static void pathSum(TreeNode root, int gap, ArrayList cur, List> result) {\n        if (root == null) return;\n\n        cur.add(root.val);\n\n        if (root.left == null && root.right == null) { // leaf\n            if (gap == root.val)\n                result.add(new ArrayList<>(cur));\n        }\n        pathSum(root.left, gap - root.val, cur, result);\n        pathSum(root.right, gap - root.val, cur, result);\n\n        cur.remove(cur.size() - 1);\n    }\n}\n\n"},"二叉树/96. 不同的二叉搜索树.html":{"url":"二叉树/96. 不同的二叉搜索树.html","title":"96. 不同的二叉搜索树","keywords":"","body":"96. 不同的二叉搜索树\n给定一个整数 n，求以 1 ... n 为节点组成的二叉搜索树有多少种？\n\n示例:\n\n输入: 3\n输出: 5\n解释:\n给定 n = 3, 一共有 5 种不同结构的二叉搜索树:\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/unique-binary-search-trees\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n思路\n动态规划的方法自不必说，这里主要说下公式法。\n卡塔兰公式为 Cn = C(n, 2n) / (n + 1)。由于直接求阶乘会导致溢出，所以考虑将其转换为迭代公式。\n由于Cn+1 = C(n + 1, 2n + 2) / (n + 2)， 那么Cn+1 / Cn = (4n + 2) / (n + 2)。\n"},"二叉树/129. 求根到叶子节点数字之和.html":{"url":"二叉树/129. 求根到叶子节点数字之和.html","title":"129. 求根到叶子节点数字之和","keywords":"","body":"129. 求根到叶子节点数字之和\n给定一个二叉树，它的每个结点都存放一个 0-9 的数字，每条从根到叶子节点的路径都代表一个数字。\n\n例如，从根到叶子节点路径 1->2->3 代表数字 123。\n\n计算从根到叶子节点生成的所有数字之和。\n\n说明: 叶子节点是指没有子节点的节点。\n\n示例 1:\n\n输入: [1,2,3]\n    1\n   / \\\n  2   3\n输出: 25\n解释:\n从根到叶子节点路径 1->2 代表数字 12.\n从根到叶子节点路径 1->3 代表数字 13.\n因此，数字总和 = 12 + 13 = 25.\n示例 2:\n\n输入: [4,9,0,5,1]\n    4\n   / \\\n  9   0\n / \\\n5   1\n输出: 1026\n解释:\n从根到叶子节点路径 4->9->5 代表数字 495.\n从根到叶子节点路径 4->9->1 代表数字 491.\n从根到叶子节点路径 4->0 代表数字 40.\n因此，数字总和 = 495 + 491 + 40 = 1026.\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/sum-root-to-leaf-numbers\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\n\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public int sumNumbers(TreeNode root) {\n        return sumNumbersHelper(root, 0);\n    }\n    public int sumNumbersHelper(TreeNode root, int sum) {\n        if (root == null) return 0;\n        if (root.left == null && root.right == null) return sum * 10 + root.val;\n        return sumNumbersHelper(root.left, sum * 10 + root.val) + sumNumbersHelper(root.right, sum * 10 + root.val);\n    }\n}\n\n"},"二叉树/144. 二叉树的前序遍历.html":{"url":"二叉树/144. 二叉树的前序遍历.html","title":"144. 二叉树的前序遍历","keywords":"","body":"144. 二叉树的前序遍历\n给定一个二叉树，返回它的 前序 遍历。\n\n 示例:\n\n输入: [1,null,2,3]  \n   1\n    \\\n     2\n    /\n   3 \n\n输出: [1,2,3]\n进阶: 递归算法很简单，你可以通过迭代算法完成吗？\n思路\n使用Morris Traversal的方法前序遍历二叉树。\nMorris方法可以做到：\n1、时间复杂度为O(n)，空间复杂度为O(1)\n2、不破坏二叉树的形状\n步骤：\n\n如果当前节点的左孩子为空，则输出当前节点并将其右孩子作为当前节点。\n\n如果当前节点的左孩子不为空，在当前节点的左子树中找到当前节点在中序遍历下的前驱节点。\na) 如果前驱节点的右孩子为空，将它的右孩子设置为当前节点。输出当前节点，然后将当前节点更新为当前节点的左孩子。\nb) 如果前驱节点的右孩子为当前节点，将它的右孩子重新设为空（恢复树的形状）。。当前节点更新为当前节点的右孩子。\n\n重复以上1、2直到当前节点为空。\n\n\n时间复杂度为O(n)的原因：对于二叉树任意两个节点之间的边，在遍历过程中最多经过3次：一次用于找到前驱节点，一次遍历子节点，还有一次将前驱节点的右子节点还原。\n对于中序遍历，只需要将上述算法第2a步中的「输出当前节点」移动到2b步即可。\n代码\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public List preorderTraversal(TreeNode root) {\n\n        TreeNode cur = root, prev;\n        List res = new ArrayList<>();\n\n        while (cur != null) {\n            if (cur.left == null) {\n                res.add(cur.val);\n                cur = cur.right;    \n            } else {\n                prev = cur.left;\n                while (prev.right != null && prev.right != cur) {\n                    prev = prev.right;\n                }\n\n                if (prev.right == null) {\n                    prev.right = cur;\n                    res.add(cur.val);\n                    cur = cur.left;\n                } else {\n                    prev.right = null;\n                    // res.add(cur.val);\n                    cur = cur.right;\n                }\n            }\n        }\n        return res;\n    }\n}\n\n"},"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html":{"url":"二叉树/117. 填充每个节点的下一个右侧节点指针 II.html","title":"117. 填充每个节点的下一个右侧节点指针 II","keywords":"","body":"117. 填充每个节点的下一个右侧节点指针 II\n给定一个二叉树\n\nstruct Node {\n  int val;\n  Node *left;\n  Node *right;\n  Node *next;\n}\n填充它的每个 next 指针，让这个指针指向其下一个右侧节点。如果找不到下一个右侧节点，则将 next 指针设置为 NULL。\n\n初始状态下，所有 next 指针都被设置为 NULL。\n\n\n\n进阶：\n\n你只能使用常量级额外空间。\n使用递归解题也符合要求，本题中递归程序占用的栈空间不算做额外的空间复杂度。\n\n\n示例：\n\n\n\n输入：root = [1,2,3,4,5,null,7]\n输出：[1,#,2,3,#,4,5,7,#]\n解释：给定二叉树如图 A 所示，你的函数应该填充它的每个 next 指针，以指向其下一个右侧节点，如图 B 所示。\n\n\n提示：\n\n树中的节点数小于 6000\n-100 代码\n/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node left;\n    public Node right;\n    public Node next;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, Node _left, Node _right, Node _next) {\n        val = _val;\n        left = _left;\n        right = _right;\n        next = _next;\n    }\n};\n*/\nclass Solution {\n    public Node connect(Node root) {\n        Node cur = root;\n\n        while (cur != null) {\n            Node dummy = new Node(-1);\n            Node tail = dummy;\n\n            while (cur != null) {\n                if (cur.left != null) {\n                    tail.next = cur.left;\n                    tail = tail.next;\n                }\n\n                if (cur.right != null) {\n                    tail.next = cur.right;\n                    tail = tail.next;\n                }\n\n                cur = cur.next;\n            }\n\n            cur = dummy.next;\n        }\n\n        return root;\n    }\n}\n\n"},"二叉树/236. 二叉树的最近公共祖先.html":{"url":"二叉树/236. 二叉树的最近公共祖先.html","title":"236. 二叉树的最近公共祖先","keywords":"","body":"236. 二叉树的最近公共祖先\n给定一个二叉树, 找到该树中两个指定节点的最近公共祖先。\n\n百度百科中最近公共祖先的定义为：“对于有根树 T 的两个结点 p、q，最近公共祖先表示为一个结点 x，满足 x 是 p、q 的祖先且 x 的深度尽可能大（一个节点也可以是它自己的祖先）。”\n\n例如，给定如下二叉树:  root = [3,5,1,6,2,0,8,null,null,7,4]\n\n\n\n\n\n示例 1:\n\n输入: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1\n输出: 3\n解释: 节点 5 和节点 1 的最近公共祖先是节点 3。\n示例 2:\n\n输入: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4\n输出: 5\n解释: 节点 5 和节点 4 的最近公共祖先是节点 5。因为根据定义最近公共祖先节点可以为节点本身。\n\n\n说明:\n\n所有节点的值都是唯一的。\np、q 为不同节点且均存在于给定的二叉树中。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        if (root == null) return null;\n\n        if (root == p || root == q) return root;\n\n        TreeNode left = lowestCommonAncestor(root.left, p, q);\n        TreeNode right = lowestCommonAncestor(root.right, p, q);\n\n        if (left != null && right != null) {\n            return root;\n        } else if (left != null) {\n            return left;\n        } else if (right != null) {\n            return right;\n        }\n\n        return null;\n    }\n}\n\n"},"搜索/240. 搜索二维矩阵 II.html":{"url":"搜索/240. 搜索二维矩阵 II.html","title":"240. 搜索二维矩阵 II","keywords":"","body":"240. 搜索二维矩阵 II\n编写一个高效的算法来搜索 m x n 矩阵 matrix 中的一个目标值 target。该矩阵具有以下特性：\n\n每行的元素从左到右升序排列。\n每列的元素从上到下升序排列。\n示例:\n\n现有矩阵 matrix 如下：\n\n[\n  [1,   4,  7, 11, 15],\n  [2,   5,  8, 12, 19],\n  [3,   6,  9, 16, 22],\n  [10, 13, 14, 17, 24],\n  [18, 21, 23, 26, 30]\n]\n给定 target = 5，返回 true。\n\n给定 target = 20，返回 false。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/search-a-2d-matrix-ii\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        if (matrix.length == 0 || matrix[0].length == 0) return false;\n\n        int row = 0, col = matrix[0].length - 1;\n\n        while (row = 0) {\n            if (target == matrix[row][col]) return true;\n            if (target \n"},"搜索/127. 单词接龙.html":{"url":"搜索/127. 单词接龙.html","title":"127. 单词接龙","keywords":"","body":"127. 单词接龙\n\n给定两个单词（beginWord 和 endWord）和一个字典，找到从 beginWord 到 endWord 的最短转换序列的长度。转换需遵循如下规则：\n\n每次转换只能改变一个字母。\n转换过程中的中间单词必须是字典中的单词。\n说明:\n\n如果不存在这样的转换序列，返回 0。\n所有单词具有相同的长度。\n所有单词只由小写字母组成。\n字典中不存在重复的单词。\n你可以假设 beginWord 和 endWord 是非空的，且二者不相同。\n示例 1:\n\n输入:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\n输出: 5\n\n解释: 一个最短转换序列是 \"hit\" -> \"hot\" -> \"dot\" -> \"dog\" -> \"cog\",\n     返回它的长度 5。\n示例 2:\n\n输入:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\n输出: 0\n\n解释: endWord \"cog\" 不在字典中，所以无法进行转换。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/word-ladder\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码1（BFS）\nimport java.util.AbstractMap;\n\nclass Solution {\n    public int ladderLength(String beginWord, String endWord, List wordList) {\n\n        Map> adjacentWordsMap = new HashMap<>();\n\n        for (String word: wordList) {\n            for (int i = 0; i ());\n                adjacentWordsMap.get(temp).add(word);\n            }\n        }\n\n        Set visited = new HashSet<>();\n        Queue> que = new LinkedList<>();\n        que.add(new AbstractMap.SimpleEntry(beginWord, 1));\n\n        while (!que.isEmpty()) {\n            Map.Entry entry = que.poll();\n            String word = entry.getKey();\n            visited.add(word);\n\n            for (int i = 0; i (adjacentWord, entry.getValue() + 1));\n                        }\n                    }\n                }\n            }\n        }\n\n        return 0;\n    }\n}\n\n代码2（双向BFS）\nimport java.util.AbstractMap;\n\nclass Solution {\n    public int ladderLength(String beginWord, String endWord, List wordList) {\n        if (!wordList.contains(endWord)) return 0;\n\n        Map> adjacentWordsMap = new HashMap<>();\n\n        for (String word: wordList) {\n            for (int i = 0; i ());\n                adjacentWordsMap.get(temp).add(word);\n            }\n        }\n\n        Map visited1 = new HashMap<>();\n        Map visited2 = new HashMap<>();\n        visited1.put(beginWord, 1);\n        visited2.put(endWord, 1);\n\n        Queue> que1 = new LinkedList<>();\n        Queue> que2 = new LinkedList<>();\n        que1.add(new AbstractMap.SimpleEntry(beginWord, 1));\n        que2.add(new AbstractMap.SimpleEntry(endWord, 1));\n\n        while (!que1.isEmpty() && !que2.isEmpty()) {\n            int ans1 = helper(que1, visited1, visited2, adjacentWordsMap);\n            if (ans1 != -1) return ans1;\n\n            int ans2 = helper(que2, visited2, visited1, adjacentWordsMap);\n            if (ans2 != -1) return ans2;\n        }\n\n        return 0;\n    }\n\n    private int helper(Queue> que, Map visited1, Map visited2, Map> adjacentWordsMap) {\n        Map.Entry entry = que.poll();\n        String word = entry.getKey();\n        visited1.put(word, entry.getValue());\n\n        for (int i = 0; i (adjacentWord, entry.getValue() + 1));\n                    }\n                }\n            }\n        }\n\n        return -1;\n    }\n}\n\n"},"搜索/130. 被围绕的区域.html":{"url":"搜索/130. 被围绕的区域.html","title":"130. 被围绕的区域","keywords":"","body":"130. 被围绕的区域\n给定一个二维的矩阵，包含 'X' 和 'O'（字母 O）。\n\n找到所有被 'X' 围绕的区域，并将这些区域里所有的 'O' 用 'X' 填充。\n\n示例:\n\nX X X X\nX O O X\nX X O X\nX O X X\n运行你的函数后，矩阵变为：\n\nX X X X\nX X X X\nX X X X\nX O X X\n解释:\n\n被围绕的区间不会存在于边界上，换句话说，任何边界上的 'O' 都不会被填充为 'X'。 任何不在边界上，或不与边界上的 'O' 相连的 'O' 最终都会被填充为 'X'。如果两个元素在水平或垂直方向相邻，则称它们是“相连”的。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/surrounded-regions\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass Solution {\n    private int row, col;\n\n    public void solve(char[][] board) {\n        if (board.length == 0 || board[0].length == 0) return;\n        int row = board.length, col = board[0].length;\n        this.row = row;\n        this.col = col;\n\n        boolean[][] visited = new boolean[row][col];\n\n        for (int i = 0; i = 0) dfs(board, i - 1, j, visited);\n        if (i + 1 = 0) dfs(board, i, j - 1, visited);\n        if (j + 1 \n"},"字符串/438. 找到字符串中所有字母异位词.html":{"url":"字符串/438. 找到字符串中所有字母异位词.html","title":"438. 找到字符串中所有字母异位词","keywords":"","body":"438. 找到字符串中所有字母异位词\n给定一个字符串 s 和一个非空字符串 p，找到 s 中所有是 p 的字母异位词的子串，返回这些子串的起始索引。\n\n字符串只包含小写英文字母，并且字符串 s 和 p 的长度都不超过 20100。\n\n说明：\n\n字母异位词指字母相同，但排列不同的字符串。\n不考虑答案输出的顺序。\n示例 1:\n\n输入:\ns: \"cbaebabacd\" p: \"abc\"\n\n输出:\n[0, 6]\n\n解释:\n起始索引等于 0 的子串是 \"cba\", 它是 \"abc\" 的字母异位词。\n起始索引等于 6 的子串是 \"bac\", 它是 \"abc\" 的字母异位词。\n 示例 2:\n\n输入:\ns: \"abab\" p: \"ab\"\n\n输出:\n[0, 1, 2]\n\n解释:\n起始索引等于 0 的子串是 \"ab\", 它是 \"ab\" 的字母异位词。\n起始索引等于 1 的子串是 \"ba\", 它是 \"ab\" 的字母异位词。\n起始索引等于 2 的子串是 \"ab\", 它是 \"ab\" 的字母异位词。\n思路\n滑动窗口的通用模板：\nstring s, t;\n// 在 s 中寻找 t 的「最小覆盖子串」\nint left = 0, right = 0;\nstring res = s;\n\nwhile(right \n本题使用了两个哈希表：require用来存储字符串T中所有字符出现的次数，cur用来存储当前窗口内各字符出现的次数。另外定义一个match变量表示cur中出现次数等于require的字符数量。那么显然当match的大小等于require中的所有字符数量时，窗口window是符合要求的。\n代码\n\nclass Solution {\n    public List findAnagrams(String s, String t) {\n        Map require = new HashMap<>();\n        Map cur = new HashMap<>();\n        for (Character c: t.toCharArray()) {\n            required.put(c, require.getOrDefault(c, 0) + 1);\n        }\n        int left = 0, right = 0;\n        int match = 0;\n        List res = new ArrayList<>();\n        while (right \n"},"字符串/76. 最小覆盖子串.html":{"url":"字符串/76. 最小覆盖子串.html","title":"76. 最小覆盖子串","keywords":"","body":"76. 最小覆盖子串\n给你一个字符串 S、一个字符串 T，请在字符串 S 里面找出：包含 T 所有字母的最小子串。\n\n示例：\n\n输入: S = \"ADOBECODEBANC\", T = \"ABC\"\n输出: \"BANC\"\n说明：\n\n如果 S 中不存这样的子串，则返回空字符串 \"\"。\n如果 S 中存在这样的子串，我们保证它是唯一的答案。\n思路\n依然使用的是滑动窗口的思路，只需要对上题代码作稍加改动即可。\n代码\n\nclass Solution {\n    public String minWindow(String s, String t) {\n        Map required = new HashMap<>();\n        Map cur = new HashMap<>();\n        for (Character c: t.toCharArray()) {\n            required.put(c, required.getOrDefault(c, 0) + 1);\n        }\n        int left = 0, right = 0;\n        int match = 0;\n        int start = 0, minLen = Integer.MAX_VALUE;\n        while (right \n"},"字符串/44. 通配符匹配.html":{"url":"字符串/44. 通配符匹配.html","title":"44. 通配符匹配","keywords":"","body":"44. 通配符匹配\n给定一个字符串 (s) 和一个字符模式 (p) ，实现一个支持 '?' 和 '*' 的通配符匹配。\n\n'?' 可以匹配任何单个字符。\n'*' 可以匹配任意字符串（包括空字符串）。\n两个字符串完全匹配才算匹配成功。\n\n说明:\n\ns 可能为空，且只包含从 a-z 的小写字母。\np 可能为空，且只包含从 a-z 的小写字母，以及字符 ? 和 *。\n示例 1:\n\n输入:\ns = \"aa\"\np = \"a\"\n输出: false\n解释: \"a\" 无法匹配 \"aa\" 整个字符串。\n示例 2:\n\n输入:\ns = \"aa\"\np = \"*\"\n输出: true\n解释: '*' 可以匹配任意字符串。\n示例 3:\n\n输入:\ns = \"cb\"\np = \"?a\"\n输出: false\n解释: '?' 可以匹配 'c', 但第二个 'a' 无法匹配 'b'。\n示例 4:\n\n输入:\ns = \"adceb\"\np = \"*a*b\"\n输出: true\n解释: 第一个 '*' 可以匹配空字符串, 第二个 '*' 可以匹配字符串 \"dce\".\n示例 5:\n\n输入:\ns = \"acdcb\"\np = \"a*c?b\"\n输入: false\n代码1（DP）\nclass Solution {\n    public boolean isMatch(String s, String p) {\n        boolean[][] dp = new boolean[s.length() + 1][p.length() + 1];\n        dp[0][0] = true;\n        for (int j = 1; j \n思路2\n定义两个变量star和star_s，star代表模式串p中上一个*的位置，star_s代表star在s中所匹配的字符串之后的一个字符的索引。当在p中第一次遇到*时，将对应的star_s设置为i，代表star一开始只匹配0个字符。\n当i和j匹配失败时，进行回溯，即重置j为star的下一个字符，star_s增1（代表star又多匹配了一个字符），同时将i设置为star_s。\n代码2\nclass Solution {\n    public boolean isMatch(String s, String p) {\n        s = s.concat(\"$\");\n        p = p.concat(\"$\");\n\n        int star = -1, star_s = -1, i = 0, j = 0;\n\n        while (i \n"},"字符串/28. 实现 strStr.html":{"url":"字符串/28. 实现 strStr.html","title":"28. 实现 strStr","keywords":"","body":"28. 实现 strStr()\n实现 strStr() 函数。\n\n给定一个 haystack 字符串和一个 needle 字符串，在 haystack 字符串中找出 needle 字符串出现的第一个位置 (从0开始)。如果不存在，则返回  -1。\n思路1\nhttps://leetcode-cn.com/problems/implement-strstr/solution/kmp-suan-fa-xiang-jie-by-labuladong/\n代码1\n\nclass Solution {\n    public int strStr(String haystack, String needle) {\n        if (needle.length() == 0) return 0;\n        int[][] dp = kmp(needle);\n        int N = haystack.length(), M = needle.length();\n        int j = 0;\n        for (int i = 0; i \n思路2\n\n首先是部分匹配表（pmt）的含义。pmt表的每一位代表模式字符串从开头到当前位这一段字符串的公共前后缀的最大长度。为了计算方便，将pmt的每一位后移一位（每一位匹配失败后只需要用到前面一位的pmt值），前面填上-1，构成next数组。       \n然后是next数组的用法，举例来说，如果模式字符串在最后一位的a上匹配失败，由于next[4] = 2，说明a之前的两位（后缀）与模式字符串的前两位（前缀）是一致的，这样就只需要把前缀移动到后缀的位置上来就可以了（j = next[j])。       \n至于next数组的构造方法，方法类似：把原来模式字符串的前缀作为新的模式字符串来匹配原来的模式字符串，匹配方法同上。\n代码2\n\nclass Solution {\n    public int strStr(String haystack, String needle) {\n        if (needle.length() == 0) return 0;\n        int N = haystack.length(), M = needle.length();\n        int[] next = getNext(needle);\n        int i = 0, j = 0;\n        while (i \n"},"字符串/5. 最长回文子串.html":{"url":"字符串/5. 最长回文子串.html","title":"5. 最长回文子串","keywords":"","body":"5. 最长回文子串\n给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。\n\n示例 1：\n\n输入: \"babad\"\n输出: \"bab\"\n注意: \"aba\" 也是一个有效答案。\n示例 2：\n\n输入: \"cbbd\"\n输出: \"bb\"\n思路1\n中心扩展算法：设字符串s长度为n，则一共存在2n-1个中心。定义一个expandAroundCenter函数，left和right分别代表当前中心的左右边界（边界不包含在回文串内，所以最后返回回文串长度时是right - left - 1）。\n代码1\nclass Solution {\n    public String longestPalindrome(String s) {\n        if (s.length() == 0) return \"\";\n        int left = 0, right = 0, start = 0, end = 0;\n\n        for (int i = 0; i  end - start + 1) {\n                start = i - (len - 1) / 2;\n                end = i + len / 2;\n            }\n        }\n\n        return s.substring(start, end + 1);\n    }\n\n    public int expandAroundCenter(String s, int left, int right) {\n        while (left >= 0 && right \n思路2\nManacher算法：http://www.cnblogs.com/grandyang/p/4475985.html\n代码2\nclass Solution {\n    public String longestPalindrome(String s) {\n        if (s.length() == 0) return s;\n        StringBuilder sb = new StringBuilder(\"$#\");\n        for (int i = 0; i = mx ? 1 : Math.min(mx - i, lenArr[2 * id - i]);\n\n            // 找到以i为中心的回文串的最大半径\n            while (sb.charAt(i + lenArr[i]) == sb.charAt(i - lenArr[i])) { lenArr[i]++; }\n\n            // 尝试更新mx与id\n            if (i + lenArr[i] > mx) {\n                mx = i + lenArr[i];\n                id = i;\n            }\n\n            // 尝试更新结果\n            if (lenArr[i] > resLen) {\n                resLen = lenArr[i];\n                resId = i;\n            }\n        }\n        return s.substring((resId - resLen) / 2, (resId - resLen) / 2 + resLen - 1);\n    }\n}\n\n"},"字符串/1143. 最长公共子序列.html":{"url":"字符串/1143. 最长公共子序列.html","title":"1143. 最长公共子序列","keywords":"","body":"1143. 最长公共子序列\n给定两个字符串 text1 和 text2，返回这两个字符串的最长公共子序列。\n\n一个字符串的 子序列 是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。\n例如，\"ace\" 是 \"abcde\" 的子序列，但 \"aec\" 不是 \"abcde\" 的子序列。两个字符串的「公共子序列」是这两个字符串所共同拥有的子序列。\n\n若这两个字符串没有公共子序列，则返回 0。\n\n\n\n示例 1:\n\n输入：text1 = \"abcde\", text2 = \"ace\" \n输出：3  \n解释：最长公共子序列是 \"ace\"，它的长度为 3。\n示例 2:\n\n输入：text1 = \"abc\", text2 = \"abc\"\n输出：3\n解释：最长公共子序列是 \"abc\"，它的长度为 3。\n示例 3:\n\n输入：text1 = \"abc\", text2 = \"def\"\n输出：0\n解释：两个字符串没有公共子序列，返回 0。\n\n\n提示:\n\n1 代码\nclass Solution {\n    public class Tuple {\n        public int x;\n        public int y;\n        public Tuple(int x, int y) {\n            this.x = x;\n            this.y = y;\n        }\n    }\n\n    public int longestCommonSubsequence(String text1, String text2) {\n        int size1 = text1.length(), size2 = text2.length();\n\n        int[][] dp = new int[size1 + 1][size2 + 1];\n        Tuple[][] back = new Tuple[size1 + 1][size2 + 1]; // back数组存储回溯路径\n\n        for (int i = 0; i  dp[i][j + 1]) {\n                    dp[i + 1][j + 1] = dp[i + 1][j];\n                    back[i + 1][j + 1] = new Tuple(i + 1, j);\n                } else {\n                    dp[i + 1][j + 1] = dp[i][j + 1];\n                    back[i + 1][j + 1] = new Tuple(i, j + 1);\n                }\n            }\n        }\n\n        StringBuilder sb = new StringBuilder();\n        int x = size1, y = size2;\n        while (x > 0) {\n            if (back[x][y].x == x - 1 && back[x][y].y == y - 1) {\n                sb.append(text1.charAt(x - 1));\n            }\n\n            Tuple t = back[x][y];\n            x = t.x;\n            y = t.y;\n        }\n\n        System.out.println(sb.reverse().toString()); // 输出其中一个最长公共子序列\n\n        return dp[size1][size2];\n\n    }\n}\n\n"},"字符串/10. 正则表达式匹配.html":{"url":"字符串/10. 正则表达式匹配.html","title":"10. 正则表达式匹配","keywords":"","body":"10. 正则表达式匹配\n给你一个字符串 s 和一个字符规律 p，请你来实现一个支持 '.' 和 '*' 的正则表达式匹配。\n\n'.' 匹配任意单个字符\n'*' 匹配零个或多个前面的那一个元素\n所谓匹配，是要涵盖 整个 字符串 s的，而不是部分字符串。\n\n说明:\n\ns 可能为空，且只包含从 a-z 的小写字母。\np 可能为空，且只包含从 a-z 的小写字母，以及字符 . 和 *。\n示例 1:\n\n输入:\ns = \"aa\"\np = \"a\"\n输出: false\n解释: \"a\" 无法匹配 \"aa\" 整个字符串。\n示例 2:\n\n输入:\ns = \"aa\"\np = \"a*\"\n输出: true\n解释: 因为 '*' 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 'a'。因此，字符串 \"aa\" 可被视为 'a' 重复了一次。\n示例 3:\n\n输入:\ns = \"ab\"\np = \".*\"\n输出: true\n解释: \".*\" 表示可匹配零个或多个（'*'）任意字符（'.'）。\n示例 4:\n\n输入:\ns = \"aab\"\np = \"c*a*b\"\n输出: true\n解释: 因为 '*' 表示零个或多个，这里 'c' 为 0 个, 'a' 被重复一次。因此可以匹配字符串 \"aab\"。\n示例 5:\n\n输入:\ns = \"mississippi\"\np = \"mis*is*p*.\"\n输出: false\n代码（DP）\nclass Solution {\n    public boolean isMatch(String s, String p) {\n        boolean[][] dp = new boolean[s.length() + 1][p.length() + 1];\n        dp[0][0] = true;\n\n        for (int i = 0; i  0 && (s.charAt(i - 1) == p.charAt(j - 2) || p.charAt(j - 2) == '.') && dp[i - 1][j]);\n                } else {\n                    dp[i][j] = i > 0 && (s.charAt(i - 1) == p.charAt(j - 1) || p.charAt(j - 1) == '.') && dp[i - 1][j - 1];\n                }\n            }\n        }\n\n        return dp[s.length()][p.length()];\n\n    }\n}\n\n"},"字符串/522. 最长特殊序列 II.html":{"url":"字符串/522. 最长特殊序列 II.html","title":"522. 最长特殊序列 II","keywords":"","body":"522. 最长特殊序列 II\n给定字符串列表，你需要从它们中找出最长的特殊序列。最长特殊序列定义如下：该序列为某字符串独有的最长子序列（即不能是其他字符串的子序列）。\n\n子序列可以通过删去字符串中的某些字符实现，但不能改变剩余字符的相对顺序。空序列为所有字符串的子序列，任何字符串为其自身的子序列。\n\n输入将是一个字符串列表，输出是最长特殊序列的长度。如果最长特殊序列不存在，返回 -1 。\n\n\n\n示例：\n\n输入: \"aba\", \"cdc\", \"eae\"\n输出: 3\n\n\n提示：\n\n所有给定的字符串长度不会超过 10 。\n给定字符串列表的长度将在 [2, 50 ] 之间。\n题解\nhttps://leetcode-cn.com/problems/longest-uncommon-subsequence-ii/solution/java-treemap-zi-fu-chuan-by-tyh7/\n代码\nclass Solution {\n    public int findLUSlength(String[] strs) {\n        //自定义比较器：根据字符串长度\n        Comparator strLenComparator = new Comparator() {\n            @Override\n            public int compare(String s1, String s2) {\n                if(s1.length() > s2.length()) return -1;\n                else if(s1.length()  sortedMap = new TreeMap<>(strLenComparator);\n        for(String str : strs) {\n            sortedMap.put(str, sortedMap.getOrDefault(str, 0) + 1);\n        }\n        //寻找最长特殊字串\n        Set set = new HashSet<>();\n        for(String str : sortedMap.keySet()) {\n            boolean isLUS = true;\n            if(sortedMap.get(str) == 1) {\n                for(String str2 : set) {\n                    if(contains(str2, str)) { //当前字符串是比它长的字符串的子串\n                        isLUS = false;\n                        break;\n                    }\n                }\n                if(isLUS) return str.length();\n            }\n            set.add(str);   //已经check过的string\n        }\n        return -1;\n    }\n    //判断字符串a是否模糊包含字符串b\n    boolean contains(String a, String b) {\n        int i = 0, j = 0;\n        while(i \n"},"字符串/796. 旋转字符串.html":{"url":"字符串/796. 旋转字符串.html","title":"796. 旋转字符串","keywords":"","body":"796. 旋转字符串\n给定两个字符串, A 和 B。\n\nA 的旋转操作就是将 A 最左边的字符移动到最右边。 例如, 若 A = 'abcde'，在移动一次之后结果就是'bcdea' 。如果在若干次旋转操作之后，A 能变成B，那么返回True。\n\n示例 1:\n输入: A = 'abcde', B = 'cdeab'\n输出: true\n\n示例 2:\n输入: A = 'abcde', B = 'abced'\n输出: false\n注意：\n\nA 和 B 长度不超过 100。\n代码\nclass Solution {\n    public boolean rotateString(String A, String B) {\n        return (A.length() == B.length()) && (A + A).contains(B);\n    }\n}\n\n"},"字符串/459. 重复的子字符串.html":{"url":"字符串/459. 重复的子字符串.html","title":"459. 重复的子字符串","keywords":"","body":"459. 重复的子字符串\n给定一个非空的字符串，判断它是否可以由它的一个子串重复多次构成。给定的字符串只含有小写英文字母，并且长度不超过10000。\n\n示例 1:\n\n输入: \"abab\"\n\n输出: True\n\n解释: 可由子字符串 \"ab\" 重复两次构成。\n示例 2:\n\n输入: \"aba\"\n\n输出: False\n示例 3:\n\n输入: \"abcabcabcabc\"\n\n输出: True\n\n解释: 可由子字符串 \"abc\" 重复四次构成。 (或者子字符串 \"abcabc\" 重复两次构成。)\n代码\nclass Solution {\n    public boolean repeatedSubstringPattern(String s) {\n        // 假设字符串s可以由其中一个子串重复多次构成，设这个子串为t，重复次数为N（N > 1）。\n        // 将字符串s首尾拼接，构成字符串2s。那么2s就是由2N个子串t构成。\n        // 分别去掉字符串2s首尾字符，构成字符串2s-2。那么2s-2就是由(2N-2)个子串t构成。\n        // 由于(2N-2)/2>0，也即字符串2s-2至少会包含一个字符串s。\n\n        return (s + s).substring(1, 2 * s.length() - 1).contains(s);\n    }\n}\n\n"},"字符串/72. 编辑距离.html":{"url":"字符串/72. 编辑距离.html","title":"72. 编辑距离","keywords":"","body":"72. 编辑距离\n给定两个单词 word1 和 word2，计算出将 word1 转换成 word2 所使用的最少操作数 。\n\n你可以对一个单词进行如下三种操作：\n\n插入一个字符\n删除一个字符\n替换一个字符\n示例 1:\n\n输入: word1 = \"horse\", word2 = \"ros\"\n输出: 3\n解释: \nhorse -> rorse (将 'h' 替换为 'r')\nrorse -> rose (删除 'r')\nrose -> ros (删除 'e')\n示例 2:\n\n输入: word1 = \"intention\", word2 = \"execution\"\n输出: 5\n解释: \nintention -> inention (删除 't')\ninention -> enention (将 'i' 替换为 'e')\nenention -> exention (将 'n' 替换为 'x')\nexention -> exection (将 'n' 替换为 'c')\nexection -> execution (插入 'u')\n代码\nclass Solution {\n    public int minDistance(String word1, String word2) {\n        int[][] dp = new int[word1.length() + 1][word2.length() + 1];\n\n        for (int i = 1; i \n"},"字符串/3. 无重复字符的最长子串.html":{"url":"字符串/3. 无重复字符的最长子串.html","title":"3. 无重复字符的最长子串","keywords":"","body":"3. 无重复字符的最长子串\n给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。\n\n示例 1:\n\n输入: \"abcabcbb\"\n输出: 3 \n解释: 因为无重复字符的最长子串是 \"abc\"，所以其长度为 3。\n示例 2:\n\n输入: \"bbbbb\"\n输出: 1\n解释: 因为无重复字符的最长子串是 \"b\"，所以其长度为 1。\n示例 3:\n\n输入: \"pwwkew\"\n输出: 3\n解释: 因为无重复字符的最长子串是 \"wke\"，所以其长度为 3。\n     请注意，你的答案必须是 子串 的长度，\"pwke\" 是一个子序列，不是子串。\n思路1\n依然是滑动窗口的思路，只不过这次的内部循环是在窗口不符合要求时执行的，窗口直到符合要求后成为候选结果。\n代码1\n\nclass Solution {\n    public int lengthOfLongestSubstring(String s) {\n        if (s.length() == 0) return 0;\n        Map map = new HashMap<>();\n        int left = 0, right = 0;\n        int res = 1;\n        while (right  1) {\n                map.put(s.charAt(left), map.get(s.charAt(left)) - 1);\n                left++;\n            }\n            res = Math.max(res, right - left + 1);\n            right++;\n        }\n\n        return res;\n    }\n}\n\n思路2\n定义窗口左右边界left（exclusive）和right（inclusive）。遍历right时，设置一个哈希函数来存储当前字符上一次出现过的位置（如果是第一次出现则为null）。窗口左边界left必须在当前字符上次出现位置或之后窗口才可能是有效的，因此需要在每一步遍历时将left更新成当前字符上次出现过的位置，但需要注意的是如果left本身就已经在当前字符上次出现过的位置之后了，那么此时就无需再更新left。\n代码2\n\nclass Solution {\n    public int lengthOfLongestSubstring(String s) {\n        if (s.length() == 0) return 0;\n        int left = -1, right = 0;\n        Map map = new HashMap<>();\n        int res = 1;\n        while (right \n"},"动态规划/131. 分割回文串.html":{"url":"动态规划/131. 分割回文串.html","title":"131. 分割回文串","keywords":"","body":"131. 分割回文串\n给定一个字符串 s，将 s 分割成一些子串，使每个子串都是回文串。\n\n返回 s 所有可能的分割方案。\n\n示例:\n\n输入: \"aab\"\n输出:\n[\n  [\"aa\",\"b\"],\n  [\"a\",\"a\",\"b\"]\n]\n思路\n代码\n\nclass Solution {\n    public List> partition(String s) {\n        boolean[][] p = new boolean[s.length()][s.length()];\n\n        for (int i = 0; i > helper(String s, boolean[][] p, int start) {\n        List> res = new LinkedList();\n        if (start == s.length()) {\n            res.add(new LinkedList());\n            return res;\n        }\n\n        for (int i = start; i > ret = helper(s, p, i + 1);\n                for (List list: ret) {\n                    list.add(0, s.substring(start, i + 1));\n                    res.add(list);\n                }\n            }\n        }\n\n        return res;\n    }\n}\n\n"},"动态规划/97. 交错字符串.html":{"url":"动态规划/97. 交错字符串.html","title":"97. 交错字符串","keywords":"","body":"97. 交错字符串\n给定三个字符串 s1, s2, s3, 验证 s3 是否是由 s1 和 s2 交错组成的。\n\n示例 1:\n\n输入: s1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbcbcac\"\n输出: true\n示例 2:\n\n输入: s1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbbaccc\"\n输出: false\n代码\nclass Solution {\n    public boolean isInterleave(String s1, String s2, String s3) {\n        if (s3.length() != s1.length() + s2.length()) return false;\n\n        boolean[][] dp = new boolean[s1.length() + 1][s2.length() + 1];\n        dp[0][0] = true;\n\n        for (int i = 1; i \n"},"动态规划/188. 买卖股票的最佳时机 IV.html":{"url":"动态规划/188. 买卖股票的最佳时机 IV.html","title":"188. 买卖股票的最佳时机 IV","keywords":"","body":"188. 买卖股票的最佳时机 IV\n给定一个数组，它的第 i 个元素是一支给定的股票在第 i 天的价格。\n\n设计一个算法来计算你所能获取的最大利润。你最多可以完成 k 笔交易。\n\n注意: 你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。\n\n示例 1:\n\n输入: [2,4,1], k = 2\n输出: 2\n解释: 在第 1 天 (股票价格 = 2) 的时候买入，在第 2 天 (股票价格 = 4) 的时候卖出，这笔交易所能获得利润 = 4-2 = 2 。\n示例 2:\n\n输入: [3,2,6,5,0,3], k = 2\n输出: 7\n解释: 在第 2 天 (股票价格 = 2) 的时候买入，在第 3 天 (股票价格 = 6) 的时候卖出, 这笔交易所能获得利润 = 6-2 = 4 。\n     随后，在第 5 天 (股票价格 = 0) 的时候买入，在第 6 天 (股票价格 = 3) 的时候卖出, 这笔交易所能获得利润 = 3-0 = 3 。\n思路\n该题是对121， 122， 123题的泛化。定义二维数组dp，dp[k][0]表示在最多可以完成k笔交易的情况下，当前处于卖出状态时所能获得的最大利润；dp[k][1]表示在最多可以完成k笔交易的情况下，当前处于买入状态时所能获得的最大利润。初始时对于任意k，dp[k][0]都等于0，而dp[k][1]都等于负无穷，代表初始时不可能处于卖出状态。状态变迁关系参考代码。\n另外本题中会出现k值特别大的情况，因此需要做一定优化。当k值大于prices数组的一半长度时，相当于不再对交易次数进行限制，因此可以用122题的方法来解决。\n代码\nclass Solution {\n    public int maxProfit(int k, int[] prices) {\n        if (k >= prices.length / 2) return maxProfit(prices);\n        int[][] dp = new int[k + 1][2];\n        for (int j = 0; j  prices[i - 1]) max += prices[i] - prices[i - 1];\n        }\n\n        return max;\n    }\n}\n\n"},"动态规划/122. 买卖股票的最佳时机 II.html":{"url":"动态规划/122. 买卖股票的最佳时机 II.html","title":"122. 买卖股票的最佳时机 II","keywords":"","body":"122. 买卖股票的最佳时机 II\n给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。\n\n设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。\n\n注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。\n\n示例 1:\n\n输入: [7,1,5,3,6,4]\n输出: 7\n解释: 在第 2 天（股票价格 = 1）的时候买入，在第 3 天（股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。\n     随后，在第 4 天（股票价格 = 3）的时候买入，在第 5 天（股票价格 = 6）的时候卖出, 这笔交易所能获得利润 = 6-3 = 3 。\n示例 2:\n\n输入: [1,2,3,4,5]\n输出: 4\n解释: 在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。\n     注意你不能在第 1 天和第 2 天接连购买股票，之后再将它们卖出。\n     因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。\n示例 3:\n\n输入: [7,6,4,3,1]\n输出: 0\n解释: 在这种情况下, 没有交易完成, 所以最大利润为 0。\n思路1\nhttps://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/solution/mai-mai-gu-piao-de-zui-jia-shi-ji-ii-by-leetcode/\n代码1\n    public int maxProfit(int[] prices) {\n        int max = 0;\n\n        for (int i = 1; i  prices[i - 1]) max += prices[i] - prices[i - 1];\n        }\n\n        return max;\n    }\n\n思路2\n在121题的基础上稍微修改即可：买入状态可以从买入状态或者卖出状态变迁得来，从买入状态变迁，利润保持不变；从卖出状态变迁，利润为卖出状态的利润sold减去当前的价格。\n代码2\n    public int maxProfit(int[] prices) {\n        int sold = 0, hold = Integer.MIN_VALUE;\n\n        for (int i = 0; i \n"},"动态规划/132. 分割回文串 II.html":{"url":"动态规划/132. 分割回文串 II.html","title":"132. 分割回文串 II","keywords":"","body":"132. 分割回文串 II\n给定一个字符串 s，将 s 分割成一些子串，使每个子串都是回文串。\n\n返回符合要求的最少分割次数。\n\n示例:\n\n输入: \"aab\"\n输出: 1\n解释: 进行一次分割就可将 s 分割成 [\"aa\",\"b\"] 这样两个回文子串。\n思路\n设dp(i)表示范围为(0, i)的子串的最少分割次数。i=0时由于只有一个字符，所以其最小分割次数为0。\n状态变迁公式为dp(i) = min(dp(j) + 1), -1 \n代码\nclass Solution {\n    public int minCut(String s) {\n\n        int[] dp = new int[s.length()];\n        Arrays.fill(dp, s.length());\n        dp[0] = 0;\n        boolean[][] p = new boolean[s.length()][s.length()];\n\n        for (int i = 0; i \n"},"动态规划/152. 乘积最大子序列.html":{"url":"动态规划/152. 乘积最大子序列.html","title":"152. 乘积最大子序列","keywords":"","body":"152. 乘积最大子序列\n给定一个整数数组 nums ，找出一个序列中乘积最大的连续子序列（该序列至少包含一个数）。\n\n示例 1:\n\n输入: [2,3,-2,4]\n输出: 6\n解释: 子数组 [2,3] 有最大乘积 6。\n示例 2:\n\n输入: [-2,0,-1]\n输出: 0\n解释: 结果不能为 2, 因为 [-2,-1] 不是子数组。\n思路\n基本思路与最大连续子串和一样。不过要注意的是由于负数之间的乘积为正数，所以需要同时计算最小子串乘积。\n代码\nclass Solution {\n    public int maxProduct(int[] nums) {\n        int minVal = nums[0], maxVal = nums[0], res = nums[0];\n\n        for (int i = 1; i \n"},"动态规划/87. 扰乱字符串.html":{"url":"动态规划/87. 扰乱字符串.html","title":"87. 扰乱字符串","keywords":"","body":"87. 扰乱字符串\n给定一个字符串 s1，我们可以把它递归地分割成两个非空子字符串，从而将其表示为二叉树。\n\n下图是字符串 s1 = \"great\" 的一种可能的表示形式。\n\n    great\n   /    \\\n  gr    eat\n / \\    /  \\\ng   r  e   at\n           / \\\n          a   t\n在扰乱这个字符串的过程中，我们可以挑选任何一个非叶节点，然后交换它的两个子节点。\n\n例如，如果我们挑选非叶节点 \"gr\" ，交换它的两个子节点，将会产生扰乱字符串 \"rgeat\" 。\n\n    rgeat\n   /    \\\n  rg    eat\n / \\    /  \\\nr   g  e   at\n           / \\\n          a   t\n我们将 \"rgeat” 称作 \"great\" 的一个扰乱字符串。\n\n同样地，如果我们继续交换节点 \"eat\" 和 \"at\" 的子节点，将会产生另一个新的扰乱字符串 \"rgtae\" 。\n\n    rgtae\n   /    \\\n  rg    tae\n / \\    /  \\\nr   g  ta  e\n       / \\\n      t   a\n我们将 \"rgtae” 称作 \"great\" 的一个扰乱字符串。\n\n给出两个长度相等的字符串 s1 和 s2，判断 s2 是否是 s1 的扰乱字符串。\n\n示例 1:\n\n输入: s1 = \"great\", s2 = \"rgeat\"\n输出: true\n示例 2:\n\n输入: s1 = \"abcde\", s2 = \"caebd\"\n输出: false\n代码1（DP，20ms）\nclass Solution {\n    public boolean isScramble(String s1, String s2) {\n        // dp[n][i][j]代表s1中起点为i的长度为n的字符串是否为s2中起点为j的长度为n的字符串的扰乱字符串\n        // 状态转移公式：dp[n][i][j] = (dp[k][i][j] && dp[n - k][i + k][j + k]) \n        //                           || (dp[k][i][j + n - k] && dp[n - k][i + k][j]), 1 = 0; i--) {\n                for (int j = n - k; j >= 0; j--) {\n                    for (int l = 1; l \n代码2（递归 + 优化，2ms）\nclass Solution {\n    public boolean isScramble(String s1, String s2) {\n        if (s1.length() != s2.length()) return false;\n        if (s1.equals(s2)) return true;\n\n        int[] dict = new int[26];\n\n        for (int i = 0; i \n"},"动态规划/714. 买卖股票的最佳时机含手续费.html":{"url":"动态规划/714. 买卖股票的最佳时机含手续费.html","title":"714. 买卖股票的最佳时机含手续费","keywords":"","body":"714. 买卖股票的最佳时机含手续费\n给定一个整数数组 prices，其中第 i 个元素代表了第 i 天的股票价格 ；非负整数 fee 代表了交易股票的手续费用。\n\n你可以无限次地完成交易，但是你每次交易都需要付手续费。如果你已经购买了一个股票，在卖出它之前你就不能再继续购买股票了。\n\n返回获得利润的最大值。\n\n示例 1:\n\n输入: prices = [1, 3, 2, 8, 4, 9], fee = 2\n输出: 8\n解释: 能够达到的最大利润:  \n在此处买入 prices[0] = 1\n在此处卖出 prices[3] = 8\n在此处买入 prices[4] = 4\n在此处卖出 prices[5] = 9\n总利润: ((8 - 1) - 2) + ((9 - 4) - 2) = 8.\n注意:\n\n0 思路\n在122题的基础上稍作修改即可。在每一次买入的时候除了减去当前价格，还要额外减去手续费。（也可以在卖出的时候减去手续费，但是在代码中会有整数溢出的情况出现)\n代码\nclass Solution {\n    public int maxProfit(int[] prices, int fee) {\n        int sold = 0, hold = Integer.MIN_VALUE;\n\n        for (int i = 0; i \n"},"动态规划/121. 买卖股票的最佳时机.html":{"url":"动态规划/121. 买卖股票的最佳时机.html","title":"121. 买卖股票的最佳时机","keywords":"","body":"121. 买卖股票的最佳时机\n给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。\n\n如果你最多只允许完成一笔交易（即买入和卖出一支股票），设计一个算法来计算你所能获取的最大利润。\n\n注意你不能在买入股票前卖出股票。\n\n示例 1:\n\n输入: [7,1,5,3,6,4]\n输出: 5\n解释: 在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。\n     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格。\n示例 2:\n\n输入: [7,6,4,3,1]\n输出: 0\n解释: 在这种情况下, 没有交易完成, 所以最大利润为 0。\n思路1\n遍历prices数组，设置一个min变量存储到当前为止最小的价格。计算当前价格和min变量的差，并与最大利润进行比较。最大利润初始为0。\n代码1\n    public int maxProfit(int[] prices) {\n        if (prices.length == 0) return 0;\n        int min = prices[0], res = 0;\n\n        for (int i = 1; i \n思路2\n遍历prices数组，定义两个变量sold和hold。sold代表当前处于卖出状态时获得的最大利润，hold代表当前处于买入状态时获得的最大利润。卖出状态可以从卖出状态或者买入状态变迁得来，如果是从卖出状态变迁，则利润保持不变；如果是从买入状态变迁，利润增加当前的价格。买入状态可以从买入状态或者初始状态变迁得来，如果是从买入状态变迁，则利润保持不变，如果是从初始状态变迁，则利润为0-当前价格。初始时sold为0，hold为负无穷，代表初始时不可能处于卖出状态。最后返回卖出状态的最大利润。\n代码2\npublic int maxProfit(int[] prices) {\n    int hold = Integer.MIN_VALUE, sold = 0;\n\n    for (int i = 0; i "},"动态规划/85. 最大矩形.html":{"url":"动态规划/85. 最大矩形.html","title":"85. 最大矩形","keywords":"","body":"85. 最大矩形\n给定一个仅包含 0 和 1 的二维二进制矩阵，找出只包含 1 的最大矩形，并返回其面积。\n\n示例:\n\n输入:\n[\n  [\"1\",\"0\",\"1\",\"0\",\"0\"],\n  [\"1\",\"0\",\"1\",\"1\",\"1\"],\n  [\"1\",\"1\",\"1\",\"1\",\"1\"],\n  [\"1\",\"0\",\"0\",\"1\",\"0\"]\n]\n输出: 6\n思路\nhttps://leetcode-cn.com/problems/maximal-rectangle/solution/zui-da-ju-xing-by-leetcode/\n代码\n\nclass Solution {\n    public int maximalRectangle(char[][] matrix) {\n        if(matrix.length == 0) return 0;\n        int m = matrix.length;\n        int n = matrix[0].length;\n\n        int[] left = new int[n]; // initialize left as the leftmost boundary possible\n        int[] right = new int[n];\n        int[] height = new int[n];\n\n        Arrays.fill(right, n); // initialize right as the rightmost boundary possible\n\n        int maxarea = 0;\n        for(int i = 0; i = 0; j--) {\n                if(matrix[i][j] == '1') right[j] = Math.min(right[j], cur_right);\n                else {right[j] = n; cur_right = j;}    \n            }\n            // update area\n            for(int j = 0; j \n"},"动态规划/120. 三角形最小路径和.html":{"url":"动态规划/120. 三角形最小路径和.html","title":"120. 三角形最小路径和","keywords":"","body":"120. 三角形最小路径和\n给定一个三角形，找出自顶向下的最小路径和。每一步只能移动到下一行中相邻的结点上。\n\n例如，给定三角形：\n\n[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]\n自顶向下的最小路径和为 11（即，2 + 3 + 5 + 1 = 11）。\n\n说明：\n\n如果你可以只使用 O(n) 的额外空间（n 为三角形的总行数）来解决这个问题，那么你的算法会很加分。\n思路\n状态f(i, j)代表从(i, j)位置移动到三角底部的最小路径和，状态变迁公式为：f(i, j) = triangle(i, j) + Math.min(f(i + 1, j), f(i + 1, j + 1))。在本题中采用自底向上遍历的顺序，直接使用triangle数组存储结果，无需额外空间。\n代码\nclass Solution {\n    public int minimumTotal(List> triangle) {\n        for (int i = triangle.size() - 2; i >= 0; i--) {\n            for (int j = 0; j \n"},"动态规划/174. 地下城游戏.html":{"url":"动态规划/174. 地下城游戏.html","title":"174. 地下城游戏","keywords":"","body":"174. 地下城游戏\n一些恶魔抓住了公主（P）并将她关在了地下城的右下角。地下城是由 M x N 个房间组成的二维网格。我们英勇的骑士（K）最初被安置在左上角的房间里，他必须穿过地下城并通过对抗恶魔来拯救公主。\n\n骑士的初始健康点数为一个正整数。如果他的健康点数在某一时刻降至 0 或以下，他会立即死亡。\n\n有些房间由恶魔守卫，因此骑士在进入这些房间时会失去健康点数（若房间里的值为负整数，则表示骑士将损失健康点数）；其他房间要么是空的（房间里的值为 0），要么包含增加骑士健康点数的魔法球（若房间里的值为正整数，则表示骑士将增加健康点数）。\n\n为了尽快到达公主，骑士决定每次只向右或向下移动一步。\n\n\n\n编写一个函数来计算确保骑士能够拯救到公主所需的最低初始健康点数。\n\n例如，考虑到如下布局的地下城，如果骑士遵循最佳路径 右 -> 右 -> 下 -> 下，则骑士的初始健康点数至少为 7。\n\n-2 (K)  -3  3\n-5  -10 1\n10  30  -5 (P)\n\n\n说明:\n\n骑士的健康点数没有上限。\n\n任何房间都可能对骑士的健康点数造成威胁，也可能增加骑士的健康点数，包括骑士进入的左上角房间以及公主被监禁的右下角房间。\n思路\n这是一个多阶段优化问题，有广搜，贪心，动规。这题显然贪心不行，于是范围缩小到广搜和动规。本题求最小健康点数，跟路径长度无关，因此广搜不适合。最后只剩下了动规这个方向。\n先定义状态，f[i][j]表示进入(i,j)这个格子前所需要的最小健康点数。\n再考虑状态的初始值，我们发现右下角那个坐标才是初始值，起点f[0][0]反而不知道，于是大致可以知道，这题是从右下角向左上角来填表。右下角格子，如果该格子的值为负数，那么进入这个格子前骑士需要的健康点数是-dungeon[i][j]+1，即初始值f[i][j]=-dungeon[i][j]+1，如果格子的值是非负数，那么初始值f[i][j]=1。\n接下来寻找状态转移方程。从初始值我们可以推测出状态转移是从右下角反向的，可以得到状态转移方程如下：\nf[i][j]=max(1, -dungeon[i][j]+min(f[i+1][j],f[i][j+1])\n代码\n\n// Dungeon Game\n// Time Complexity: O(mxn), Space Complexity: O(mxn)\npublic class Solution {\n    public int calculateMinimumHP(int[][] dungeon) {\n        final int m = dungeon.length;\n        final int n = dungeon[0].length;\n        if (m == 0 || n == 0) return 0;\n\n        final int[][] f = new int[m][n];\n        f[m-1][n-1] = Math.max(1, -dungeon[m-1][n-1]+1);\n\n        for (int i = m - 2; i >= 0; --i) {\n            f[i][n-1] = Math.max(1, -dungeon[i][n-1] + f[i+1][n-1]);\n        }\n        for (int j = n - 2; j >= 0; --j) {\n            f[m-1][j] = Math.max(1, -dungeon[m-1][j] + f[m-1][j+1]);\n        }\n\n        for (int i = m - 2; i >= 0; --i) {\n            for (int j = n - 2; j >= 0; --j) {\n                f[i][j] = Math.max(1, -dungeon[i][j] + Math.min(f[i+1][j], f[i][j+1]));\n            }\n        }\n        return f[0][0];\n    }\n}\n\n"},"动态规划/140. 单词拆分 II.html":{"url":"动态规划/140. 单词拆分 II.html","title":"140. 单词拆分 II","keywords":"","body":"140. 单词拆分 II\n给定一个非空字符串 s 和一个包含非空单词列表的字典 wordDict，在字符串中增加空格来构建一个句子，使得句子中所有的单词都在词典中。返回所有这些可能的句子。\n\n说明：\n\n分隔时可以重复使用字典中的单词。\n你可以假设字典中没有重复的单词。\n示例 1：\n\n输入:\ns = \"catsanddog\"\nwordDict = [\"cat\", \"cats\", \"and\", \"sand\", \"dog\"]\n输出:\n[\n  \"cats and dog\",\n  \"cat sand dog\"\n]\n示例 2：\n\n输入:\ns = \"pineapplepenapple\"\nwordDict = [\"apple\", \"pen\", \"applepen\", \"pine\", \"pineapple\"]\n输出:\n[\n  \"pine apple pen apple\",\n  \"pineapple pen apple\",\n  \"pine applepen apple\"\n]\n解释: 注意你可以重复使用字典中的单词。\n示例 3：\n\n输入:\ns = \"catsandog\"\nwordDict = [\"cats\", \"dog\", \"sand\", \"and\", \"cat\"]\n输出:\n[]\n代码\nclass Solution {\n    public List wordBreak(String s, List wordDict) {\n        // 为了防止在一些测试用例上超时，首先复用139题的代码来判断结果是否存在\n        if (!wordBreakI(s, wordDict)) return new LinkedList<>();\n\n        List[] dp = new List[s.length() + 1];\n        dp[0] = new LinkedList<>();\n        dp[0].add(\"\");\n\n        int maxLength = -1;\n        for (String str: wordDict) maxLength = Math.max(maxLength, str.length());\n\n        for (int i = 1; i ();\n                    for (String str: dp[j]) {\n                        dp[i].add(str + (str == \"\" ? \"\" : \" \") + s.substring(j, i));\n                    }\n                }\n            }\n        }\n\n        return dp[s.length()] == null ? new LinkedList(): dp[s.length()];\n    }\n\n    public boolean wordBreakI(String s, List wordDict) {\n\n        boolean[] dp = new boolean[s.length() + 1];\n        dp[0] = true;\n\n        int maxLength = -1;\n        for (String ele: wordDict) {\n            maxLength = Math.max(maxLength, ele.length());\n        }\n\n        for (int i = 1; i \n"},"动态规划/123. 买卖股票的最佳时机 III.html":{"url":"动态规划/123. 买卖股票的最佳时机 III.html","title":"123. 买卖股票的最佳时机 III","keywords":"","body":"123. 买卖股票的最佳时机 III\n```给定一个数组，它的第 i 个元素是一支给定的股票在第 i 天的价格。\n设计一个算法来计算你所能获取的最大利润。你最多可以完成 两笔 交易。\n注意: 你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。\n示例 1:\n输入: [3,3,5,0,0,3,1,4]\n输出: 6\n解释: 在第 4 天（股票价格 = 0）的时候买入，在第 6 天（股票价格 = 3）的时候卖出，这笔交易所能获得利润 = 3-0 = 3 。\n     随后，在第 7 天（股票价格 = 1）的时候买入，在第 8 天 （股票价格 = 4）的时候卖出，这笔交易所能获得利润 = 4-1 = 3 。\n示例 2:\n输入: [1,2,3,4,5]\n输出: 4\n解释: 在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。     注意你不能在第 1 天和第 2 天接连购买股票，之后再将它们卖出。     因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。\n示例 3:\n输入: [7,6,4,3,1] \n输出: 0 \n解释: 在这个情况下, 没有交易完成, 所以最大利润为 0。\n\n## 思路\n在121题的基础上进行扩展。定义sold1和hold1，分别代表第一次卖出后和第一次买入后获得的利润，而sold2和hold2分别代表第二次卖出后和第二次买入后获得的利润。sold1与hold1的变迁公式与121题一致。第二次卖出状态可以由第二次卖出状态或者第二次买入状态变迁得来。第二次买入状态可以由第二次买入状态或者第一次卖出状态变迁得来。\n\n## 代码\n\n```java\n\nclass Solution {\n    public int maxProfit(int[] prices) {\n        int sold1 = 0, hold1 = Integer.MIN_VALUE;\n        int sold2 = 0, hold2 = Integer.MIN_VALUE;\n\n        for (int i = 0; i "},"动态规划/940. 不同的子序列 II.html":{"url":"动态规划/940. 不同的子序列 II.html","title":"940. 不同的子序列 II","keywords":"","body":"940. 不同的子序列 II\n给定一个字符串 S，计算 S 的不同非空子序列的个数。\n\n因为结果可能很大，所以返回答案模 10^9 + 7.\n\n\n\n示例 1：\n\n输入：\"abc\"\n输出：7\n解释：7 个不同的子序列分别是 \"a\", \"b\", \"c\", \"ab\", \"ac\", \"bc\", 以及 \"abc\"。\n示例 2：\n\n输入：\"aba\"\n输出：6\n解释：6 个不同的子序列分别是 \"a\", \"b\", \"ab\", \"ba\", \"aa\" 以及 \"aba\"。\n示例 3：\n\n输入：\"aaa\"\n输出：3\n解释：3 个不同的子序列分别是 \"a\", \"aa\" 以及 \"aaa\"。\n\n\n\n\n提示：\n\nS 只包含小写字母。\n1 代码\nclass Solution {\n    public int distinctSubseqII(String S) {\n        int MOD = (int)1e9 + 7;\n        int N = S.length();\n        int[] dp = new int[N+1];\n        dp[0] = 1;\n        int[] last = new int[26];\n        Arrays.fill(last, -1);\n        for (int i = 0; i = 0)\n                dp[i+1] -= dp[last[x]];\n            dp[i+1] %= MOD;\n            last[x] = i;\n        }\n        dp[N]--;\n        if (dp[N] \n"},"动态规划/139. 单词拆分.html":{"url":"动态规划/139. 单词拆分.html","title":"139. 单词拆分","keywords":"","body":"139. 单词拆分\n给定一个非空字符串 s 和一个包含非空单词列表的字典 wordDict，判定 s 是否可以被空格拆分为一个或多个在字典中出现的单词。\n\n说明：\n\n拆分时可以重复使用字典中的单词。\n你可以假设字典中没有重复的单词。\n示例 1：\n\n输入: s = \"leetcode\", wordDict = [\"leet\", \"code\"]\n输出: true\n解释: 返回 true 因为 \"leetcode\" 可以被拆分成 \"leet code\"。\n示例 2：\n\n输入: s = \"applepenapple\", wordDict = [\"apple\", \"pen\"]\n输出: true\n解释: 返回 true 因为 \"applepenapple\" 可以被拆分成 \"apple pen apple\"。\n     注意你可以重复使用字典中的单词。\n示例 3：\n\n输入: s = \"catsandog\", wordDict = [\"cats\", \"dog\", \"sand\", \"and\", \"cat\"]\n输出: false\n代码\nclass Solution {\n    public boolean wordBreak(String s, List wordDict) {\n\n        boolean[] dp = new boolean[s.length() + 1];\n        dp[0] = true;\n\n        // 计算wordDict中最长单词的长度\n        int maxLength = -1;\n        for (String ele: wordDict) {\n            maxLength = Math.max(maxLength, ele.length());\n        }\n\n        for (int i = 1; i \n"},"动态规划/309. 最佳买卖股票时机含冷冻期.html":{"url":"动态规划/309. 最佳买卖股票时机含冷冻期.html","title":"309. 最佳买卖股票时机含冷冻期","keywords":"","body":"309. 最佳买卖股票时机含冷冻期\n给定一个整数数组，其中第 i 个元素代表了第 i 天的股票价格 。​\n\n设计一个算法计算出最大利润。在满足以下约束条件下，你可以尽可能地完成更多的交易（多次买卖一支股票）:\n\n你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。\n卖出股票后，你无法在第二天买入股票 (即冷冻期为 1 天)。\n示例:\n\n输入: [1,2,3,0,2]\n输出: 3 \n解释: 对应的交易状态为: [买入, 卖出, 冷冻期, 买入, 卖出]\n思路\n定义三个变量sold, rest, hold，分别代表当前处于卖出状态时获得的利润，当前处于休息状态时的利润，当前处于买入状态时获得的利润。卖出状态只能从买入状态变迁得来。买入状态可以从买入状态或者休息状态变迁得来。休息状态可以从休息状态或者卖出状态变迁得来。初始时sold和rest都为0，hold为负无穷。最后返回sold和rest中的最大值。\n代码\nclass Solution {\n    public int maxProfit(int[] prices) {\n        int sold = 0, rest = 0, hold = Integer.MIN_VALUE;\n\n\n        for (int i = 0; i \n"},"动态规划/91. 解码方法.html":{"url":"动态规划/91. 解码方法.html","title":"91. 解码方法","keywords":"","body":"91. 解码方法\n一条包含字母 A-Z 的消息通过以下方式进行了编码：\n\n'A' -> 1\n'B' -> 2\n...\n'Z' -> 26\n给定一个只包含数字的非空字符串，请计算解码方法的总数。\n\n示例 1:\n\n输入: \"12\"\n输出: 2\n解释: 它可以解码为 \"AB\"（1 2）或者 \"L\"（12）。\n示例 2:\n\n输入: \"226\"\n输出: 3\n解释: 它可以解码为 \"BZ\" (2 26), \"VF\" (22 6), 或者 \"BBF\" (2 2 6) 。\n代码（DP）\nclass Solution {\n    public int numDecodings(String s) {\n        if (s.length() == 0 || s.charAt(0) == '0') return 0;\n\n        int dp0 = 1, dp1 = 1;\n        for (int i = 1; i \n"},"动态规划/115. 不同的子序列.html":{"url":"动态规划/115. 不同的子序列.html","title":"115. 不同的子序列","keywords":"","body":"115. 不同的子序列\n给定一个字符串 S 和一个字符串 T，计算在 S 的子序列中 T 出现的个数。\n\n一个字符串的一个子序列是指，通过删除一些（也可以不删除）字符且不干扰剩余字符相对位置所组成的新字符串。（例如，\"ACE\" 是 \"ABCDE\" 的一个子序列，而 \"AEC\" 不是）\n\n示例 1:\n\n输入: S = \"rabbbit\", T = \"rabbit\"\n输出: 3\n解释:\n\n如下图所示, 有 3 种可以从 S 中得到 \"rabbit\" 的方案。\n(上箭头符号 ^ 表示选取的字母)\n\nrabbbit\n^^^^ ^^\nrabbbit\n^^ ^^^^\nrabbbit\n^^^ ^^^\n示例 2:\n\n输入: S = \"babgbag\", T = \"bag\"\n输出: 5\n解释:\n\n如下图所示, 有 5 种可以从 S 中得到 \"bag\" 的方案。 \n(上箭头符号 ^ 表示选取的字母)\n\nbabgbag\n^^ ^\nbabgbag\n^^    ^\nbabgbag\n^    ^^\nbabgbag\n  ^  ^^\nbabgbag\n    ^^^\n代码1（DP）\nclass Solution {\n    public int numDistinct(String s, String t) {\n        // dp[i][j]表示s长度为i的前缀的子序列中t的长度为j的前缀出现的次数\n\n        int[][] dp = new int[s.length() + 1][t.length() + 1];\n        for (int i = 0; i \n代码2 （优化为一维数组）\n\nclass Solution {\n    public int numDistinct(String s, String t) {\n        int[] dp = new int[t.length() + 1];\n        dp[0] = 1;\n        for (int i = 1; i = 1; j--) {\n                if (s.charAt(i - 1) == t.charAt(j - 1)) dp[j] += dp[j - 1];\n            }\n        }\n        return dp[t.length()];\n    }\n}\n\n"},"动态规划/337. 打家劫舍 III.html":{"url":"动态规划/337. 打家劫舍 III.html","title":"337. 打家劫舍 III","keywords":"","body":"337. 打家劫舍 III\n在上次打劫完一条街道之后和一圈房屋后，小偷又发现了一个新的可行窃的地区。这个地区只有一个入口，我们称之为“根”。 除了“根”之外，每栋房子有且只有一个“父“房子与之相连。一番侦察之后，聪明的小偷意识到“这个地方的所有房屋的排列类似于一棵二叉树”。 如果两个直接相连的房子在同一天晚上被打劫，房屋将自动报警。\n\n计算在不触动警报的情况下，小偷一晚能够盗取的最高金额。\n\n示例 1:\n\n输入: [3,2,3,null,3,null,1]\n\n     3\n    / \\\n   2   3\n    \\   \\ \n     3   1\n\n输出: 7 \n解释: 小偷一晚能够盗取的最高金额 = 3 + 3 + 1 = 7.\n示例 2:\n\n输入: [3,4,5,1,3,null,1]\n\n     3\n    / \\\n   4   5\n  / \\   \\ \n 1   3   1\n\n输出: 9\n解释: 小偷一晚能够盗取的最高金额 = 4 + 5 = 9.\n思路\n一道典型的树状DP的题。\n每个节点保存的状态是以当前节点为根节点的子树所能获得的最大值，具体分为包含当前节点和不包含当前节点这两种情况。\n用自底向上的方法遍历整棵树。对于每一个节点，包含该节点的状态值为该节点值加上两个子节点不包含自身的状态值，而不包含该节点的状态值为两个子节点包含自身的状态值之和。\n代码\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public int rob(TreeNode root) {\n        int[] res = dp(root);\n        return Math.max(res[0], res[1]);\n    }\n\n    public int[] dp(TreeNode root) {\n        if (root == null) {\n            return new int[]{0, 0};\n        }\n\n        int[] left = dp(root.left);\n        int[] right = dp(root.right);\n\n        return new int[]{Math.max(left[0], left[1]) + Math.max(right[0], right[1]), \n                         root.val + left[0] + right[0]};\n    }\n\n}\n\n"},"数论/264. 丑数 II.html":{"url":"数论/264. 丑数 II.html","title":"264. 丑数 II","keywords":"","body":"264. 丑数 II\n代码1\nclass Solution {\n    public int nthUglyNumber(int n) {\n        PriorityQueue pq = new PriorityQueue<>();\n        pq.add(Long.valueOf(1));\n        long top = -1;\n        for (int i = 0; i \n代码2（三指针法）\nclass Solution {\n    public int nthUglyNumber(int n) {\n        int[] num = new int[n];\n        num[0] = 1;\n\n        int i = 0, j = 0, k = 0, index = 0;\n        while (index \n"},"数论/347. 前 K 个高频元素.html":{"url":"数论/347. 前 K 个高频元素.html","title":"347. 前 K 个高频元素","keywords":"","body":"347. 前 K 个高频元素\n给定一个非空的整数数组，返回其中出现频率前 k 高的元素。\n\n示例 1:\n\n输入: nums = [1,1,1,2,2,3], k = 2\n输出: [1,2]\n示例 2:\n\n输入: nums = [1], k = 1\n输出: [1]\n说明：\n\n你可以假设给定的 k 总是合理的，且 1 ≤ k ≤ 数组中不相同的元素的个数。\n你的算法的时间复杂度必须优于 O(n log n) , n 是数组的大小。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/top-k-frequent-elements\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass Solution {\n    public List topKFrequent(int[] nums, int k) {\n        Map map = new HashMap<>();\n\n        for (int i = 0; i > pq = new PriorityQueue<>((e1, e2) -> {\n            return e2.getValue() - e1.getValue();\n        });\n\n        for (Map.Entry entry: map.entrySet()) {\n            pq.add(entry);\n        }\n\n        List res = new ArrayList<>();\n        while (k-- > 0) {\n            res.add(pq.poll().getKey());\n        }\n        return res;\n    }\n}\n\n"},"数论/355. 设计推特.html":{"url":"数论/355. 设计推特.html","title":"355. 设计推特","keywords":"","body":"355. 设计推特\n设计一个简化版的推特(Twitter)，可以让用户实现发送推文，关注/取消关注其他用户，能够看见关注人（包括自己）的最近十条推文。你的设计需要支持以下的几个功能：\n\npostTweet(userId, tweetId): 创建一条新的推文\ngetNewsFeed(userId): 检索最近的十条推文。每个推文都必须是由此用户关注的人或者是用户自己发出的。推文必须按照时间顺序由最近的开始排序。\nfollow(followerId, followeeId): 关注一个用户\nunfollow(followerId, followeeId): 取消关注一个用户\n示例:\n\nTwitter twitter = new Twitter();\n\n// 用户1发送了一条新推文 (用户id = 1, 推文id = 5).\ntwitter.postTweet(1, 5);\n\n// 用户1的获取推文应当返回一个列表，其中包含一个id为5的推文.\ntwitter.getNewsFeed(1);\n\n// 用户1关注了用户2.\ntwitter.follow(1, 2);\n\n// 用户2发送了一个新推文 (推文id = 6).\ntwitter.postTweet(2, 6);\n\n// 用户1的获取推文应当返回一个列表，其中包含两个推文，id分别为 -> [6, 5].\n// 推文id6应当在推文id5之前，因为它是在5之后发送的.\ntwitter.getNewsFeed(1);\n\n// 用户1取消关注了用户2.\ntwitter.unfollow(1, 2);\n\n// 用户1的获取推文应当返回一个列表，其中包含一个id为5的推文.\n// 因为用户1已经不再关注用户2.\ntwitter.getNewsFeed(1);\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/design-twitter\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass Twitter {\n    class Node {\n        int tweetId;\n        int time;\n        Node next;\n\n        public Node(int tweetId, int time) {\n            this.tweetId = tweetId;\n            this.time = time;\n        }\n    }\n\n    private Map tweet;\n    private Map> followSet;\n    private int currentTime;\n\n    /** Initialize your data structure here. */\n    public Twitter() {\n        tweet = new HashMap<>();\n        followSet = new HashMap<>();\n        currentTime = 0;\n    }\n\n    /** Compose a new tweet. */\n    public void postTweet(int userId, int tweetId) {\n        if (!tweet.containsKey(userId)) tweet.put(userId, new Node(tweetId, currentTime++));  \n        else {\n            Node node = new Node(tweetId, currentTime++);\n            node.next = tweet.get(userId);\n            tweet.put(userId, node);\n        }\n    }\n\n    /** Retrieve the 10 most recent tweet ids in the user's news feed. Each item in the news feed must be posted by users who the user followed or by the user herself. Tweets must be ordered from most recent to least recent. */\n    public List getNewsFeed(int userId) {\n        PriorityQueue pq = new PriorityQueue<>((n1, n2) -> {\n            return n2.time - n1.time;\n        });\n\n        if (tweet.containsKey(userId)) pq.add(tweet.get(userId));\n\n        if (followSet.containsKey(userId)) {\n            Iterator ite = followSet.get(userId).iterator();\n            while (ite.hasNext()) {\n                int followeeId = ite.next();\n                if (tweet.containsKey(followeeId)) pq.add(tweet.get(followeeId));\n            }\n        }\n\n        List ret = new ArrayList<>();\n        while (!pq.isEmpty() && ret.size() ());\n        followSet.get(followerId).add(followeeId);        \n    }\n\n    /** Follower unfollows a followee. If the operation is invalid, it should be a no-op. */\n    public void unfollow(int followerId, int followeeId) {\n        if (followerId == followeeId) return;\n        if (followSet.containsKey(followerId) && followSet.get(followerId).contains(followeeId)) followSet.get(followerId).remove(followeeId);\n    }\n}\n\n/**\n * Your Twitter object will be instantiated and called as such:\n * Twitter obj = new Twitter();\n * obj.postTweet(userId,tweetId);\n * List param_2 = obj.getNewsFeed(userId);\n * obj.follow(followerId,followeeId);\n * obj.unfollow(followerId,followeeId);\n */\n\n"},"数论/166. 分数到小数.html":{"url":"数论/166. 分数到小数.html","title":"166. 分数到小数","keywords":"","body":"166. 分数到小数\n给定两个整数，分别表示分数的分子 numerator 和分母 denominator，以字符串形式返回小数。\n\n如果小数部分为循环小数，则将循环的部分括在括号内。\n\n示例 1:\n\n输入: numerator = 1, denominator = 2\n输出: \"0.5\"\n示例 2:\n\n输入: numerator = 2, denominator = 1\n输出: \"2\"\n示例 3:\n\n输入: numerator = 2, denominator = 3\n输出: \"0.(6)\"\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/fraction-to-recurring-decimal\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass Solution {\n\n    public String fractionToDecimal(int a, int b) {\n        long numerator = Long.valueOf(a);\n        long denominator = Long.valueOf(b);\n\n        if (numerator == 0) return \"0\";\n        StringBuilder res = new StringBuilder();\n        if (numerator  0 || numerator > 0 && denominator  map = new HashMap<>();\n            map.put(numerator, res.length());\n\n            while (numerator != 0) {\n\n                long reminder = (numerator * 10) % denominator;\n                if (map.containsKey(reminder)) {\n                    res.insert(map.get(reminder), \"(\");\n                    res.append((numerator * 10) / denominator);\n                    res.append(\")\");\n                    return res.toString();\n                }\n\n                long divisor = (numerator * 10) / denominator;\n                res.append(String.valueOf(divisor));\n\n                map.put(reminder, res.length());\n                numerator = reminder;\n            }\n            return res.toString();\n        }\n    }\n}\n\n"},"数论/373. 查找和最小的K对数字.html":{"url":"数论/373. 查找和最小的K对数字.html","title":"373. 查找和最小的K对数字","keywords":"","body":"373. 查找和最小的K对数字\n给定两个以升序排列的整形数组 nums1 和 nums2, 以及一个整数 k。\n\n定义一对值 (u,v)，其中第一个元素来自 nums1，第二个元素来自 nums2。\n\n找到和最小的 k 对数字 (u1,v1), (u2,v2) ... (uk,vk)。\n\n示例 1:\n\n输入: nums1 = [1,7,11], nums2 = [2,4,6], k = 3\n输出: [1,2],[1,4],[1,6]\n解释: 返回序列中的前 3 对数：\n     [1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]\n示例 2:\n\n输入: nums1 = [1,1,2], nums2 = [1,2,3], k = 2\n输出: [1,1],[1,1]\n解释: 返回序列中的前 2 对数：\n     [1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]\n示例 3:\n\n输入: nums1 = [1,2], nums2 = [3], k = 3 \n输出: [1,3],[2,3]\n解释: 也可能序列中所有的数对都被返回:[1,3],[2,3]\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/find-k-pairs-with-smallest-sums\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass Solution {\n    class Node {\n        int index1, num1, index2, num2;\n\n        public Node(int index1, int num1, int index2, int num2) {\n            this.index1 = index1;\n            this.num1 = num1;\n            this.index2 = index2;\n            this.num2 = num2;\n        }\n    }\n\n    public List> kSmallestPairs(int[] nums1, int[] nums2, int k) {\n        if (nums1.length == 0 || nums2.length == 0) return new ArrayList<>();\n\n        PriorityQueue pq = new PriorityQueue<>((n1, n2) -> {\n            return n1.num1 + n1.num2 - n2.num1 - n2.num2;\n        });\n        pq.add(new Node(0, nums1[0], 0, nums2[0]));\n        Set set = new HashSet<>();\n\n        int index1 = 0, index2 = 0;\n        List> ret = new ArrayList<>();\n\n        while (!pq.isEmpty() && ret.size() \n"},"数论/202. 快乐数.html":{"url":"数论/202. 快乐数.html","title":"202. 快乐数","keywords":"","body":"202. 快乐数\n编写一个算法来判断一个数是不是“快乐数”。\n\n一个“快乐数”定义为：对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和，然后重复这个过程直到这个数变为 1，也可能是无限循环但始终变不到 1。如果可以变为 1，那么这个数就是快乐数。\n\n示例: \n\n输入: 19\n输出: true\n解释: \n12 + 92 = 82\n82 + 22 = 68\n62 + 82 = 100\n12 + 02 + 02 = 1\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/happy-number\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass Solution {\n    public boolean isHappy(int n) {\n        int slow = n, fast = n;\n\n        // 用快慢指针找到循环的入口\n        while (true) {\n            slow = next(slow);\n            fast = next(next(fast));\n            if (slow == fast) return slow == 1;\n        }\n    }\n\n    int next(int n) {\n        int sum = 0;\n        while (n != 0) {\n            int num = n % 10;\n            sum += num * num;\n            n /= 10;\n        }\n\n        return sum;\n    }\n}\n\n"},"数论/172. 阶乘后的零.html":{"url":"数论/172. 阶乘后的零.html","title":"172. 阶乘后的零","keywords":"","body":"172. 阶乘后的零\n给定一个整数 n，返回 n! 结果尾数中零的数量。\n\n示例 1:\n\n输入: 3\n输出: 0\n解释: 3! = 6, 尾数中没有零。\n示例 2:\n\n输入: 5\n输出: 1\n解释: 5! = 120, 尾数中有 1 个零.\n说明: 你算法的时间复杂度应为 O(log n) 。\n\n来源：力扣（LeetCode）\n链接：https://dev.lingkou.xyz/problems/factorial-trailing-zeroes\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n思路\nn!中有多少个0，取决于n!中一共有多少个质因数2和5，由于2的个数一定大于5，所以最终取决于有多少个5。\n代码\n// Factorial Trailing Zeroes\n// Time Complexity: O(logn), Space Complexity: O(1)\npublic class Solution {\n    public int trailingZeroes(int n) {\n        int result = 0;\n\n        while (n > 0) {\n            result += n / 5;\n            n /= 5;\n        }\n        return result;\n    }\n}\n\n"},"数论/313. 超级丑数.html":{"url":"数论/313. 超级丑数.html","title":"313. 超级丑数","keywords":"","body":"313. 超级丑数\n编写一段程序来查找第 n 个超级丑数。\n\n超级丑数是指其所有质因数都是长度为 k 的质数列表 primes 中的正整数。\n\n示例:\n\n输入: n = 12, primes = [2,7,13,19]\n输出: 32 \n解释: 给定长度为 4 的质数列表 primes = [2,7,13,19]，前 12 个超级丑数序列为：[1,2,4,7,8,13,14,16,19,26,28,32] 。\n说明:\n\n1 是任何给定 primes 的超级丑数。\n 给定 primes 中的数字以升序排列。\n0 代码\nclass Solution {\n    public int nthSuperUglyNumber(int n, int[] primes) {\n        int[] num = new int[n + 1];\n        num[0] = 1;\n        int[] pIndex = new int[primes.length];\n        int index = 0;\n        for (int i = 0; i \n"},"数论/292. Nim 游戏.html":{"url":"数论/292. Nim 游戏.html","title":"292. Nim 游戏","keywords":"","body":"292. Nim 游戏\n你和你的朋友，两个人一起玩 Nim 游戏：桌子上有一堆石头，每次你们轮流拿掉 1 - 3 块石头。 拿掉最后一块石头的人就是获胜者。你作为先手。\n\n你们是聪明人，每一步都是最优解。 编写一个函数，来判断你是否可以在给定石头数量的情况下赢得游戏。\n\n示例:\n\n输入: 4\n输出: false \n解释: 如果堆中有 4 块石头，那么你永远不会赢得比赛；\n     因为无论你拿走 1 块、2 块 还是 3 块石头，最后一块石头总是会被你的朋友拿走。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/nim-game\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n思路\n可以先用动态规划发现规律，然后优化成一条表达式。\n"},"位运算/89. 格雷编码.html":{"url":"位运算/89. 格雷编码.html","title":"89. 格雷编码","keywords":"","body":"89. 格雷编码\n格雷编码是一个二进制数字系统，在该系统中，两个连续的数值仅有一个位数的差异。\n\n给定一个代表编码总位数的非负整数 n，打印其格雷编码序列。格雷编码序列必须以 0 开头。\n\n示例 1:\n\n输入: 2\n输出: [0,1,3,2]\n解释:\n00 - 0\n01 - 1\n11 - 3\n10 - 2\n\n对于给定的 n，其格雷编码序列并不唯一。\n例如，[0,2,3,1] 也是一个有效的格雷编码序列。\n\n00 - 0\n10 - 2\n11 - 3\n01 - 1\n示例 2:\n\n输入: 0\n输出: [0]\n解释: 我们定义格雷编码序列必须以 0 开头。\n     给定编码总位数为 n 的格雷编码序列，其长度为 2n。当 n = 0 时，长度为 20 = 1。\n     因此，当 n = 0 时，其格雷编码序列为 [0]。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/gray-code\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n思路1\n找规律：\n位数为2时的格雷码为：\n0 -> 00\n1 -> 01\n3 -> 11\n2 -> 10\n当位数为3时，在所有位数为2的格雷码前添加一个0并不会破坏两个连续的数值仅有一个位数的差异这条规则，而且其值保持不变，如下：\n0 -> 000\n1 -> 001\n3 -> 011\n2 -> 010\n然后考虑在原有位数为2的格雷码前添加1，可以看到按照原有顺序添加1后第一个值100与添加0后的最后一个值010之间并不连续。但是注意到格雷码反转后其两个连续数值依然仅有一个位数的差异，同时在10前添加1后的110与010是连续的。所以可以将原有位数为2的格雷码反转后在前面添加一个1，然后拼接到之前添加0后的格雷码后面。这样位数为3的格雷码就形成了，同时前1/2个格雷码与位数为2的格雷码相同。\n代码1\n\nclass Solution {\n    public List grayCode(int n) {\n        ArrayList ret = new ArrayList<>();\n        ret.add(0);\n        for (int i = 0; i = 0; j--) {\n                ret.add(ret.get(j) + p);\n            }\n        }\n        return ret;\n    }\n}\n\n代码2（公式法）\nclass Solution {\n    public List grayCode(int n) {\n        List ret = new ArrayList<>();\n        for (int i = 0; i > 1);\n        return ret;\n    }\n}\n\n"},"位运算/201. 数字范围按位与.html":{"url":"位运算/201. 数字范围按位与.html","title":"201. 数字范围按位与","keywords":"","body":"201. 数字范围按位与\n给定范围 [m, n]，其中 0 代码\nclass Solution {\n    public int rangeBitwiseAnd(int m, int n) {\n        int offset = 0;\n        while (m != n) {\n            m >>= 1;\n            n >>= 1;\n            offset++;\n        }\n\n        m \n"},"位运算/52. N皇后 II.html":{"url":"位运算/52. N皇后 II.html","title":"52. N皇后 II","keywords":"","body":"52. N皇后 II\nn 皇后问题研究的是如何将 n 个皇后放置在 n×n 的棋盘上，并且使皇后彼此之间不能相互攻击。\n\n\n\n上图为 8 皇后问题的一种解法。\n\n给定一个整数 n，返回 n 皇后不同的解决方案的数量。\n\n示例:\n\n输入: 4\n输出: 2\n解释: 4 皇后问题存在如下两个不同的解法。\n[\n [\".Q..\",  // 解法 1\n  \"...Q\",\n  \"Q...\",\n  \"..Q.\"],\n\n [\"..Q.\",  // 解法 2\n  \"Q...\",\n  \"...Q\",\n  \".Q..\"]\n]\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/n-queens-ii\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass Solution {\n    public int sum = 0;\n\n    public int totalNQueens(int n) {\n        dfs(0, 0, 0, (1 > 1, (ld + p) \n"},"位运算/51. N皇后.html":{"url":"位运算/51. N皇后.html","title":"51. N皇后","keywords":"","body":"51. N皇后\nn 皇后问题研究的是如何将 n 个皇后放置在 n×n 的棋盘上，并且使皇后彼此之间不能相互攻击。\n\n\n\n上图为 8 皇后问题的一种解法。\n\n给定一个整数 n，返回所有不同的 n 皇后问题的解决方案。\n\n每一种解法包含一个明确的 n 皇后问题的棋子放置方案，该方案中 'Q' 和 '.' 分别代表了皇后和空位。\n\n示例:\n\n输入: 4\n输出: [\n [\".Q..\",  // 解法 1\n  \"...Q\",\n  \"Q...\",\n  \"..Q.\"],\n\n [\"..Q.\",  // 解法 2\n  \"Q...\",\n  \"...Q\",\n  \".Q..\"]\n]\n解释: 4 皇后问题存在两个不同的解法。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/n-queens\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass Solution {\n    private List> res = new LinkedList<>();\n\n    public List> solveNQueens(int n) {\n        ArrayList arr = new ArrayList<>();\n        for (int i = 0; i  arr) {\n        // 所有行都有一个有效的皇后，解法增1\n        if (row == upperLim) {\n            // 一定要在res中添加新创建的arrayList\n            res.add(new ArrayList(arr));\n            return;\n        }\n\n        // 计算当前行还可以放置皇后的位置\n        int pos = upperLim & ~(row | rd | ld);\n\n        while (pos != 0) {\n            // 计算pos最靠右的1的位置\n            int p = pos & (~pos + 1);\n            pos -= p;\n            arr.set(countOnes(row), rowStr(p, arr.size()));\n            dfs(row + p, (rd + p) >> 1, (ld + p) >= 1;\n    //     }\n\n    //     return sum;\n    // }\n\n    // 为了求整型n中1的个数，可以采用分而治之的方法\n    // 第一行首先计算n中相邻2位的和，由于相邻两位的和最大也只为2（即只占用2个比特位），因此相邻两位的计算结果可以存储在本地（即当前两个比特位中），不会影响其他比特位。\n    // 0x55555555的二进制为：01010101010101010101010101010101，也即01互相间隔。n和0x55555555的与结果加上n右移一位后和0x55555555的与结果正是n中相邻两位的和\n    //接着继续计算n中相邻4位的和，8位的和。。。直到相邻32位的和\n    private int countOnes(int n) {\n        n = (n & 0x55555555) + ((n >> 1) & 0x55555555);\n        n = (n & 0x33333333) + ((n >> 2) & 0x33333333);\n        n = (n & 0x0f0f0f0f) + ((n >> 4) & 0x0f0f0f0f);\n        n = (n & 0x00ff00ff) + ((n >> 8) & 0x00ff00ff);\n        n = (n & 0x0000ffff) + ((n >> 16) & 0x0000ffff);\n        return n;\n    }\n\n    private String rowStr(int p, int n) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i >= 1;\n        }\n\n        return sb.toString();\n    }\n}\n\n"},"位运算/1275. 找出井字棋的获胜者.html":{"url":"位运算/1275. 找出井字棋的获胜者.html","title":"1275. 找出井字棋的获胜者","keywords":"","body":"1275. 找出井字棋的获胜者\nA 和 B 在一个 3 x 3 的网格上玩井字棋。\n\n井字棋游戏的规则如下：\n\n玩家轮流将棋子放在空方格 (\" \") 上。\n第一个玩家 A 总是用 \"X\" 作为棋子，而第二个玩家 B 总是用 \"O\" 作为棋子。\n\"X\" 和 \"O\" 只能放在空方格中，而不能放在已经被占用的方格上。\n只要有 3 个相同的（非空）棋子排成一条直线（行、列、对角线）时，游戏结束。\n如果所有方块都放满棋子（不为空），游戏也会结束。\n游戏结束后，棋子无法再进行任何移动。\n给你一个数组 moves，其中每个元素是大小为 2 的另一个数组（元素分别对应网格的行和列），它按照 A 和 B 的行动顺序（先 A 后 B）记录了两人各自的棋子位置。\n\n如果游戏存在获胜者（A 或 B），就返回该游戏的获胜者；如果游戏以平局结束，则返回 \"Draw\"；如果仍会有行动（游戏未结束），则返回 \"Pending\"。\n\n你可以假设 moves 都 有效（遵循井字棋规则），网格最初是空的，A 将先行动。\n\n\n\n示例 1：\n\n输入：moves = [[0,0],[2,0],[1,1],[2,1],[2,2]]\n输出：\"A\"\n解释：\"A\" 获胜，他总是先走。\n\"X  \"    \"X  \"    \"X  \"    \"X  \"    \"X  \"\n\"   \" -> \"   \" -> \" X \" -> \" X \" -> \" X \"\n\"   \"    \"O  \"    \"O  \"    \"OO \"    \"OOX\"\n示例 2：\n\n输入：moves = [[0,0],[1,1],[0,1],[0,2],[1,0],[2,0]]\n输出：\"B\"\n解释：\"B\" 获胜。\n\"X  \"    \"X  \"    \"XX \"    \"XXO\"    \"XXO\"    \"XXO\"\n\"   \" -> \" O \" -> \" O \" -> \" O \" -> \"XO \" -> \"XO \" \n\"   \"    \"   \"    \"   \"    \"   \"    \"   \"    \"O  \"\n示例 3：\n\n输入：moves = [[0,0],[1,1],[2,0],[1,0],[1,2],[2,1],[0,1],[0,2],[2,2]]\n输出：\"Draw\"\n输出：由于没有办法再行动，游戏以平局结束。\n\"XXO\"\n\"OOX\"\n\"XOX\"\n示例 4：\n\n输入：moves = [[0,0],[1,1]]\n输出：\"Pending\"\n解释：游戏还没有结束。\n\"X  \"\n\" O \"\n\"   \"\n\n\n提示：\n\n1 代码\nclass Solution {\n    public String tictactoe(int[][] moves) {\n        int[] win = new int[]{448, 56, 7, 292, 146, 73, 273, 84};\n\n        int a = 0, b = 0;\n        for (int i = 0; i \n"},"位运算/137. 只出现一次的数字 II.html":{"url":"位运算/137. 只出现一次的数字 II.html","title":"137. 只出现一次的数字 II","keywords":"","body":"137. 只出现一次的数字 II\n给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现了三次。找出那个只出现了一次的元素。\n\n说明：\n\n你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？\n\n示例 1:\n\n输入: [2,2,3,2]\n输出: 3\n示例 2:\n\n输入: [0,1,0,1,0,1,99]\n输出: 99\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/single-number-ii\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass Solution {\n    public int singleNumber(int[] nums) {\n        int one = 0, two = 0, three = 0;\n        for (int i = 0; i \n260. 只出现一次的数字 III\n给定一个整数数组 nums，其中恰好有两个元素只出现一次，其余所有元素均出现两次。 找出只出现一次的那两个元素。\n\n示例 :\n\n输入: [1,2,1,3,2,5]\n输出: [3,5]\n注意：\n\n结果输出的顺序并不重要，对于上面的例子， [5, 3] 也是正确答案。\n你的算法应该具有线性时间复杂度。你能否仅使用常数空间复杂度来实现？\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/single-number-iii\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass Solution {\n    public int[] singleNumber(int[] nums) {\n        // xor为两个结果元素异或的结果\n        int xor = 0;\n        for (int i = 0; i > k) & 1) == 1) break;\n        }\n\n        // 利用k排除掉其中一个元素，找出另一个元素\n        int res1 = 0;\n        for (int i = 0; i > k) & 1) == 1) res1 ^= nums[i];\n        }\n\n        return new int[] {res1, res1 ^ xor};\n    }\n}\n\n"},"位运算/187. 重复的DNA序列.html":{"url":"位运算/187. 重复的DNA序列.html","title":"187. 重复的DNA序列","keywords":"","body":"187. 重复的DNA序列\n所有 DNA 都由一系列缩写为 A，C，G 和 T 的核苷酸组成，例如：“ACGAATTCCG”。在研究 DNA 时，识别 DNA 中的重复序列有时会对研究非常有帮助。\n\n编写一个函数来查找 DNA 分子中所有出现超过一次的 10 个字母长的序列（子串）。\n\n\n\n示例：\n\n输入：s = \"AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT\"\n输出：[\"AAAAACCCCC\", \"CCCCCAAAAA\"]\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/repeated-dna-sequences\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass Solution {\n    public List findRepeatedDnaSequences(String s) {\n        // A -> 65 -> 0100 0001 -> 001\n        // C -> 67 -> 0100 0011 -> 011\n        // G -> 71 -> 0100 0111 -> 111\n        // T -> 84 -> 0101 0100 -> 100\n        if (s.length() ();\n        Set ret = new HashSet<>();\n        Set set = new HashSet<>();\n        char[] arr = s.toCharArray();\n        int key = 0;\n\n        for (int i = 0; i (ret);\n    }\n}\n\n"},"位运算/136. 只出现一次的数字.html":{"url":"位运算/136. 只出现一次的数字.html","title":"136. 只出现一次的数字","keywords":"","body":"136. 只出现一次的数字\n给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。\n\n说明：\n\n你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？\n\n示例 1:\n\n输入: [2,2,1]\n输出: 1\n示例 2:\n\n输入: [4,1,2,1,2]\n输出: 4\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/single-number\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n思路\n三条规则：\n交换律：a ^ b ^ c  a ^ c ^ b\n任何数于0异或为任何数 0 ^ n => n\n相同的数异或为0: n ^ n => 0\n例子：\nvar a = [2,3,2,4,4]\n2 ^ 3 ^ 2 ^ 4 ^ 4 => 2 ^ 2 ^ 4 ^ 4 ^ 3 => 0 ^ 0 ^3 => 3\n代码\nclass Solution {\n    public int singleNumber(int[] nums) {\n        int ret = 0;\n        for (int i = 0; i \n"},"剑指offer/46. 把数字翻译成字符串.html":{"url":"剑指offer/46. 把数字翻译成字符串.html","title":"46. 把数字翻译成字符串","keywords":"","body":"46. 把数字翻译成字符串\n给定一个数字，我们按照如下规则把它翻译为字符串：0 翻译成 “a” ，1 翻译成 “b”，……，11 翻译成 “l”，……，25 翻译成 “z”。一个数字可能有多个翻译。请编程实现一个函数，用来计算一个数字有多少种不同的翻译方法。\n\n\n\n示例 1:\n\n输入: 12258\n输出: 5\n解释: 12258有5种不同的翻译，分别是\"bccfi\", \"bwfi\", \"bczi\", \"mcfi\"和\"mzi\"\n\n\n提示：\n\n0 代码\nclass Solution {\n    public int translateNum(int num) {\n        if (num == 0) return 1;\n        List nums = new ArrayList<>();\n\n        while (num != 0) {\n            nums.add(num % 10);\n            num /= 10;\n        }\n        Collections.reverse(nums);\n\n        int[] dp = new int[nums.size() + 1];\n        dp[0] = 1;\n        dp[1] = 1;\n        for (int i = 1; i \n"},"剑指offer/28. 对称的二叉树.html":{"url":"剑指offer/28. 对称的二叉树.html","title":"28. 对称的二叉树","keywords":"","body":"28. 对称的二叉树\n请实现一个函数，用来判断一棵二叉树是不是对称的。如果一棵二叉树和它的镜像一样，那么它是对称的。\n\n例如，二叉树 [1,2,2,3,4,4,3] 是对称的。\n\n    1\n   / \\\n  2   2\n / \\ / \\\n3  4 4  3\n但是下面这个 [1,2,2,null,3,null,3] 则不是镜像对称的:\n\n    1\n   / \\\n  2   2\n   \\   \\\n   3    3\n\n\n\n示例 1：\n\n输入：root = [1,2,2,3,4,4,3]\n输出：true\n示例 2：\n\n输入：root = [1,2,2,null,3,null,3]\n输出：false\n\n\n限制：\n\n0 代码\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n        return isSymmetric(root, root);\n    }\n\n    private boolean isSymmetric(TreeNode node1, TreeNode node2) {\n        if (node1 == null && node2 == null) return true;\n        if (node1 == null || node2 == null) return false;\n        if (node1.val != node2.val) return false;\n\n        return isSymmetric(node1.left, node2.right) && isSymmetric(node1.right, node2.left);\n    }\n}\n\n"},"剑指offer/4.二维数组中的查找.html":{"url":"剑指offer/4.二维数组中的查找.html","title":"4.二维数组中的查找","keywords":"","body":"4.二维数组中的查找\nL240. 搜索二维矩阵 II\n编写一个高效的算法来搜索 m x n 矩阵 matrix 中的一个目标值 target。该矩阵具有以下特性：\n\n每行的元素从左到右升序排列。\n每列的元素从上到下升序排列。\n示例:\n\n现有矩阵 matrix 如下：\n\n[\n  [1,   4,  7, 11, 15],\n  [2,   5,  8, 12, 19],\n  [3,   6,  9, 16, 22],\n  [10, 13, 14, 17, 24],\n  [18, 21, 23, 26, 30]\n]\n给定 target = 5，返回 true。\n\n给定 target = 20，返回 false。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/search-a-2d-matrix-ii\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\npublic class Solution {\n    /**\n    1 10 20 30\n    2 11 21 31\n    3 12 22 32\n    4 13 23 33\n\n    观察例子，发现与右上角的元素同一行的元素都不大于它，而同一列的元素都不小于它\n    **/\n    public boolean searchMatrix(int[][] matrix, int target) {\n        if (matrix.length == 0 || matrix[0].length == 0) return false;\n\n        int row = 0, col = matrix[0].length - 1;\n\n        while (row = 0) {\n            if (target == matrix[row][col]) return true;\n            if (target \nL74. 搜索二维矩阵\n```编写一个高效的算法来判断 m x n 矩阵中，是否存在一个目标值。该矩阵具有如下特性：\n每行中的整数从左到右按升序排列。\n每行的第一个整数大于前一行的最后一个整数。\n示例 1:\n输入:\nmatrix = [\n  [1,   3,  5,  7],\n  [10, 11, 16, 20],\n  [23, 30, 34, 50]\n]\ntarget = 3\n输出: true\n示例 2:\n输入:\nmatrix = [\n  [1,   3,  5,  7],\n  [10, 11, 16, 20],\n  [23, 30, 34, 50]\n]\ntarget = 13\n输出: false\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/search-a-2d-matrix\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n## 代码\n```java\nclass Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n\n        int lrow = 0, rrow = matrix.length - 1;\n        if (rrow == -1 || matrix[0].length == 0) return false;\n        while (lrow != rrow) {\n            int mid = (lrow + rrow + 1) >>> 1;\n\n            if (target >> 1;\n\n            if (target > matrix[lrow][mid]) {\n                lcol = mid + 1;\n            } else {\n                rcol = mid;\n            }\n        }\n\n\n        return matrix[lrow][lcol] == target;\n    }\n}\n"},"剑指offer/L191. 位1的个数.html":{"url":"剑指offer/L191. 位1的个数.html","title":"L191. 位1的个数","keywords":"","body":"L191. 位1的个数\n编写一个函数，输入是一个无符号整数，返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为汉明重量）。\n\n\n\n示例 1：\n\n输入：00000000000000000000000000001011\n输出：3\n解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。\n示例 2：\n\n输入：00000000000000000000000010000000\n输出：1\n解释：输入的二进制串 00000000000000000000000010000000 中，共有一位为 '1'。\n示例 3：\n\n输入：11111111111111111111111111111101\n输出：31\n解释：输入的二进制串 11111111111111111111111111111101 中，共有 31 位为 '1'。\n\n\n提示：\n\n请注意，在某些语言（如 Java）中，没有无符号整数类型。在这种情况下，输入和输出都将被指定为有符号整数类型，并且不应影响您的实现，因为无论整数是有符号的还是无符号的，其内部的二进制表示形式都是相同的。\n在 Java 中，编译器使用二进制补码记法来表示有符号整数。因此，在上面的 示例 3 中，输入表示有符号整数 -3。\n\n\n进阶:\n如果多次调用这个函数，你将如何优化你的算法？\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/number-of-1-bits\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\npublic class Solution {\n    // you need to treat n as an unsigned value\n    public int hammingWeight(int n) {\n        int count = 0;\n        while (n != 0) {\n            count++;\n            n = n & (n - 1);\n        }\n\n        return count;\n    }\n}\n\n16. 数值的整数次方\nL50. Pow(x, n)\n实现 pow(x, n) ，即计算 x 的 n 次幂函数。\n\n示例 1:\n\n输入: 2.00000, 10\n输出: 1024.00000\n示例 2:\n\n输入: 2.10000, 3\n输出: 9.26100\n示例 3:\n\n输入: 2.00000, -2\n输出: 0.25000\n解释: 2-2 = 1/22 = 1/4 = 0.25\n说明:\n\n-100.0 代码\nclass Solution {\n    // 注意测试用例2.00000, -2147483648\n    public double myPow(double x, int n) {\n        long N = (long)n;\n        x = N > 1));\n\n        if ((N & 1) == 1) ret *= ret * x;\n        else ret *= ret;\n\n        return ret;\n    }\n}\n\n面试题17. 打印从1到最大的n位数\n输入数字 n，按顺序打印出从 1 到最大的 n 位十进制数。比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。\n\n示例 1:\n\n输入: n = 1\n输出: [1,2,3,4,5,6,7,8,9]\n\n\n说明：\n\n用返回一个整数列表来代替打印\nn 为正整数\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/da-yin-cong-1dao-zui-da-de-nwei-shu-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass Solution {\n\n    public int[] printNumbers(int n) {\n        ArrayList ret = new ArrayList<>();\n        int[] cur = new int[n];\n\n        helper(ret, cur, n, 0);\n        return ret.stream().mapToInt(i -> i).toArray();\n    }\n\n    public void helper(ArrayList ret, int[] cur, int n, int index) {\n        if (index >= n) {\n            int num = arrayToInt(cur);\n            if (num != 0) ret.add(arrayToInt(cur));\n            return;\n        }\n\n        for (int i = 0; i \n18. 删除链表中的重复元素\n在一个排序的链表中，存在重复的结点，请删除该链表中重复的结点，重复的结点不保留，返回链表头指针。 例如，链表1->2->3->3->4->4->5 处理后为 1->2->5\n代码\n/*\n public class ListNode {\n    int val;\n    ListNode next = null;\n\n    ListNode(int val) {\n        this.val = val;\n    }\n}\n*/\npublic class Solution {\n    public ListNode deleteDuplication(ListNode pHead)\n    {\n        ListNode dummy = new ListNode(-1);\n        dummy.next = pHead;\n        ListNode cur = pHead;\n        ListNode pre = dummy;\n\n        while (cur != null) {\n            if (cur.next != null && cur.val == cur.next.val) {\n                int dupNum = cur.val;\n                while (cur.val == dupNum) {\n                    pre.next = cur.next;\n                    cur = pre.next;\n                    if (cur == null) return dummy.next;\n                }\n            } else {\n                pre = cur;\n                cur = cur.next;\n            }\n        }\n\n        return dummy.next;\n\n    }\n}\n\n"},"剑指offer/43. 1～n整数中1出现的次数.html":{"url":"剑指offer/43. 1～n整数中1出现的次数.html","title":"43. 1～n整数中1出现的次数","keywords":"","body":"43. 1～n整数中1出现的次数\n输入一个整数 n ，求1～n这n个整数的十进制表示中1出现的次数。\n\n例如，输入12，1～12这些整数中包含1 的数字有1、10、11和12，1一共出现了5次。\n\n\n\n示例 1：\n\n输入：n = 12\n输出：5\n示例 2：\n\n输入：n = 13\n输出：6\n\n\n限制：\n\n1 代码\nclass Solution {\n    // 以百位上1出现的次数为例，分三种情况讨论（高位为百位左边的数字， 低位为百位右边的数字）\n    // 1. 若百位上为1，百位上出现1的数字共有 高位 * 100 + 低位 + 1 个\n    // 2。若百位上为0，百位上出现1的数字共有 高位 * 100 个\n    // 3. 若百位上大于1, 百位上出现1的数字共有 (高位 + 1) * 100 个\n\n    public int countDigitOne(int n) {\n        long i = 1;\n        int sum = 0;\n\n        while (n / i != 0) {\n            long high = n / i / 10;\n            long low = n - (n / i) * i;\n            long cur = (n / i) % 10;\n\n            if (cur == 0) sum += high * i;\n            else if (cur == 1) sum += high * i + low + 1;\n            else sum += (high + 1) * i;\n\n            i *= 10;\n        }\n\n        return sum;\n    }\n}\n\n"},"剑指offer/L153. 寻找旋转排序数组中的最小值.html":{"url":"剑指offer/L153. 寻找旋转排序数组中的最小值.html","title":"L153. 寻找旋转排序数组中的最小值","keywords":"","body":"L153. 寻找旋转排序数组中的最小值\n题目描述\n假设按照升序排序的数组在预先未知的某个点上进行了旋转。\n\n( 例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] )。\n\n请找出其中最小的元素。\n\n你可以假设数组中不存在重复元素。\n\n示例 1:\n\n输入: [3,4,5,1,2]\n输出: 1\n示例 2:\n\n输入: [4,5,6,7,0,1,2]\n输出: 0\n思路\n使用二分法可以将时间复杂度缩减到O(logn)。\n这里排除中位数的逻辑是如果mid上的值大于right上的值，则最小元素一定处于右区间（不包含mid）。\n代码\nclass Solution {\n    public int findMin(int[] nums) {\n        int left = 0, right = nums.length - 1;\n\n        while (left >> 1;\n            if (nums[mid] > nums[right]) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n\n        return nums[left];\n    }\n}\n\n"},"剑指offer/29. 顺时针打印矩阵.html":{"url":"剑指offer/29. 顺时针打印矩阵.html","title":"29. 顺时针打印矩阵","keywords":"","body":"29. 顺时针打印矩阵\n输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。\n\n\n\n示例 1：\n\n输入：matrix = [[1,2,3],[4,5,6],[7,8,9]]\n输出：[1,2,3,6,9,8,7,4,5]\n示例 2：\n\n输入：matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]\n输出：[1,2,3,4,8,12,11,10,9,5,6,7]\n\n\n限制：\n\n0 代码\nclass Solution {\n    public int[] spiralOrder(int[][] matrix) {\n         if(matrix==null||matrix.length==0||matrix[0].length==0){\n             return new int[0];\n         }\n         int[] answer=new int[matrix.length * matrix[0].length];\n         int rl=0,rh=matrix.length-1;\n         int cl=0,ch=matrix[0].length-1;\n         int cur=0;\n         while(rl=cl;j--){\n                     answer[cur++]=matrix[rh][j];\n                 }\n                 for(int i=rh-1;i>=rl+1;i--){\n                     answer[cur++]=matrix[i][cl];\n                 } \n             rl++;\n             cl++;\n             rh--;\n             ch--;\n         }\n         return answer;\n    }\n}\n\n"},"剑指offer/45. 把数组排成最小的数.html":{"url":"剑指offer/45. 把数组排成最小的数.html","title":"45. 把数组排成最小的数","keywords":"","body":"45. 把数组排成最小的数\n输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。\n\n\n\n示例 1:\n\n输入: [10,2]\n输出: \"102\"\n示例 2:\n\n输入: [3,30,34,5,9]\n输出: \"3033459\"\n\n\n提示:\n\n0 代码\nclass Solution {\n    public String minNumber(int[] nums) {\n        List numArr = new ArrayList<>();\n\n        for (int i = 0; i  {\n\n        public int compare(String s1, String s2) {\n            return (s1 + s2).compareTo(s2 + s1);\n        }\n    }\n}\n\n"},"剑指offer/36. 二叉搜索树与双向链表.html":{"url":"剑指offer/36. 二叉搜索树与双向链表.html","title":"36. 二叉搜索树与双向链表","keywords":"","body":"36. 二叉搜索树与双向链表\n输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的循环双向链表。要求不能创建任何新的节点，只能调整树中节点指针的指向。\n\n\n\n为了让您更好地理解问题，以下面的二叉搜索树为例：\n\n\n\n\n\n\n\n我们希望将这个二叉搜索树转化为双向循环链表。链表中的每个节点都有一个前驱和后继指针。对于双向循环链表，第一个节点的前驱是最后一个节点，最后一个节点的后继是第一个节点。\n\n下图展示了上面的二叉搜索树转化成的链表。“head” 表示指向链表中有最小元素的节点。\n\n\n\n\n\n\n\n特别地，我们希望可以就地完成转换操作。当转化完成以后，树中节点的左指针需要指向前驱，树中节点的右指针需要指向后继。还需要返回链表中的第一个节点的指针。\n\n\n\n注意：本题与主站 426 题相同：https://leetcode-cn.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list/\n\n注意：此题对比原题有改动。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\n/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node left;\n    public Node right;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val,Node _left,Node _right) {\n        val = _val;\n        left = _left;\n        right = _right;\n    }\n};\n*/\nclass Solution {\n    public Node treeToDoublyList(Node root) {\n        if (root == null) return null;\n\n        Node pre, cur = root, curPre = null;;\n        Node first = null, last = null;\n\n        while (cur != null) {\n            if (cur.left == null) {\n                if (first == null) first = cur;\n                cur.left = curPre;\n                if (curPre != null) curPre.right = cur;\n                curPre = cur;\n                last = cur;\n                cur = cur.right;\n            } else {\n                pre = cur.left;\n\n                while (pre.right != null && pre.right != cur) pre = pre.right;\n\n                if (pre.right == null) {\n                    pre.right = cur;\n                    cur = cur.left;\n                } else {\n                    if (curPre != null) curPre.right = cur;\n                    cur.left = curPre;\n                    curPre = cur;\n                    last = cur;\n                    cur = cur.right;\n                }\n            }\n        }\n\n        first.left = last;\n        last.right = first;\n        return first;\n    }\n}\n\n"},"剑指offer/48. 最长不含重复字符的子字符串.html":{"url":"剑指offer/48. 最长不含重复字符的子字符串.html","title":"48. 最长不含重复字符的子字符串","keywords":"","body":"48. 最长不含重复字符的子字符串\n请从字符串中找出一个最长的不包含重复字符的子字符串，计算该最长子字符串的长度。\n\n\n\n示例 1:\n\n输入: \"abcabcbb\"\n输出: 3 \n解释: 因为无重复字符的最长子串是 \"abc\"，所以其长度为 3。\n示例 2:\n\n输入: \"bbbbb\"\n输出: 1\n解释: 因为无重复字符的最长子串是 \"b\"，所以其长度为 1。\n示例 3:\n\n输入: \"pwwkew\"\n输出: 3\n解释: 因为无重复字符的最长子串是 \"wke\"，所以其长度为 3。\n     请注意，你的答案必须是 子串 的长度，\"pwke\" 是一个子序列，不是子串。\n\n\n提示：\n\ns.length 代码\nclass Solution {\n    public int lengthOfLongestSubstring(String s) {\n        if (s.length() == 0) return 0;\n\n        Map map = new HashMap<>();\n\n        int len = 1;\n        int left = 0, right = 0;\n        while (right  1) {\n                map.put(s.charAt(left), map.get(s.charAt(left)) - 1);\n                left++;\n            }\n            len = Math.max(len, right - left + 1);\n            right++;\n        }\n\n        return len;\n\n    }\n}\n\n"},"剑指offer/24.反转链表.html":{"url":"剑指offer/24.反转链表.html","title":"24.反转链表","keywords":"","body":"24.反转链表\n定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。\n\n\n\n示例:\n\n输入: 1->2->3->4->5->NULL\n输出: 5->4->3->2->1->NULL\n\n\n限制：\n\n0 代码（递归）\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        if (head == null || head.next == null) return head;\n        ListNode temp = reverseList(head.next);\n        head.next.next = head;\n        head.next = null;\n        return temp;\n    }\n}\n\n代码（迭代）\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        ListNode cur = head, pre = null, next = null;\n\n        while (cur != null) {\n            next = cur.next;\n            cur.next = pre;\n            pre = cur;\n            cur = next;\n        }\n\n        return pre;\n    }\n}\n\n"},"剑指offer/35. 复杂链表的复制.html":{"url":"剑指offer/35. 复杂链表的复制.html","title":"35. 复杂链表的复制","keywords":"","body":"35. 复杂链表的复制\n请实现 copyRandomList 函数，复制一个复杂链表。在复杂链表中，每个节点除了有一个 next 指针指向下一个节点，还有一个 random 指针指向链表中的任意节点或者 null。\n\n\n\n示例 1：\n\n\n\n输入：head = [[7,null],[13,0],[11,4],[10,2],[1,0]]\n输出：[[7,null],[13,0],[11,4],[10,2],[1,0]]\n示例 2：\n\n\n\n输入：head = [[1,1],[2,1]]\n输出：[[1,1],[2,1]]\n示例 3：\n\n\n\n输入：head = [[3,null],[3,0],[3,null]]\n输出：[[3,null],[3,0],[3,null]]\n示例 4：\n\n输入：head = []\n输出：[]\n解释：给定的链表为空（空指针），因此返回 null。\n\n\n提示：\n\n-10000 代码\n/*\n// Definition for a Node.\nclass Node {\n    int val;\n    Node next;\n    Node random;\n\n    public Node(int val) {\n        this.val = val;\n        this.next = null;\n        this.random = null;\n    }\n}\n*/\nclass Solution {\n    public Node copyRandomList(Node head) {\n        Node cur = head;\n        while (cur != null) {\n            Node temp = new Node(cur.val);\n            temp.next = cur.next;\n            cur.next = temp;\n            cur = cur.next.next;\n        }\n\n        cur = head;\n        while (cur != null) {\n            if (cur.random != null) cur.next.random = cur.random.next;\n            cur = cur.next.next;\n        }\n\n        cur = head;\n        Node dummy = new Node(-1);\n        Node dummyCur = dummy;\n        while (cur != null) {\n            dummyCur.next = cur.next;\n            dummyCur = dummyCur.next;\n            cur.next = cur.next.next;\n            cur = cur.next;\n        }\n\n        return dummy.next;\n    }\n}\n\n"},"剑指offer/30. 包含min函数的栈.html":{"url":"剑指offer/30. 包含min函数的栈.html","title":"30. 包含min函数的栈","keywords":"","body":"30. 包含min函数的栈\n定义栈的数据结构，请在该类型中实现一个能够得到栈的最小元素的 min 函数在该栈中，调用 min、push 及 pop 的时间复杂度都是 O(1)。\n\n\n\n示例:\n\nMinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.min();   --> 返回 -3.\nminStack.pop();\nminStack.top();      --> 返回 0.\nminStack.min();   --> 返回 -2.\n\n\n提示：\n\n各函数的调用总次数不超过 20000 次\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/bao-han-minhan-shu-de-zhan-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass MinStack {\n    Stack st1, st2;\n    /** initialize your data structure here. */\n    public MinStack() {\n        st1 = new Stack<>();\n        st2 = new Stack<>();\n    }\n\n    public void push(int x) {\n        st1.push(x);\n        if (st2.empty() || x \n"},"剑指offer/26. 树的子结构.html":{"url":"剑指offer/26. 树的子结构.html","title":"26. 树的子结构","keywords":"","body":"26. 树的子结构\n输入两棵二叉树A和B，判断B是不是A的子结构。(约定空树不是任意一个树的子结构)\n\nB是A的子结构， 即 A中有出现和B相同的结构和节点值。\n\n例如:\n给定的树 A:\n\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n给定的树 B：\n\n   4 \n  /\n 1\n返回 true，因为 B 与 A 的一个子树拥有相同的结构和节点值。\n\n示例 1：\n\n输入：A = [1,2,3], B = [3,1]\n输出：false\n示例 2：\n\n输入：A = [3,4,5,1,2], B = [4,1]\n输出：true\n限制：\n\n0 代码\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public boolean isSubStructure(TreeNode A, TreeNode B) {\n        if (A == null || B == null) return false;\n        return helper(A, B) || isSubStructure(A.left, B) || isSubStructure(A.right, B);\n    }\n\n    private boolean helper(TreeNode A, TreeNode B) {\n        if (B == null) return true;\n        if (A == null) return false;\n\n        if (A.val != B.val) return false;\n\n        return helper(A.left, B.left) && helper(A.right, B.right);\n    }\n}\n\n"},"剑指offer/32 - II. 从上到下打印二叉树 II.html":{"url":"剑指offer/32 - II. 从上到下打印二叉树 II.html","title":"32 - II. 从上到下打印二叉树 II","keywords":"","body":"32 - II. 从上到下打印二叉树 II\n从上到下按层打印二叉树，同一层的节点按从左到右的顺序打印，每一层打印到一行。\n\n\n\n例如:\n给定二叉树: [3,9,20,null,null,15,7],\n\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n返回其层次遍历结果：\n\n[\n  [3],\n  [9,20],\n  [15,7]\n]\n\n\n提示：\n\n节点总数 代码\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public List> levelOrder(TreeNode root) {\n        if (root == null) return new ArrayList<>();\n        List> ret = new ArrayList<>();\n        Queue que = new LinkedList<>();\n\n        que.offer(root);\n        int nextLevel = 0, curLevel = 1;\n\n        while (!que.isEmpty()) {\n            List list = new ArrayList<>();\n            while (curLevel-- > 0) {\n                TreeNode node = que.poll();\n                list.add(node.val);\n                if (node.left != null) {\n                    que.offer(node.left);\n                    nextLevel++;\n                }\n                if (node.right != null) {\n                    que.offer(node.right);\n                    nextLevel++;\n                }\n            }\n            ret.add(list);\n\n            curLevel = nextLevel;\n            nextLevel = 0;\n        }\n\n        return ret;\n    }\n}\n\n"},"剑指offer/22. 链表中倒数第k个节点.html":{"url":"剑指offer/22. 链表中倒数第k个节点.html","title":"22. 链表中倒数第k个节点","keywords":"","body":"22. 链表中倒数第k个节点\n输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。例如，一个链表有6个节点，从头节点开始，它们的值依次是1、2、3、4、5、6。这个链表的倒数第3个节点是值为4的节点。\n\n\n\n示例：\n\n给定一个链表: 1->2->3->4->5, 和 k = 2.\n\n返回链表 4->5.\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n注意\n这道题的考点在于代码的鲁棒性，需要考虑到head为null以及链表长度小于k的情况（如果k是无符号整数还需要考虑k等于0的情况）\n代码\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode getKthFromEnd(ListNode head, int k) {\n        if (head == null) return null;\n        ListNode node1 = head;\n        ListNode node2 = node1;\n        while (k-- > 1) {\n            if (node2.next == null) return null;\n            node2 = node2.next;\n        }\n\n        while (node2.next != null) {\n            node2 = node2.next;\n            node1 = node1.next;\n        }\n\n        return node1;\n    }\n}\n\n"},"剑指offer/49. 丑数.html":{"url":"剑指offer/49. 丑数.html","title":"49. 丑数","keywords":"","body":"49. 丑数\n我们把只包含因子 2、3 和 5 的数称作丑数（Ugly Number）。求按从小到大的顺序的第 n 个丑数。\n\n\n\n示例:\n\n输入: n = 10\n输出: 12\n解释: 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 是前 10 个丑数。\n说明:  \n\n1 是丑数。\nn 不超过1690。\n注意：本题与主站 264 题相同：https://leetcode-cn.com/problems/ugly-number-ii/\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/chou-shu-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass Solution {\n    public int nthUglyNumber(int n) {\n        int[] nums = new int[n];\n        nums[0] = 1;\n\n        int index = 0, i = 0, j = 0, k = 0;\n\n        while (index \n"},"剑指offer/19. 正则表达式匹配.html":{"url":"剑指offer/19. 正则表达式匹配.html","title":"19. 正则表达式匹配","keywords":"","body":"19. 正则表达式匹配\n给你一个字符串 s 和一个字符规律 p，请你来实现一个支持 '.' 和 '*' 的正则表达式匹配。\n\n'.' 匹配任意单个字符\n'*' 匹配零个或多个前面的那一个元素\n所谓匹配，是要涵盖 整个 字符串 s的，而不是部分字符串。\n\n说明:\n\ns 可能为空，且只包含从 a-z 的小写字母。\np 可能为空，且只包含从 a-z 的小写字母，以及字符 . 和 *。\n示例 1:\n\n输入:\ns = \"aa\"\np = \"a\"\n输出: false\n解释: \"a\" 无法匹配 \"aa\" 整个字符串。\n示例 2:\n\n输入:\ns = \"aa\"\np = \"a*\"\n输出: true\n解释: 因为 '*' 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 'a'。因此，字符串 \"aa\" 可被视为 'a' 重复了一次。\n示例 3:\n\n输入:\ns = \"ab\"\np = \".*\"\n输出: true\n解释: \".*\" 表示可匹配零个或多个（'*'）任意字符（'.'）。\n示例 4:\n\n输入:\ns = \"aab\"\np = \"c*a*b\"\n输出: true\n解释: 因为 '*' 表示零个或多个，这里 'c' 为 0 个, 'a' 被重复一次。因此可以匹配字符串 \"aab\"。\n示例 5:\n\n输入:\ns = \"mississippi\"\np = \"mis*is*p*.\"\n输出: false\n代码（DP）\nclass Solution {\n    public boolean isMatch(String s, String p) {\n        boolean[][] dp = new boolean[s.length() + 1][p.length() + 1];\n        dp[0][0] = true;\n\n        for (int i = 0; i  0 && (s.charAt(i - 1) == p.charAt(j - 2) || p.charAt(j - 2) == '.') && dp[i - 1][j]);\n                } else {\n                    dp[i][j] = i > 0 && (s.charAt(i - 1) == p.charAt(j - 1) || p.charAt(j - 1) == '.') && dp[i - 1][j - 1];\n                }\n            }\n        }\n\n        return dp[s.length()][p.length()];\n\n    }\n}\n\n"},"剑指offer/39. 数组中出现次数超过一半的数字.html":{"url":"剑指offer/39. 数组中出现次数超过一半的数字.html","title":"39. 数组中出现次数超过一半的数字","keywords":"","body":"39. 数组中出现次数超过一半的数字\n数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。\n\n\n\n你可以假设数组是非空的，并且给定的数组总是存在多数元素。\n\n\n\n示例 1:\n\n输入: [1, 2, 3, 2, 2, 2, 5, 4, 2]\n输出: 2\n\n\n限制：\n\n1 代码1\nclass Solution {\n    public int majorityElement(int[] nums) {\n        return majorityElement(nums, 0, nums.length - 1);\n    }\n\n    public int majorityElement(int[] nums, int start, int end) {\n        if (end == start) return nums[start];\n\n        int pivotIndex = start + new Random().nextInt(end - start + 1);\n        swap(nums, pivotIndex, end);\n\n        int parIndex = start;\n        for (int i = start; i >> 1;\n        if (parIndex == mid) return nums[parIndex];\n        else if (parIndex \n代码2\nclass Solution {\n    public int majorityElement(int[] nums) {\n        int count = 0, lastNum = -1;\n\n        for (int i = 0; i \n"},"剑指offer/20.表示数值的字符串.html":{"url":"剑指offer/20.表示数值的字符串.html","title":"20.表示数值的字符串","keywords":"","body":"20.表示数值的字符串\n请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。例如，字符串\"+100\"、\"5e2\"、\"-123\"、\"3.1416\"、\"0123\"及\"-1E-16\"都表示数值，但\"12e\"、\"1a3.14\"、\"1.2.3\"、\"+-5\"及\"12e+5.4\"都不是。\n\n\n\n注意：本题与主站 65 题相同：https://leetcode-cn.com/problems/valid-number/\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/biao-shi-shu-zhi-de-zi-fu-chuan-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass Solution {\n    private int index = 0;\n    public boolean isNumber(String s) {\n        char[] sArr = s.toCharArray();\n        while(index = s.length){\n            return false;\n        }\n        int before = index;\n        while(index = '0' && s[index]  before;\n    }\n    private boolean scanNum(char[] s){\n        if(index >= s.length){\n            return false;\n        }\n        if(s[index] == '+' || s[index] == '-')\n            index++;\n        return scanUnsignedNum(s);\n    }\n}\n\n"},"剑指offer/14. 剪梯子.html":{"url":"剑指offer/14. 剪梯子.html","title":"14. 剪梯子","keywords":"","body":"14. 剪梯子\n给你一根长度为n的绳子，请把绳子剪成整数长的m段（m、n都是整数，n>1并且m>1），每段绳子的长度记为k[0],k[1],...,k[m]。请问k[0]xk[1]x...xk[m]可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。\n输入描述:\n输入一个数n，意义见题面。（2 代码\npublic class Solution {\n    public int cutRope(int target) {\n        int[] dp = new int[target + 1];\n        dp[1] = dp[2] = 1;\n        for (int i = 3; i \n"},"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html":{"url":"剑指offer/L154. 寻找旋转排序数组中的最小值 II.html","title":"L154. 寻找旋转排序数组中的最小值 II","keywords":"","body":"L154. 寻找旋转排序数组中的最小值 II\n题目描述\n假设按照升序排序的数组在预先未知的某个点上进行了旋转。\n\n( 例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] )。\n\n请找出其中最小的元素。\n\n注意数组中可能存在重复的元素。\n\n示例 1：\n\n输入: [1,3,5]\n输出: 1\n示例 2：\n\n输入: [2,2,2,0,1]\n输出: 0\n说明：\n\n这道题是 寻找旋转排序数组中的最小值 的延伸题目。\n允许重复会影响算法的时间复杂度吗？会如何影响，为什么？\n思路\n在153的基础上增加了重复元素的情况。这里需要额外处理中间元素与末尾元素相同的情况。这种情况下无法判断最小元素是在左区间还是右区间，例如：[2, 0, 1, 2, 2, 2, 2]与[2, 2, 2, 2, 0, 1, 2]，因此只能通过减少right来缩小区间进行进一步的搜索。该算法在最坏情况下的时间复杂度为O(n)。\n代码\nclass Solution {\n    public int findMin(int[] nums) {\n        int left = 0, right = nums.length - 1;\n\n        while (left >> 1;\n            if (nums[mid] == nums[right]) {\n                right--;\n            } else if (nums[mid] > nums[right]) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n\n        return nums[left];\n    }\n}\n\n"},"剑指offer/9. 用两个栈实现队列.html":{"url":"剑指offer/9. 用两个栈实现队列.html","title":"9. 用两个栈实现队列","keywords":"","body":"9. 用两个栈实现队列\nL232. 用栈实现队列\n使用栈实现队列的下列操作：\n\npush(x) -- 将一个元素放入队列的尾部。\npop() -- 从队列首部移除元素。\npeek() -- 返回队列首部的元素。\nempty() -- 返回队列是否为空。\n示例:\n\nMyQueue queue = new MyQueue();\n\nqueue.push(1);\nqueue.push(2);  \nqueue.peek();  // 返回 1\nqueue.pop();   // 返回 1\nqueue.empty(); // 返回 false\n说明:\n\n你只能使用标准的栈操作 -- 也就是只有 push to top, peek/pop from top, size, 和 is empty 操作是合法的。\n你所使用的语言也许不支持栈。你可以使用 list 或者 deque（双端队列）来模拟一个栈，只要是标准的栈操作即可。\n假设所有操作都是有效的 （例如，一个空的队列不会调用 pop 或者 peek 操作）。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/implement-queue-using-stacks\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass MyQueue {\n\n    Stack stack1, stack2;\n    /** Initialize your data structure here. */\n    public MyQueue() {\n        stack1 = new Stack<>();\n        stack2 = new Stack<>();\n    }\n\n    /** Push element x to the back of queue. */\n    public void push(int x) {\n        stack1.push(x);\n    }\n\n    /** Removes the element from in front of queue and returns that element. */\n    public int pop() {\n        int ret = peek();\n        stack2.pop();\n        return ret;\n    }\n\n    /** Get the front element. */\n    public int peek() {\n        if (!stack2.empty()) {\n            return stack2.peek();\n        }\n\n        while (!stack1.empty()) {\n            stack2.push(stack1.pop());\n        }\n        return stack2.peek();\n    }\n\n    /** Returns whether the queue is empty. */\n    public boolean empty() {\n        return stack1.empty() && stack2.empty();\n    }\n}\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue obj = new MyQueue();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.peek();\n * boolean param_4 = obj.empty();\n */\n\nL225. 用队列实现栈\n使用队列实现栈的下列操作：\n\npush(x) -- 元素 x 入栈\npop() -- 移除栈顶元素\ntop() -- 获取栈顶元素\nempty() -- 返回栈是否为空\n注意:\n\n你只能使用队列的基本操作-- 也就是 push to back, peek/pop from front, size, 和 is empty 这些操作是合法的。\n你所使用的语言也许不支持队列。 你可以使用 list 或者 deque（双端队列）来模拟一个队列 , 只要是标准的队列操作即可。\n你可以假设所有操作都是有效的（例如, 对一个空的栈不会调用 pop 或者 top 操作）。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/implement-stack-using-queues\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass MyStack {\n\n    Queue que1, que2;\n\n    /** Initialize your data structure here. */\n    public MyStack() {\n        que1 = new LinkedList<>();\n        que2 = new LinkedList<>();    \n    }\n\n    /** Push element x onto stack. */\n    public void push(int x) {\n        if (que1.size() == 0 && que2.size() == 0) que1.add(x);\n        else if (que1.size() != 0) que1.add(x);\n        else que2.add(x);\n    }\n\n    /** Removes the element on top of the stack and returns that element. */\n    public int pop() {\n        int ret;\n        if (que1.size() == 0) {\n            while (que2.size() != 1) que1.add(que2.poll());\n            ret = que2.poll();\n        } else {\n            while (que1.size() != 1) que2.add(que1.poll());\n            ret = que1.poll();\n        }\n        return ret;\n    }\n\n    /** Get the top element. */\n    public int top() {\n        int ret;\n        if (que1.size() == 0) {\n            while (que2.size() != 1) que1.add(que2.poll());\n            ret = que2.poll();\n            que1.add(ret);\n        } else {\n            while (que1.size() != 1) que2.add(que1.poll());\n            ret = que1.poll();\n            que2.add(ret);\n        }\n        return ret;\n    }\n\n    /** Returns whether the stack is empty. */\n    public boolean empty() {\n        return que1.size() == 0 && que2.size() == 0;\n    }\n}\n\n/**\n * Your MyStack object will be instantiated and called as such:\n * MyStack obj = new MyStack();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.top();\n * boolean param_4 = obj.empty();\n */\n\n11：旋转数组的最小数字\n"},"剑指offer/44. 数字序列中某一位的数字.html":{"url":"剑指offer/44. 数字序列中某一位的数字.html","title":"44. 数字序列中某一位的数字","keywords":"","body":"44. 数字序列中某一位的数字\n数字以0123456789101112131415…的格式序列化到一个字符序列中。在这个序列中，第5位（从下标0开始计数）是5，第13位是1，第19位是4，等等。\n\n请写一个函数，求任意第n位对应的数字。\n\n\n\n示例 1：\n\n输入：n = 3\n输出：3\n示例 2：\n\n输入：n = 11\n输出：0\n\n\n限制：\n\n0 代码\nclass Solution {\n    public int findNthDigit(int n) {\n        if(n \n"},"剑指offer/40. 最小的k个数.html":{"url":"剑指offer/40. 最小的k个数.html","title":"40. 最小的k个数","keywords":"","body":"40. 最小的k个数\n输入整数数组 arr ，找出其中最小的 k 个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。\n\n\n\n示例 1：\n\n输入：arr = [3,2,1], k = 2\n输出：[1,2] 或者 [2,1]\n示例 2：\n\n输入：arr = [0,1,2,1], k = 1\n输出：[0]\n\n\n限制：\n\n0 代码\nclass Solution {\n    public int[] getLeastNumbers(int[] arr, int k) {\n        if (k == 0) return new int[0];\n        getLeastNumbers(arr, 0, arr.length - 1, k - 1);\n        int[] ret = new int[k];\n        for (int i = 0; i \n"},"剑指offer/3. 数组中的重复数字.html":{"url":"剑指offer/3. 数组中的重复数字.html","title":"3. 数组中的重复数字","keywords":"","body":"3. 数组中的重复数字\n在一个长度为n的数组里的所有数字都在0到n-1的范围内。 数组中某些数字是重复的，但不知道有几个数字是重复的。也不知道每个数字重复几次。请找出数组中任意一个重复的数字。 例如，如果输入长度为7的数组{2,3,1,0,2,5,3}，那么对应的输出是第一个重复的数字2。\n代码\npublic class Solution {\n    // Parameters:\n    //    numbers:     an array of integers\n    //    length:      the length of array numbers\n    //    duplication: (Output) the duplicated number in the array number,length of duplication array is 1,so using duplication[0] = ? in implementation;\n    //                  Here duplication like pointor in C/C++, duplication[0] equal *duplication in C/C++\n    //    这里要特别注意~返回任意重复的一个，赋值duplication[0]\n    // Return value:       true if the input is valid, and there are some duplications in the array number\n    //                     otherwise false\n    public boolean duplicate(int numbers[],int length,int [] duplication) {\n        if (length == 0) return false;\n\n        for (int index = 0; index \n"},"剑指offer/L287. 寻找重复数.html":{"url":"剑指offer/L287. 寻找重复数.html","title":"L287. 寻找重复数","keywords":"","body":"L287. 寻找重复数\n题目描述\n给定一个包含 n + 1 个整数的数组 nums，其数字都在 1 到 n 之间（包括 1 和 n），可知至少存在一个重复的整数。假设只有一个重复的整数，找出这个重复的数。\n\n示例 1:\n\n输入: [1,3,4,2,2]\n输出: 2\n示例 2:\n\n输入: [3,1,3,4,2]\n输出: 3\n说明：\n\n不能更改原数组（假设数组是只读的）。\n只能使用额外的 O(1) 的空间。\n时间复杂度小于 O(n2) 。\n数组中只有一个重复的数字，但它可能不止重复出现一次。\n思路1（二分法）\n这道题的关键是对要定位的“数”做二分，而不是对数组的索引做二分。要定位的“数”根据题意在 1 和 n 之间，每一次二分都可以将搜索区间缩小一半。\n代码1\npublic class Solution {\n\n    public int findDuplicate(int[] nums) {\n        int len = nums.length;\n        int left = 1;\n        int right = len - 1;\n        while (left >> 1;\n            int counter = 0;\n            for (int num : nums) {\n                if (num  mid) {\n                right = mid;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return left;\n    }\n}\n\n思路2（快慢指针）\n将数组内的元素值看作是该节点指向的下个节点在数组中的索引值，这样就可以将数组转化为链表进行处理。由于元素值是从1开始，而索引值是从0开始，因此链表的长度为最大元素值加1，也就是说链表中一定存在两个节点有着相同的值，它们指向同一个节点，也即链表中有环的存在。因此本题可以转化为寻找链表中环入口的问题。具体可参考题目环形链表 II的解法：\n设置快慢指针从A1出发。假设slow和fast在A3相遇，根据以上公式（fast在与slow相遇前走过了k圈）。head从A1出发，slow从A3出发，经过a步以后，两点将在A2（环的入口）相遇。\n代码2\npublic class Solution {\n\n    public int findDuplicate(int[] nums) {\n        int slow = 0, fast = 0;\n\n        while (slow != fast || fast == 0) {\n            slow = nums[slow];\n            fast = nums[nums[fast]];\n        }\n\n        int res = 0;\n        while (res != slow) {\n            res = nums[res];\n            slow = nums[slow];\n        }\n\n        return res;\n    }\n}\n\n"},"剑指offer/32 - III. 从上到下打印二叉树 III.html":{"url":"剑指offer/32 - III. 从上到下打印二叉树 III.html","title":"32 - III. 从上到下打印二叉树 III","keywords":"","body":"32 - III. 从上到下打印二叉树 III\n请实现一个函数按照之字形顺序打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右到左的顺序打印，第三行再按照从左到右的顺序打印，其他行以此类推。\n\n\n\n例如:\n给定二叉树: [3,9,20,null,null,15,7],\n\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n返回其层次遍历结果：\n\n[\n  [3],\n  [20,9],\n  [15,7]\n]\n\n\n提示：\n\n节点总数 代码\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public List> levelOrder(TreeNode root) {\n        if (root == null) return new ArrayList<>();\n        List> ret = new ArrayList<>();\n\n        Stack st1 = new Stack<>();\n        Stack st2 = new Stack<>();\n\n        st1.push(root);\n\n        while (!st1.empty() || !st2.empty()) {\n            List list = new ArrayList<>();\n            if (!st1.empty()) {\n                while (!st1.empty()) {\n                    TreeNode node = st1.pop();\n                    list.add(node.val);\n                    if (node.left != null) st2.push(node.left);\n                    if (node.right != null) st2.push(node.right);\n                }\n            } else {\n                while (!st2.empty()) {\n                    TreeNode node = st2.pop();\n                    list.add(node.val);\n                    if (node.right != null) st1.push(node.right);\n                    if (node.left != null) st1.push(node.left);\n                }\n            }\n            ret.add(list);\n        }\n        return ret;\n    }\n}\n\n"},"剑指offer/31. 栈的压入、弹出序列.html":{"url":"剑指offer/31. 栈的压入、弹出序列.html","title":"31. 栈的压入、弹出序列","keywords":"","body":"31. 栈的压入、弹出序列\n输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如，序列 {1,2,3,4,5} 是某栈的压栈序列，序列 {4,5,3,2,1} 是该压栈序列对应的一个弹出序列，但 {4,3,5,1,2} 就不可能是该压栈序列的弹出序列。\n\n\n\n示例 1：\n\n输入：pushed = [1,2,3,4,5], popped = [4,5,3,2,1]\n输出：true\n解释：我们可以按以下顺序执行：\npush(1), push(2), push(3), push(4), pop() -> 4,\npush(5), pop() -> 5, pop() -> 3, pop() -> 2, pop() -> 1\n示例 2：\n\n输入：pushed = [1,2,3,4,5], popped = [4,3,5,1,2]\n输出：false\n解释：1 不能在 2 之前弹出。\n\n\n提示：\n\n0 代码\nclass Solution {\n    public boolean validateStackSequences(int[] pushed, int[] popped) {\n        if (pushed.length != popped.length) return false;\n\n        Stack st = new Stack<>();\n        int i = 0, j = 0;\n\n        while (i \n"},"剑指offer/15. 二进制中1的个数.html":{"url":"剑指offer/15. 二进制中1的个数.html","title":"15. 二进制中1的个数","keywords":"","body":"15. 二进制中1的个数\n"},"剑指offer/33. 二叉搜索树的后序遍历序列.html":{"url":"剑指offer/33. 二叉搜索树的后序遍历序列.html","title":"33. 二叉搜索树的后序遍历序列","keywords":"","body":"33. 二叉搜索树的后序遍历序列\n输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历结果。如果是则返回 true，否则返回 false。假设输入的数组的任意两个数字都互不相同。\n\n\n\n参考以下这颗二叉搜索树：\n\n     5\n    / \\\n   2   6\n  / \\\n 1   3\n示例 1：\n\n输入: [1,6,3,2,5]\n输出: false\n示例 2：\n\n输入: [1,3,2,6,5]\n输出: true\n\n\n提示：\n\n数组长度 代码\nclass Solution {\n    public boolean verifyPostorder(int[] postorder) {\n        return helper(postorder, 0, postorder.length - 1);\n    }\n\n    public boolean helper(int[] postorder, int start, int end) {\n        if (end  postorder[end]) pivotIndex = i;\n            if ((pivotIndex != -1) && (postorder[i] \n"},"剑指offer/41. 数据流中的中位数.html":{"url":"剑指offer/41. 数据流中的中位数.html","title":"41. 数据流中的中位数","keywords":"","body":"41. 数据流中的中位数\n如何得到一个数据流中的中位数？如果从数据流中读出奇数个数值，那么中位数就是所有数值排序之后位于中间的数值。如果从数据流中读出偶数个数值，那么中位数就是所有数值排序之后中间两个数的平均值。\n\n例如，\n\n[2,3,4] 的中位数是 3\n\n[2,3] 的中位数是 (2 + 3) / 2 = 2.5\n\n设计一个支持以下两种操作的数据结构：\n\nvoid addNum(int num) - 从数据流中添加一个整数到数据结构中。\ndouble findMedian() - 返回目前所有元素的中位数。\n示例 1：\n\n输入：\n[\"MedianFinder\",\"addNum\",\"addNum\",\"findMedian\",\"addNum\",\"findMedian\"]\n[[],[1],[2],[],[3],[]]\n输出：[null,null,null,1.50000,null,2.00000]\n示例 2：\n\n输入：\n[\"MedianFinder\",\"addNum\",\"findMedian\",\"addNum\",\"findMedian\"]\n[[],[2],[],[3],[]]\n输出：[null,null,2.00000,null,2.50000]\n\n\n限制：\n\n最多会对 addNum、findMedia进行 50000 次调用。\n注意：本题与主站 295 题相同：https://leetcode-cn.com/problems/find-median-from-data-stream/\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/shu-ju-liu-zhong-de-zhong-wei-shu-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n代码\nclass MedianFinder {\n    PriorityQueue maxHeap, minHeap;\n    int curIndex;\n\n    /** initialize your data structure here. */\n    public MedianFinder() {\n        minHeap = new PriorityQueue<>();\n        maxHeap = new PriorityQueue<>((i1, i2) -> i2 - i1);\n        curIndex = 0;\n    }\n\n    public void addNum(int num) {\n        if ((curIndex & 1) == 0) {\n            if (maxHeap.isEmpty() || num >= maxHeap.peek()) {\n                minHeap.offer(num);\n            } else {\n                maxHeap.offer(num);\n                minHeap.offer(maxHeap.poll());\n            }\n        } else {\n            if (minHeap.isEmpty() || num \n"},"剑指offer/8.二叉树的下一个节点.html":{"url":"剑指offer/8.二叉树的下一个节点.html","title":"8.二叉树的下一个节点","keywords":"","body":"8.二叉树的下一个节点\n给定一个二叉树和其中的一个结点，请找出中序遍历顺序的下一个结点并且返回。注意，树中的结点不仅包含左右子结点，同时包含指向父结点的指针。\n代码\n/*\npublic class TreeLinkNode {\n    int val;\n    TreeLinkNode left = null;\n    TreeLinkNode right = null;\n    TreeLinkNode next = null;\n\n    TreeLinkNode(int val) {\n        this.val = val;\n    }\n}\n*/\npublic class Solution {\n    public TreeLinkNode GetNext(TreeLinkNode pNode)\n    {\n        if (pNode == null) return null;\n        if (pNode.right != null) {\n            TreeLinkNode node = pNode.right;\n            while (node.left != null) node = node.left;\n            return node;\n        }\n\n        TreeLinkNode par = pNode.next;\n        while (par != null) {\n            if (par.left == pNode) return par;\n            pNode = par;\n            par = par.next;\n        }\n\n        return null;\n    }\n}\n\n"}}}